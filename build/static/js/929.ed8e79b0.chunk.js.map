{"version":3,"file":"static/js/929.ed8e79b0.chunk.js","mappings":"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","sources":["../node_modules/bezier-js/index.js","../node_modules/bezier-js/lib/bezier.js","../node_modules/bezier-js/lib/normalise-svg.js","../node_modules/bezier-js/lib/poly-bezier.js","../node_modules/bezier-js/lib/svg-to-beziers.js","../node_modules/bezier-js/lib/utils.js","../node_modules/clone/clone.js","../node_modules/graham_scan/graham_scan.min.js","../node_modules/kdbush/src/sort.js","../node_modules/kdbush/src/within.js","../node_modules/kdbush/src/index.js","../node_modules/kdbush/src/range.js","../node_modules/makerjs/dist/index.js"],"sourcesContent":["module.exports = require('./lib/bezier');\n","/**\n  A javascript Bezier curve library by Pomax.\n\n  Based on http://pomax.github.io/bezierinfo\n\n  This code is MIT licensed.\n**/\n(function() {\n  \"use strict\";\n\n  // math-inlining.\n  var abs = Math.abs,\n    min = Math.min,\n    max = Math.max,\n    cos = Math.cos,\n    sin = Math.sin,\n    acos = Math.acos,\n    sqrt = Math.sqrt,\n    pi = Math.PI,\n    // a zero coordinate, which is surprisingly useful\n    ZERO = { x: 0, y: 0, z: 0 };\n\n  // quite needed\n  var utils = require(\"./utils.js\");\n\n  // only used for outlines atm.\n  var PolyBezier = require(\"./poly-bezier.js\");\n\n  /**\n   * Bezier curve constructor. The constructor argument can be one of three things:\n   *\n   * 1. array/4 of {x:..., y:..., z:...}, z optional\n   * 2. numerical array/8 ordered x1,y1,x2,y2,x3,y3,x4,y4\n   * 3. numerical array/12 ordered x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4\n   *\n   */\n  var Bezier = function(coords) {\n    var args = coords && coords.forEach ? coords : [].slice.call(arguments);\n    var coordlen = false;\n    if (typeof args[0] === \"object\") {\n      coordlen = args.length;\n      var newargs = [];\n      args.forEach(function(point) {\n        [\"x\", \"y\", \"z\"].forEach(function(d) {\n          if (typeof point[d] !== \"undefined\") {\n            newargs.push(point[d]);\n          }\n        });\n      });\n      args = newargs;\n    }\n    var higher = false;\n    var len = args.length;\n    if (coordlen) {\n      if (coordlen > 4) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n        higher = true;\n      }\n    } else {\n      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n      }\n    }\n    var _3d =\n      (!higher && (len === 9 || len === 12)) ||\n      (coords && coords[0] && typeof coords[0].z !== \"undefined\");\n    this._3d = _3d;\n    var points = [];\n    for (var idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n      var point = {\n        x: args[idx],\n        y: args[idx + 1]\n      };\n      if (_3d) {\n        point.z = args[idx + 2];\n      }\n      points.push(point);\n    }\n    this.order = points.length - 1;\n    this.points = points;\n    var dims = [\"x\", \"y\"];\n    if (_3d) dims.push(\"z\");\n    this.dims = dims;\n    this.dimlen = dims.length;\n\n    (function(curve) {\n      var order = curve.order;\n      var points = curve.points;\n      var a = utils.align(points, { p1: points[0], p2: points[order] });\n      for (var i = 0; i < a.length; i++) {\n        if (abs(a[i].y) > 0.0001) {\n          curve._linear = false;\n          return;\n        }\n      }\n      curve._linear = true;\n    })(this);\n\n    this._t1 = 0;\n    this._t2 = 1;\n    this.update();\n  };\n\n  var svgToBeziers = require(\"./svg-to-beziers\");\n\n  /**\n   * turn an svg <path> d attribute into a sequence of Bezier segments.\n   */\n  Bezier.SVGtoBeziers = function(d) {\n    return svgToBeziers(Bezier, d);\n  };\n\n  function getABC(n, S, B, E, t) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    var u = utils.projectionratio(t, n),\n      um = 1 - u,\n      C = {\n        x: u * S.x + um * E.x,\n        y: u * S.y + um * E.y\n      },\n      s = utils.abcratio(t, n),\n      A = {\n        x: B.x + (B.x - C.x) / s,\n        y: B.y + (B.y - C.y) / s\n      };\n    return { A: A, B: B, C: C };\n  }\n\n  Bezier.quadraticFromPoints = function(p1, p2, p3, t) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    // shortcuts, although they're really dumb\n    if (t === 0) {\n      return new Bezier(p2, p2, p3);\n    }\n    if (t === 1) {\n      return new Bezier(p1, p2, p2);\n    }\n    // real fitting.\n    var abc = getABC(2, p1, p2, p3, t);\n    return new Bezier(p1, abc.A, p3);\n  };\n\n  Bezier.cubicFromPoints = function(S, B, E, t, d1) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    var abc = getABC(3, S, B, E, t);\n    if (typeof d1 === \"undefined\") {\n      d1 = utils.dist(B, abc.C);\n    }\n    var d2 = d1 * (1 - t) / t;\n\n    var selen = utils.dist(S, E),\n      lx = (E.x - S.x) / selen,\n      ly = (E.y - S.y) / selen,\n      bx1 = d1 * lx,\n      by1 = d1 * ly,\n      bx2 = d2 * lx,\n      by2 = d2 * ly;\n    // derivation of new hull coordinates\n    var e1 = { x: B.x - bx1, y: B.y - by1 },\n      e2 = { x: B.x + bx2, y: B.y + by2 },\n      A = abc.A,\n      v1 = { x: A.x + (e1.x - A.x) / (1 - t), y: A.y + (e1.y - A.y) / (1 - t) },\n      v2 = { x: A.x + (e2.x - A.x) / t, y: A.y + (e2.y - A.y) / t },\n      nc1 = { x: S.x + (v1.x - S.x) / t, y: S.y + (v1.y - S.y) / t },\n      nc2 = {\n        x: E.x + (v2.x - E.x) / (1 - t),\n        y: E.y + (v2.y - E.y) / (1 - t)\n      };\n    // ...done\n    return new Bezier(S, nc1, nc2, E);\n  };\n\n  var getUtils = function() {\n    return utils;\n  };\n\n  Bezier.getUtils = getUtils;\n\n  Bezier.PolyBezier = PolyBezier;\n\n  Bezier.prototype = {\n    getUtils: getUtils,\n    valueOf: function() {\n      return this.toString();\n    },\n    toString: function() {\n      return utils.pointsToString(this.points);\n    },\n    toSVG: function(relative) {\n      if (this._3d) return false;\n      var p = this.points,\n        x = p[0].x,\n        y = p[0].y,\n        s = [\"M\", x, y, this.order === 2 ? \"Q\" : \"C\"];\n      for (var i = 1, last = p.length; i < last; i++) {\n        s.push(p[i].x);\n        s.push(p[i].y);\n      }\n      return s.join(\" \");\n    },\n    setRatios: function(ratios) {\n      if (ratios.length !== this.points.length) {\n        throw new Error(\"incorrect number of ratio values\");\n      }\n      this.ratios = ratios;\n      this._lut = []; //  invalidate any precomputed LUT\n    },\n    verify: function() {\n      var print = this.coordDigest();\n      if (print !== this._print) {\n        this._print = print;\n        this.update();\n      }\n    },\n    coordDigest: function() {\n      return this.points.map(function(c,pos) {\n        return '' + pos + c.x + c.y + (c.z?c.z:0);\n      }).join('');\n    },\n    update: function(newprint) {\n      // invalidate any precomputed LUT\n      this._lut = [];\n      this.dpoints = utils.derive(this.points, this._3d);\n      this.computedirection();\n    },\n    computedirection: function() {\n      var points = this.points;\n      var angle = utils.angle(points[0], points[this.order], points[1]);\n      this.clockwise = angle > 0;\n    },\n    length: function() {\n      return utils.length(this.derivative.bind(this));\n    },\n    _lut: [],\n    getLUT: function(steps) {\n      this.verify();\n      steps = steps || 100;\n      if (this._lut.length === steps) {\n        return this._lut;\n      }\n      this._lut = [];\n      // We want a range from 0 to 1 inclusive, so\n      // we decrement and then use <= rather than <:\n      steps--;\n      for (var t = 0; t <= steps; t++) {\n        this._lut.push(this.compute(t / steps));\n      }\n      return this._lut;\n    },\n    on: function(point, error) {\n      error = error || 5;\n      var lut = this.getLUT(),\n        hits = [],\n        c,\n        t = 0;\n      for (var i = 0; i < lut.length; i++) {\n        c = lut[i];\n        if (utils.dist(c, point) < error) {\n          hits.push(c);\n          t += i / lut.length;\n        }\n      }\n      if (!hits.length) return false;\n      return (t /= hits.length);\n    },\n    project: function(point) {\n      // step 1: coarse check\n      var LUT = this.getLUT(),\n        l = LUT.length - 1,\n        closest = utils.closest(LUT, point),\n        mdist = closest.mdist,\n        mpos = closest.mpos;\n\n      // step 2: fine check\n      var ft,\n        t,\n        p,\n        d,\n        t1 = (mpos - 1) / l,\n        t2 = (mpos + 1) / l,\n        step = 0.1 / l;\n      mdist += 1;\n      for (t = t1, ft = t; t < t2 + step; t += step) {\n        p = this.compute(t);\n        d = utils.dist(point, p);\n        if (d < mdist) {\n          mdist = d;\n          ft = t;\n        }\n      }\n      p = this.compute(ft);\n      p.t = ft;\n      p.d = mdist;\n      return p;\n    },\n    get: function(t) {\n      return this.compute(t);\n    },\n    point: function(idx) {\n      return this.points[idx];\n    },\n    compute: function(t) {\n      if (this.ratios) return utils.computeWithRatios(t, this.points, this.ratios, this._3d);\n      return utils.compute(t, this.points, this._3d, this.ratios);\n    },\n    raise: function() {\n      var p = this.points,\n        np = [p[0]],\n        i,\n        k = p.length,\n        pi,\n        pim;\n      for (var i = 1; i < k; i++) {\n        pi = p[i];\n        pim = p[i - 1];\n        np[i] = {\n          x: (k - i) / k * pi.x + i / k * pim.x,\n          y: (k - i) / k * pi.y + i / k * pim.y\n        };\n      }\n      np[k] = p[k - 1];\n      return new Bezier(np);\n    },\n    derivative: function(t) {\n      var mt = 1 - t,\n        a,\n        b,\n        c = 0,\n        p = this.dpoints[0];\n      if (this.order === 2) {\n        p = [p[0], p[1], ZERO];\n        a = mt;\n        b = t;\n      }\n      if (this.order === 3) {\n        a = mt * mt;\n        b = mt * t * 2;\n        c = t * t;\n      }\n      var ret = {\n        x: a * p[0].x + b * p[1].x + c * p[2].x,\n        y: a * p[0].y + b * p[1].y + c * p[2].y\n      };\n      if (this._3d) {\n        ret.z = a * p[0].z + b * p[1].z + c * p[2].z;\n      }\n      return ret;\n    },\n    curvature: function(t) {\n      return utils.curvature(t, this.points, this._3d);\n    },\n    inflections: function() {\n      return utils.inflections(this.points);\n    },\n    normal: function(t) {\n      return this._3d ? this.__normal3(t) : this.__normal2(t);\n    },\n    __normal2: function(t) {\n      var d = this.derivative(t);\n      var q = sqrt(d.x * d.x + d.y * d.y);\n      return { x: -d.y / q, y: d.x / q };\n    },\n    __normal3: function(t) {\n      // see http://stackoverflow.com/questions/25453159\n      var r1 = this.derivative(t),\n        r2 = this.derivative(t + 0.01),\n        q1 = sqrt(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),\n        q2 = sqrt(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);\n      r1.x /= q1;\n      r1.y /= q1;\n      r1.z /= q1;\n      r2.x /= q2;\n      r2.y /= q2;\n      r2.z /= q2;\n      // cross product\n      var c = {\n        x: r2.y * r1.z - r2.z * r1.y,\n        y: r2.z * r1.x - r2.x * r1.z,\n        z: r2.x * r1.y - r2.y * r1.x\n      };\n      var m = sqrt(c.x * c.x + c.y * c.y + c.z * c.z);\n      c.x /= m;\n      c.y /= m;\n      c.z /= m;\n      // rotation matrix\n      var R = [\n        c.x * c.x,\n        c.x * c.y - c.z,\n        c.x * c.z + c.y,\n        c.x * c.y + c.z,\n        c.y * c.y,\n        c.y * c.z - c.x,\n        c.x * c.z - c.y,\n        c.y * c.z + c.x,\n        c.z * c.z\n      ];\n      // normal vector:\n      var n = {\n        x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n        y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n        z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z\n      };\n      return n;\n    },\n    hull: function(t) {\n      var p = this.points,\n        _p = [],\n        pt,\n        q = [],\n        idx = 0,\n        i = 0,\n        l = 0;\n      q[idx++] = p[0];\n      q[idx++] = p[1];\n      q[idx++] = p[2];\n      if (this.order === 3) {\n        q[idx++] = p[3];\n      }\n      // we lerp between all points at each iteration, until we have 1 point left.\n      while (p.length > 1) {\n        _p = [];\n        for (i = 0, l = p.length - 1; i < l; i++) {\n          pt = utils.lerp(t, p[i], p[i + 1]);\n          q[idx++] = pt;\n          _p.push(pt);\n        }\n        p = _p;\n      }\n      return q;\n    },\n    split: function(t1, t2) {\n      // shortcuts\n      if (t1 === 0 && !!t2) {\n        return this.split(t2).left;\n      }\n      if (t2 === 1) {\n        return this.split(t1).right;\n      }\n\n      // no shortcut: use \"de Casteljau\" iteration.\n      var q = this.hull(t1);\n      var result = {\n        left:\n          this.order === 2\n            ? new Bezier([q[0], q[3], q[5]])\n            : new Bezier([q[0], q[4], q[7], q[9]]),\n        right:\n          this.order === 2\n            ? new Bezier([q[5], q[4], q[2]])\n            : new Bezier([q[9], q[8], q[6], q[3]]),\n        span: q\n      };\n\n      // make sure we bind _t1/_t2 information!\n      result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);\n      result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);\n      result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);\n      result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2);\n\n      // if we have no t2, we're done\n      if (!t2) {\n        return result;\n      }\n\n      // if we have a t2, split again:\n      t2 = utils.map(t2, t1, 1, 0, 1);\n      var subsplit = result.right.split(t2);\n      return subsplit.left;\n    },\n    extrema: function() {\n      var dims = this.dims,\n        result = {},\n        roots = [],\n        p,\n        mfn;\n      dims.forEach(\n        function(dim) {\n          mfn = function(v) {\n            return v[dim];\n          };\n          p = this.dpoints[0].map(mfn);\n          result[dim] = utils.droots(p);\n          if (this.order === 3) {\n            p = this.dpoints[1].map(mfn);\n            result[dim] = result[dim].concat(utils.droots(p));\n          }\n          result[dim] = result[dim].filter(function(t) {\n            return t >= 0 && t <= 1;\n          });\n          roots = roots.concat(result[dim].sort(utils.numberSort));\n        }.bind(this)\n      );\n      roots = roots.sort(utils.numberSort).filter(function(v, idx) {\n        return roots.indexOf(v) === idx;\n      });\n      result.values = roots;\n      return result;\n    },\n    bbox: function() {\n      var extrema = this.extrema(),\n        result = {};\n      this.dims.forEach(\n        function(d) {\n          result[d] = utils.getminmax(this, d, extrema[d]);\n        }.bind(this)\n      );\n      return result;\n    },\n    overlaps: function(curve) {\n      var lbbox = this.bbox(),\n        tbbox = curve.bbox();\n      return utils.bboxoverlap(lbbox, tbbox);\n    },\n    offset: function(t, d) {\n      if (typeof d !== \"undefined\") {\n        var c = this.get(t);\n        var n = this.normal(t);\n        var ret = {\n          c: c,\n          n: n,\n          x: c.x + n.x * d,\n          y: c.y + n.y * d\n        };\n        if (this._3d) {\n          ret.z = c.z + n.z * d;\n        }\n        return ret;\n      }\n      if (this._linear) {\n        var nv = this.normal(0);\n        var coords = this.points.map(function(p) {\n          var ret = {\n            x: p.x + t * nv.x,\n            y: p.y + t * nv.y\n          };\n          if (p.z && n.z) {\n            ret.z = p.z + t * nv.z;\n          }\n          return ret;\n        });\n        return [new Bezier(coords)];\n      }\n      var reduced = this.reduce();\n      return reduced.map(function(s) {\n        if (s._linear) {\n          return s.offset(t)[0];\n        }\n        return s.scale(t);\n      });\n    },\n    simple: function() {\n      if (this.order === 3) {\n        var a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n        var a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n        if ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false;\n      }\n      var n1 = this.normal(0);\n      var n2 = this.normal(1);\n      var s = n1.x * n2.x + n1.y * n2.y;\n      if (this._3d) {\n        s += n1.z * n2.z;\n      }\n      var angle = abs(acos(s));\n      return angle < pi / 3;\n    },\n    reduce: function() {\n      var i,\n        t1 = 0,\n        t2 = 0,\n        step = 0.01,\n        segment,\n        pass1 = [],\n        pass2 = [];\n      // first pass: split on extrema\n      var extrema = this.extrema().values;\n      if (extrema.indexOf(0) === -1) {\n        extrema = [0].concat(extrema);\n      }\n      if (extrema.indexOf(1) === -1) {\n        extrema.push(1);\n      }\n\n      for (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n        t2 = extrema[i];\n        segment = this.split(t1, t2);\n        segment._t1 = t1;\n        segment._t2 = t2;\n        pass1.push(segment);\n        t1 = t2;\n      }\n\n      // second pass: further reduce these segments to simple segments\n      pass1.forEach(function(p1) {\n        t1 = 0;\n        t2 = 0;\n        while (t2 <= 1) {\n          for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n            segment = p1.split(t1, t2);\n            if (!segment.simple()) {\n              t2 -= step;\n              if (abs(t1 - t2) < step) {\n                // we can never form a reduction\n                return [];\n              }\n              segment = p1.split(t1, t2);\n              segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n              segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);\n              pass2.push(segment);\n              t1 = t2;\n              break;\n            }\n          }\n        }\n        if (t1 < 1) {\n          segment = p1.split(t1, 1);\n          segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n          segment._t2 = p1._t2;\n          pass2.push(segment);\n        }\n      });\n      return pass2;\n    },\n    scale: function(d) {\n      var order = this.order;\n      var distanceFn = false;\n      if (typeof d === \"function\") {\n        distanceFn = d;\n      }\n      if (distanceFn && order === 2) {\n        return this.raise().scale(distanceFn);\n      }\n\n      // TODO: add special handling for degenerate (=linear) curves.\n      var clockwise = this.clockwise;\n      var r1 = distanceFn ? distanceFn(0) : d;\n      var r2 = distanceFn ? distanceFn(1) : d;\n      var v = [this.offset(0, 10), this.offset(1, 10)];\n      var o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n      if (!o) {\n        throw new Error(\"cannot scale this curve. Try reducing it first.\");\n      }\n      // move all points by distance 'd' wrt the origin 'o'\n      var points = this.points,\n        np = [];\n\n      // move end points by fixed distance along normal.\n      [0, 1].forEach(\n        function(t) {\n          var p = (np[t * order] = utils.copy(points[t * order]));\n          p.x += (t ? r2 : r1) * v[t].n.x;\n          p.y += (t ? r2 : r1) * v[t].n.y;\n        }.bind(this)\n      );\n\n      if (!distanceFn) {\n        // move control points to lie on the intersection of the offset\n        // derivative vector, and the origin-through-control vector\n        [0, 1].forEach(\n          function(t) {\n            if (this.order === 2 && !!t) return;\n            var p = np[t * order];\n            var d = this.derivative(t);\n            var p2 = { x: p.x + d.x, y: p.y + d.y };\n            np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);\n          }.bind(this)\n        );\n        return new Bezier(np);\n      }\n\n      // move control points by \"however much necessary to\n      // ensure the correct tangent to endpoint\".\n      [0, 1].forEach(\n        function(t) {\n          if (this.order === 2 && !!t) return;\n          var p = points[t + 1];\n          var ov = {\n            x: p.x - o.x,\n            y: p.y - o.y\n          };\n          var rc = distanceFn ? distanceFn((t + 1) / order) : d;\n          if (distanceFn && !clockwise) rc = -rc;\n          var m = sqrt(ov.x * ov.x + ov.y * ov.y);\n          ov.x /= m;\n          ov.y /= m;\n          np[t + 1] = {\n            x: p.x + rc * ov.x,\n            y: p.y + rc * ov.y\n          };\n        }.bind(this)\n      );\n      return new Bezier(np);\n    },\n    outline: function(d1, d2, d3, d4) {\n      d2 = typeof d2 === \"undefined\" ? d1 : d2;\n      var reduced = this.reduce(),\n        len = reduced.length,\n        fcurves = [],\n        bcurves = [],\n        p,\n        alen = 0,\n        tlen = this.length();\n\n      var graduated = typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\";\n\n      function linearDistanceFunction(s, e, tlen, alen, slen) {\n        return function(v) {\n          var f1 = alen / tlen,\n            f2 = (alen + slen) / tlen,\n            d = e - s;\n          return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);\n        };\n      }\n\n      // form curve oulines\n      reduced.forEach(function(segment) {\n        slen = segment.length();\n        if (graduated) {\n          fcurves.push(\n            segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen))\n          );\n          bcurves.push(\n            segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen))\n          );\n        } else {\n          fcurves.push(segment.scale(d1));\n          bcurves.push(segment.scale(-d2));\n        }\n        alen += slen;\n      });\n\n      // reverse the \"return\" outline\n      bcurves = bcurves\n        .map(function(s) {\n          p = s.points;\n          if (p[3]) {\n            s.points = [p[3], p[2], p[1], p[0]];\n          } else {\n            s.points = [p[2], p[1], p[0]];\n          }\n          return s;\n        })\n        .reverse();\n\n      // form the endcaps as lines\n      var fs = fcurves[0].points[0],\n        fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],\n        bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],\n        be = bcurves[0].points[0],\n        ls = utils.makeline(bs, fs),\n        le = utils.makeline(fe, be),\n        segments = [ls]\n          .concat(fcurves)\n          .concat([le])\n          .concat(bcurves),\n        slen = segments.length;\n\n      return new PolyBezier(segments);\n    },\n    outlineshapes: function(d1, d2, curveIntersectionThreshold) {\n      d2 = d2 || d1;\n      var outline = this.outline(d1, d2).curves;\n      var shapes = [];\n      for (var i = 1, len = outline.length; i < len / 2; i++) {\n        var shape = utils.makeshape(\n          outline[i],\n          outline[len - i],\n          curveIntersectionThreshold\n        );\n        shape.startcap.virtual = i > 1;\n        shape.endcap.virtual = i < len / 2 - 1;\n        shapes.push(shape);\n      }\n      return shapes;\n    },\n    intersects: function(curve, curveIntersectionThreshold) {\n      if (!curve) return this.selfintersects(curveIntersectionThreshold);\n      if (curve.p1 && curve.p2) {\n        return this.lineIntersects(curve);\n      }\n      if (curve instanceof Bezier) {\n        curve = curve.reduce();\n      }\n      return this.curveintersects(\n        this.reduce(),\n        curve,\n        curveIntersectionThreshold\n      );\n    },\n    lineIntersects: function(line) {\n      var mx = min(line.p1.x, line.p2.x),\n        my = min(line.p1.y, line.p2.y),\n        MX = max(line.p1.x, line.p2.x),\n        MY = max(line.p1.y, line.p2.y),\n        self = this;\n      return utils.roots(this.points, line).filter(function(t) {\n        var p = self.get(t);\n        return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n      });\n    },\n    selfintersects: function(curveIntersectionThreshold) {\n      var reduced = this.reduce();\n      // \"simple\" curves cannot intersect with their direct\n      // neighbour, so for each segment X we check whether\n      // it intersects [0:x-2][x+2:last].\n      var i,\n        len = reduced.length - 2,\n        results = [],\n        result,\n        left,\n        right;\n      for (i = 0; i < len; i++) {\n        left = reduced.slice(i, i + 1);\n        right = reduced.slice(i + 2);\n        result = this.curveintersects(left, right, curveIntersectionThreshold);\n        results = results.concat(result);\n      }\n      return results;\n    },\n    curveintersects: function(c1, c2, curveIntersectionThreshold) {\n      var pairs = [];\n      // step 1: pair off any overlapping segments\n      c1.forEach(function(l) {\n        c2.forEach(function(r) {\n          if (l.overlaps(r)) {\n            pairs.push({ left: l, right: r });\n          }\n        });\n      });\n      // step 2: for each pairing, run through the convergence algorithm.\n      var intersections = [];\n      pairs.forEach(function(pair) {\n        var result = utils.pairiteration(\n          pair.left,\n          pair.right,\n          curveIntersectionThreshold\n        );\n        if (result.length > 0) {\n          intersections = intersections.concat(result);\n        }\n      });\n      return intersections;\n    },\n    arcs: function(errorThreshold) {\n      errorThreshold = errorThreshold || 0.5;\n      var circles = [];\n      return this._iterate(errorThreshold, circles);\n    },\n    _error: function(pc, np1, s, e) {\n      var q = (e - s) / 4,\n        c1 = this.get(s + q),\n        c2 = this.get(e - q),\n        ref = utils.dist(pc, np1),\n        d1 = utils.dist(pc, c1),\n        d2 = utils.dist(pc, c2);\n      return abs(d1 - ref) + abs(d2 - ref);\n    },\n    _iterate: function(errorThreshold, circles) {\n      var t_s = 0,\n        t_e = 1,\n        safety;\n      // we do a binary search to find the \"good `t` closest to no-longer-good\"\n      do {\n        safety = 0;\n\n        // step 1: start with the maximum possible arc\n        t_e = 1;\n\n        // points:\n        var np1 = this.get(t_s),\n          np2,\n          np3,\n          arc,\n          prev_arc;\n\n        // booleans:\n        var curr_good = false,\n          prev_good = false,\n          done;\n\n        // numbers:\n        var t_m = t_e,\n          prev_e = 1,\n          step = 0;\n\n        // step 2: find the best possible arc\n        do {\n          prev_good = curr_good;\n          prev_arc = arc;\n          t_m = (t_s + t_e) / 2;\n          step++;\n\n          np2 = this.get(t_m);\n          np3 = this.get(t_e);\n\n          arc = utils.getccenter(np1, np2, np3);\n\n          //also save the t values\n          arc.interval = {\n            start: t_s,\n            end: t_e\n          };\n\n          var error = this._error(arc, np1, t_s, t_e);\n          curr_good = error <= errorThreshold;\n\n          done = prev_good && !curr_good;\n          if (!done) prev_e = t_e;\n\n          // this arc is fine: we can move 'e' up to see if we can find a wider arc\n          if (curr_good) {\n            // if e is already at max, then we're done for this arc.\n            if (t_e >= 1) {\n              // make sure we cap at t=1\n              arc.interval.end = prev_e = 1;\n              prev_arc = arc;\n              // if we capped the arc segment to t=1 we also need to make sure that\n              // the arc's end angle is correct with respect to the bezier end point.\n              if (t_e > 1) {\n                var d = {\n                  x: arc.x + arc.r * cos(arc.e),\n                  y: arc.y + arc.r * sin(arc.e)\n                };\n                arc.e += utils.angle({ x: arc.x, y: arc.y }, d, this.get(1));\n              }\n              break;\n            }\n            // if not, move it up by half the iteration distance\n            t_e = t_e + (t_e - t_s) / 2;\n          } else {\n            // this is a bad arc: we need to move 'e' down to find a good arc\n            t_e = t_m;\n          }\n        } while (!done && safety++ < 100);\n\n        if (safety >= 100) {\n          break;\n        }\n\n        // console.log(\"L835: [F] arc found\", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n        prev_arc = prev_arc ? prev_arc : arc;\n        circles.push(prev_arc);\n        t_s = prev_e;\n      } while (t_e < 1);\n      return circles;\n    }\n  };\n\n  module.exports = Bezier;\n})();\n","/**\n * Normalise an SVG path to absolute coordinates\n * and full commands, rather than relative coordinates\n * and/or shortcut commands.\n */\nfunction normalizePath(d) {\n  // preprocess \"d\" so that we have spaces between values\n  d = d\n    .replace(/,/g, \" \") // replace commas with spaces\n    .replace(/-/g, \" - \") // add spacing around minus signs\n    .replace(/-\\s+/g, \"-\") // remove spacing to the right of minus signs.\n    .replace(/([a-zA-Z])/g, \" $1 \");\n\n  // set up the variables used in this function\n  var instructions = d.replace(/([a-zA-Z])\\s?/g, \"|$1\").split(\"|\"),\n    instructionLength = instructions.length,\n    i,\n    instruction,\n    op,\n    lop,\n    args = [],\n    alen,\n    a,\n    sx = 0,\n    sy = 0,\n    x = 0,\n    y = 0,\n    cx = 0,\n    cy = 0,\n    cx2 = 0,\n    cy2 = 0,\n    normalized = \"\";\n\n  // we run through the instruction list starting at 1, not 0,\n  // because we split up \"|M x y ....\" so the first element will\n  // always be an empty string. By design.\n  for (i = 1; i < instructionLength; i++) {\n    // which instruction is this?\n    instruction = instructions[i];\n    op = instruction.substring(0, 1);\n    lop = op.toLowerCase();\n\n    // what are the arguments? note that we need to convert\n    // all strings into numbers, or + will do silly things.\n    args = instruction\n      .replace(op, \"\")\n      .trim()\n      .split(\" \");\n    args = args\n      .filter(function(v) {\n        return v !== \"\";\n      })\n      .map(parseFloat);\n    alen = args.length;\n\n    // we could use a switch, but elaborate code in a \"case\" with\n    // fallthrough is just horrid to read. So let's use ifthen\n    // statements instead.\n\n    // moveto command (plus possible lineto)\n    if (lop === \"m\") {\n      normalized += \"M \";\n      if (op === \"m\") {\n        x += args[0];\n        y += args[1];\n      } else {\n        x = args[0];\n        y = args[1];\n      }\n      // records start position, for dealing\n      // with the shape close operator ('Z')\n      sx = x;\n      sy = y;\n      normalized += x + \" \" + y + \" \";\n      if (alen > 2) {\n        for (a = 0; a < alen; a += 2) {\n          if (op === \"m\") {\n            x += args[a];\n            y += args[a + 1];\n          } else {\n            x = args[a];\n            y = args[a + 1];\n          }\n          normalized += [\"L\",x,y,''].join(\" \");\n        }\n      }\n    } else if (lop === \"l\") {\n      // lineto commands\n      for (a = 0; a < alen; a += 2) {\n        if (op === \"l\") {\n          x += args[a];\n          y += args[a + 1];\n        } else {\n          x = args[a];\n          y = args[a + 1];\n        }\n        normalized += [\"L\",x,y,''].join(\" \");\n      }\n    } else if (lop === \"h\") {\n      for (a = 0; a < alen; a++) {\n        if (op === \"h\") {\n          x += args[a];\n        } else {\n          x = args[a];\n        }\n        normalized += [\"L\",x,y,''].join(\" \");\n      }\n    } else if (lop === \"v\") {\n      for (a = 0; a < alen; a++) {\n        if (op === \"v\") {\n          y += args[a];\n        } else {\n          y = args[a];\n        }\n        normalized += [\"L\",x,y,''].join(\" \");\n      }\n    } else if (lop === \"q\") {\n      // quadratic curveto commands\n      for (a = 0; a < alen; a += 4) {\n        if (op === \"q\") {\n          cx = x + args[a];\n          cy = y + args[a + 1];\n          x += args[a + 2];\n          y += args[a + 3];\n        } else {\n          cx = args[a];\n          cy = args[a + 1];\n          x = args[a + 2];\n          y = args[a + 3];\n        }\n        normalized += [\"Q\",cx,cy,x,y,''].join(\" \");\n      }\n    } else if (lop === \"t\") {\n      for (a = 0; a < alen; a += 2) {\n        // reflect previous cx/cy over x/y\n        cx = x + (x - cx);\n        cy = y + (y - cy);\n        // then get real end point\n        if (op === \"t\") {\n          x += args[a];\n          y += args[a + 1];\n        } else {\n          x = args[a];\n          y = args[a + 1];\n        }\n        normalized += [\"Q\",cx,cy,x,y,''].join(\" \");\n      }\n    } else if (lop === \"c\") {\n      // cubic curveto commands\n      for (a = 0; a < alen; a += 6) {\n        if (op === \"c\") {\n          cx = x + args[a];\n          cy = y + args[a + 1];\n          cx2 = x + args[a + 2];\n          cy2 = y + args[a + 3];\n          x += args[a + 4];\n          y += args[a + 5];\n        } else {\n          cx = args[a];\n          cy = args[a + 1];\n          cx2 = args[a + 2];\n          cy2 = args[a + 3];\n          x = args[a + 4];\n          y = args[a + 5];\n        }\n        normalized += [\"C\",cx,cy,cx2,cy2,x,y,''].join(\" \");\n      }\n    } else if (lop === \"s\") {\n      for (a = 0; a < alen; a += 4) {\n        // reflect previous cx2/cy2 over x/y\n        cx = x + (x - cx2);\n        cy = y + (y - cy2);\n        // then get real control and end point\n        if (op === \"s\") {\n          cx2 = x + args[a];\n          cy2 = y + args[a + 1];\n          x += args[a + 2];\n          y += args[a + 3];\n        } else {\n          cx2 = args[a];\n          cy2 = args[a + 1];\n          x = args[a + 2];\n          y = args[a + 3];\n        }\n        normalized +=[\"C\",cx,cy,cx2,cy2,x,y,''].join(\" \");\n      }\n    } else if (lop === \"z\") {\n      normalized += \"Z \";\n      // not unimportant: path closing changes the current x/y coordinate\n      x = sx;\n      y = sy;\n    }\n  }\n  return normalized.trim();\n}\n\nmodule.exports = normalizePath;\n","(function() {\n  \"use strict\";\n\n  var utils = require(\"./utils.js\");\n\n  /**\n   * Poly Bezier\n   * @param {[type]} curves [description]\n   */\n  var PolyBezier = function(curves) {\n    this.curves = [];\n    this._3d = false;\n    if (!!curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  };\n\n  PolyBezier.prototype = {\n    valueOf: function() {\n      return this.toString();\n    },\n    toString: function() {\n      return (\n        \"[\" +\n        this.curves\n          .map(function(curve) {\n            return utils.pointsToString(curve.points);\n          })\n          .join(\", \") +\n        \"]\"\n      );\n    },\n    addCurve: function(curve) {\n      this.curves.push(curve);\n      this._3d = this._3d || curve._3d;\n    },\n    length: function() {\n      return this.curves\n        .map(function(v) {\n          return v.length();\n        })\n        .reduce(function(a, b) {\n          return a + b;\n        });\n    },\n    curve: function(idx) {\n      return this.curves[idx];\n    },\n    bbox: function() {\n      var c = this.curves;\n      var bbox = c[0].bbox();\n      for (var i = 1; i < c.length; i++) {\n        utils.expandbox(bbox, c[i].bbox());\n      }\n      return bbox;\n    },\n    offset: function(d) {\n      var offset = [];\n      this.curves.forEach(function(v) {\n        offset = offset.concat(v.offset(d));\n      });\n      return new PolyBezier(offset);\n    }\n  };\n\n  module.exports = PolyBezier;\n})();\n","var normalise = require(\"./normalise-svg.js\");\n\nvar M = { x: false, y: false };\n\nfunction makeBezier(Bezier, term, values) {\n  if (term === 'Z') return;\n  if (term === 'M') {\n    M = {x: values[0], y: values[1]};\n    return;\n  }\n  // ES7: new Bezier(M.x, M.y, ...values)\n  var cvalues = [false, M.x, M.y].concat(values);\n  var PreboundConstructor = Bezier.bind.apply(Bezier, cvalues)\n  var curve = new PreboundConstructor();\n  var last = values.slice(-2);\n  M = { x : last[0], y: last[1] };\n  return curve;\n}\n\nfunction convertPath(Bezier, d) {\n  var terms = normalise(d).split(\" \"),\n    term,\n    matcher = new RegExp(\"[MLCQZ]\", \"\"),\n    segment,\n    values,\n    segments = [],\n    ARGS = { \"C\": 6, \"Q\": 4, \"L\": 2, \"M\": 2};\n\n  while (terms.length) {\n    term = terms.splice(0,1)[0];\n    if (matcher.test(term)) {\n      values = terms.splice(0, ARGS[term]).map(parseFloat);\n      segment = makeBezier(Bezier, term, values);\n      if (segment) segments.push(segment);\n    }\n  }\n\n  return new Bezier.PolyBezier(segments);\n}\n\nmodule.exports = convertPath;\n","(function() {\n  \"use strict\";\n\n  // math-inlining.\n  var abs = Math.abs,\n    cos = Math.cos,\n    sin = Math.sin,\n    acos = Math.acos,\n    atan2 = Math.atan2,\n    sqrt = Math.sqrt,\n    pow = Math.pow,\n    // cube root function yielding real roots\n    crt = function(v) {\n      return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);\n    },\n    // trig constants\n    pi = Math.PI,\n    tau = 2 * pi,\n    quart = pi / 2,\n    // float precision significant decimal\n    epsilon = 0.000001,\n    // extremas used in bbox calculation and similar algorithms\n    nMax = Number.MAX_SAFE_INTEGER || 9007199254740991,\n    nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,\n    // a zero coordinate, which is surprisingly useful\n    ZERO = { x: 0, y: 0, z: 0 };\n\n  // Bezier utility functions\n  var utils = {\n    // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n    Tvalues: [\n      -0.0640568928626056260850430826247450385909,\n      0.0640568928626056260850430826247450385909,\n      -0.1911188674736163091586398207570696318404,\n      0.1911188674736163091586398207570696318404,\n      -0.3150426796961633743867932913198102407864,\n      0.3150426796961633743867932913198102407864,\n      -0.4337935076260451384870842319133497124524,\n      0.4337935076260451384870842319133497124524,\n      -0.5454214713888395356583756172183723700107,\n      0.5454214713888395356583756172183723700107,\n      -0.6480936519369755692524957869107476266696,\n      0.6480936519369755692524957869107476266696,\n      -0.7401241915785543642438281030999784255232,\n      0.7401241915785543642438281030999784255232,\n      -0.8200019859739029219539498726697452080761,\n      0.8200019859739029219539498726697452080761,\n      -0.8864155270044010342131543419821967550873,\n      0.8864155270044010342131543419821967550873,\n      -0.9382745520027327585236490017087214496548,\n      0.9382745520027327585236490017087214496548,\n      -0.9747285559713094981983919930081690617411,\n      0.9747285559713094981983919930081690617411,\n      -0.9951872199970213601799974097007368118745,\n      0.9951872199970213601799974097007368118745\n    ],\n\n    // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n    Cvalues: [\n      0.1279381953467521569740561652246953718517,\n      0.1279381953467521569740561652246953718517,\n      0.1258374563468282961213753825111836887264,\n      0.1258374563468282961213753825111836887264,\n      0.121670472927803391204463153476262425607,\n      0.121670472927803391204463153476262425607,\n      0.1155056680537256013533444839067835598622,\n      0.1155056680537256013533444839067835598622,\n      0.1074442701159656347825773424466062227946,\n      0.1074442701159656347825773424466062227946,\n      0.0976186521041138882698806644642471544279,\n      0.0976186521041138882698806644642471544279,\n      0.086190161531953275917185202983742667185,\n      0.086190161531953275917185202983742667185,\n      0.0733464814110803057340336152531165181193,\n      0.0733464814110803057340336152531165181193,\n      0.0592985849154367807463677585001085845412,\n      0.0592985849154367807463677585001085845412,\n      0.0442774388174198061686027482113382288593,\n      0.0442774388174198061686027482113382288593,\n      0.0285313886289336631813078159518782864491,\n      0.0285313886289336631813078159518782864491,\n      0.0123412297999871995468056670700372915759,\n      0.0123412297999871995468056670700372915759\n    ],\n\n    arcfn: function(t, derivativeFn) {\n      var d = derivativeFn(t);\n      var l = d.x * d.x + d.y * d.y;\n      if (typeof d.z !== \"undefined\") {\n        l += d.z * d.z;\n      }\n      return sqrt(l);\n    },\n\n    compute: function(t, points, _3d) {\n      // shortcuts\n      if (t === 0) {\n        return points[0];\n      }\n\n      var order = points.length-1;\n\n      if (t === 1) {\n        return points[order];\n      }\n\n      var p = points;\n      var mt = 1 - t;\n\n      // constant?\n      if (order === 0) {\n        return points[0];\n      }\n\n      // linear?\n      if (order === 1) {\n        ret = {\n          x: mt * p[0].x + t * p[1].x,\n          y: mt * p[0].y + t * p[1].y\n        };\n        if (_3d) {\n          ret.z = mt * p[0].z + t * p[1].z;\n        }\n        return ret;\n      }\n\n      // quadratic/cubic curve?\n      if (order < 4) {\n        var mt2 = mt * mt,\n          t2 = t * t,\n          a,\n          b,\n          c,\n          d = 0;\n        if (order === 2) {\n          p = [p[0], p[1], p[2], ZERO];\n          a = mt2;\n          b = mt * t * 2;\n          c = t2;\n        } else if (order === 3) {\n          a = mt2 * mt;\n          b = mt2 * t * 3;\n          c = mt * t2 * 3;\n          d = t * t2;\n        }\n        var ret = {\n          x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n          y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y\n        };\n        if (_3d) {\n          ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n        }\n        return ret;\n      }\n\n      // higher order curves: use de Casteljau's computation\n      var dCpts = JSON.parse(JSON.stringify(points));\n      while (dCpts.length > 1) {\n        for (var i = 0; i < dCpts.length - 1; i++) {\n          dCpts[i] = {\n            x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,\n            y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t\n          };\n          if (typeof dCpts[i].z !== \"undefined\") {\n            dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;\n          }\n        }\n        dCpts.splice(dCpts.length - 1, 1);\n      }\n      return dCpts[0];\n    },\n\n    computeWithRatios: function (t, points, ratios, _3d) {\n      var mt = 1 - t, r = ratios, p = points, d;\n      var f1 = r[0], f2 = r[1], f3 = r[2], f4 = r[3];\n\n      // spec for linear\n      f1 *= mt;\n      f2 *= t;\n\n      if (p.length === 2) {\n        d = f1 + f2;\n        return {\n          x: (f1 * p[0].x + f2 * p[1].x)/d,\n          y: (f1 * p[0].y + f2 * p[1].y)/d,\n          z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z)/d\n        };\n      }\n\n      // upgrade to quadratic\n      f1 *= mt;\n      f2 *= 2 * mt;\n      f3 *= t * t;\n\n      if (p.length === 3) {\n        d = f1 + f2 + f3;\n        return {\n          x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x)/d,\n          y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y)/d,\n          z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z)/d\n        };\n      }\n\n      // upgrade to cubic\n      f1 *= mt;\n      f2 *= 1.5 * mt;\n      f3 *= 3 * mt;\n      f4 *= t * t * t;\n\n      if (p.length === 4) {\n        d = f1 + f2 + f3 + f4;\n        return {\n          x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x)/d,\n          y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y)/d,\n          z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z)/d\n        };\n      }\n    },\n\n    derive: function (points, _3d) {\n      var dpoints = [];\n      for (var p = points, d = p.length, c = d - 1; d > 1; d--, c--) {\n        var list = [];\n        for (var j = 0, dpt; j < c; j++) {\n          dpt = {\n            x: c * (p[j + 1].x - p[j].x),\n            y: c * (p[j + 1].y - p[j].y)\n          };\n          if (_3d) {\n            dpt.z = c * (p[j + 1].z - p[j].z);\n          }\n          list.push(dpt);\n        }\n        dpoints.push(list);\n        p = list;\n      }\n      return dpoints;\n    },\n\n    between: function(v, m, M) {\n      return (\n        (m <= v && v <= M) ||\n        utils.approximately(v, m) ||\n        utils.approximately(v, M)\n      );\n    },\n\n    approximately: function(a, b, precision) {\n      return abs(a - b) <= (precision || epsilon);\n    },\n\n    length: function(derivativeFn) {\n      var z = 0.5,\n        sum = 0,\n        len = utils.Tvalues.length,\n        i,\n        t;\n      for (i = 0; i < len; i++) {\n        t = z * utils.Tvalues[i] + z;\n        sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);\n      }\n      return z * sum;\n    },\n\n    map: function(v, ds, de, ts, te) {\n      var d1 = de - ds,\n        d2 = te - ts,\n        v2 = v - ds,\n        r = v2 / d1;\n      return ts + d2 * r;\n    },\n\n    lerp: function(r, v1, v2) {\n      var ret = {\n        x: v1.x + r * (v2.x - v1.x),\n        y: v1.y + r * (v2.y - v1.y)\n      };\n      if (!!v1.z && !!v2.z) {\n        ret.z = v1.z + r * (v2.z - v1.z);\n      }\n      return ret;\n    },\n\n    pointToString: function(p) {\n      var s = p.x + \"/\" + p.y;\n      if (typeof p.z !== \"undefined\") {\n        s += \"/\" + p.z;\n      }\n      return s;\n    },\n\n    pointsToString: function(points) {\n      return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n    },\n\n    copy: function(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    },\n\n    angle: function(o, v1, v2) {\n      var dx1 = v1.x - o.x,\n        dy1 = v1.y - o.y,\n        dx2 = v2.x - o.x,\n        dy2 = v2.y - o.y,\n        cross = dx1 * dy2 - dy1 * dx2,\n        dot = dx1 * dx2 + dy1 * dy2;\n      return atan2(cross, dot);\n    },\n\n    // round as string, to avoid rounding errors\n    round: function(v, d) {\n      var s = \"\" + v;\n      var pos = s.indexOf(\".\");\n      return parseFloat(s.substring(0, pos + 1 + d));\n    },\n\n    dist: function(p1, p2) {\n      var dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n      return sqrt(dx * dx + dy * dy);\n    },\n\n    closest: function(LUT, point) {\n      var mdist = pow(2, 63),\n        mpos,\n        d;\n      LUT.forEach(function(p, idx) {\n        d = utils.dist(point, p);\n        if (d < mdist) {\n          mdist = d;\n          mpos = idx;\n        }\n      });\n      return { mdist: mdist, mpos: mpos };\n    },\n\n    abcratio: function(t, n) {\n      // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n      if (n !== 2 && n !== 3) {\n        return false;\n      }\n      if (typeof t === \"undefined\") {\n        t = 0.5;\n      } else if (t === 0 || t === 1) {\n        return t;\n      }\n      var bottom = pow(t, n) + pow(1 - t, n),\n        top = bottom - 1;\n      return abs(top / bottom);\n    },\n\n    projectionratio: function(t, n) {\n      // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n      if (n !== 2 && n !== 3) {\n        return false;\n      }\n      if (typeof t === \"undefined\") {\n        t = 0.5;\n      } else if (t === 0 || t === 1) {\n        return t;\n      }\n      var top = pow(1 - t, n),\n        bottom = pow(t, n) + top;\n      return top / bottom;\n    },\n\n    lli8: function(x1, y1, x2, y2, x3, y3, x4, y4) {\n      var nx =\n          (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n        d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n      if (d == 0) {\n        return false;\n      }\n      return { x: nx / d, y: ny / d };\n    },\n\n    lli4: function(p1, p2, p3, p4) {\n      var x1 = p1.x,\n        y1 = p1.y,\n        x2 = p2.x,\n        y2 = p2.y,\n        x3 = p3.x,\n        y3 = p3.y,\n        x4 = p4.x,\n        y4 = p4.y;\n      return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);\n    },\n\n    lli: function(v1, v2) {\n      return utils.lli4(v1, v1.c, v2, v2.c);\n    },\n\n    makeline: function(p1, p2) {\n      var Bezier = require(\"./bezier\");\n      var x1 = p1.x,\n        y1 = p1.y,\n        x2 = p2.x,\n        y2 = p2.y,\n        dx = (x2 - x1) / 3,\n        dy = (y2 - y1) / 3;\n      return new Bezier(\n        x1,\n        y1,\n        x1 + dx,\n        y1 + dy,\n        x1 + 2 * dx,\n        y1 + 2 * dy,\n        x2,\n        y2\n      );\n    },\n\n    findbbox: function(sections) {\n      var mx = nMax,\n        my = nMax,\n        MX = nMin,\n        MY = nMin;\n      sections.forEach(function(s) {\n        var bbox = s.bbox();\n        if (mx > bbox.x.min) mx = bbox.x.min;\n        if (my > bbox.y.min) my = bbox.y.min;\n        if (MX < bbox.x.max) MX = bbox.x.max;\n        if (MY < bbox.y.max) MY = bbox.y.max;\n      });\n      return {\n        x: { min: mx, mid: (mx + MX) / 2, max: MX, size: MX - mx },\n        y: { min: my, mid: (my + MY) / 2, max: MY, size: MY - my }\n      };\n    },\n\n    shapeintersections: function(\n      s1,\n      bbox1,\n      s2,\n      bbox2,\n      curveIntersectionThreshold\n    ) {\n      if (!utils.bboxoverlap(bbox1, bbox2)) return [];\n      var intersections = [];\n      var a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n      var a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n      a1.forEach(function(l1) {\n        if (l1.virtual) return;\n        a2.forEach(function(l2) {\n          if (l2.virtual) return;\n          var iss = l1.intersects(l2, curveIntersectionThreshold);\n          if (iss.length > 0) {\n            iss.c1 = l1;\n            iss.c2 = l2;\n            iss.s1 = s1;\n            iss.s2 = s2;\n            intersections.push(iss);\n          }\n        });\n      });\n      return intersections;\n    },\n\n    makeshape: function(forward, back, curveIntersectionThreshold) {\n      var bpl = back.points.length;\n      var fpl = forward.points.length;\n      var start = utils.makeline(back.points[bpl - 1], forward.points[0]);\n      var end = utils.makeline(forward.points[fpl - 1], back.points[0]);\n      var shape = {\n        startcap: start,\n        forward: forward,\n        back: back,\n        endcap: end,\n        bbox: utils.findbbox([start, forward, back, end])\n      };\n      var self = utils;\n      shape.intersections = function(s2) {\n        return self.shapeintersections(\n          shape,\n          shape.bbox,\n          s2,\n          s2.bbox,\n          curveIntersectionThreshold\n        );\n      };\n      return shape;\n    },\n\n    getminmax: function(curve, d, list) {\n      if (!list) return { min: 0, max: 0 };\n      var min = nMax,\n        max = nMin,\n        t,\n        c;\n      if (list.indexOf(0) === -1) {\n        list = [0].concat(list);\n      }\n      if (list.indexOf(1) === -1) {\n        list.push(1);\n      }\n      for (var i = 0, len = list.length; i < len; i++) {\n        t = list[i];\n        c = curve.get(t);\n        if (c[d] < min) {\n          min = c[d];\n        }\n        if (c[d] > max) {\n          max = c[d];\n        }\n      }\n      return { min: min, mid: (min + max) / 2, max: max, size: max - min };\n    },\n\n    align: function(points, line) {\n      var tx = line.p1.x,\n        ty = line.p1.y,\n        a = -atan2(line.p2.y - ty, line.p2.x - tx),\n        d = function(v) {\n          return {\n            x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n            y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a)\n          };\n        };\n      return points.map(d);\n    },\n\n    roots: function(points, line) {\n      line = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } };\n      var order = points.length - 1;\n      var p = utils.align(points, line);\n      var reduce = function(t) {\n        return 0 <= t && t <= 1;\n      };\n\n      if (order === 2) {\n        var a = p[0].y,\n          b = p[1].y,\n          c = p[2].y,\n          d = a - 2 * b + c;\n        if (d !== 0) {\n          var m1 = -sqrt(b * b - a * c),\n            m2 = -a + b,\n            v1 = -(m1 + m2) / d,\n            v2 = -(-m1 + m2) / d;\n          return [v1, v2].filter(reduce);\n        } else if (b !== c && d === 0) {\n          return [(2*b - c)/(2*b - 2*c)].filter(reduce);\n        }\n        return [];\n      }\n\n      // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n      var pa = p[0].y,\n        pb = p[1].y,\n        pc = p[2].y,\n        pd = p[3].y,\n        d = -pa + 3 * pb - 3 * pc + pd,\n        a = 3 * pa - 6 * pb + 3 * pc,\n        b = -3 * pa + 3 * pb,\n        c = pa;\n\n      if (utils.approximately(d, 0)) {\n        // this is not a cubic curve.\n        if (utils.approximately(a, 0)) {\n          // in fact, this is not a quadratic curve either.\n          if (utils.approximately(b, 0)) {\n            // in fact in fact, there are no solutions.\n            return [];\n          }\n          // linear solution:\n          return [-c / b].filter(reduce);\n        }\n        // quadratic solution:\n        var q = sqrt(b * b - 4 * a * c),\n          a2 = 2 * a;\n        return [(q - b) / a2, (-b - q) / a2].filter(reduce);\n      }\n\n      // at this point, we know we need a cubic solution:\n\n      a /= d;\n      b /= d;\n      c /= d;\n\n      var p = (3 * b - a * a) / 3,\n        p3 = p / 3,\n        q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n        q2 = q / 2,\n        discriminant = q2 * q2 + p3 * p3 * p3,\n        u1,\n        v1,\n        x1,\n        x2,\n        x3;\n      if (discriminant < 0) {\n        var mp3 = -p / 3,\n          mp33 = mp3 * mp3 * mp3,\n          r = sqrt(mp33),\n          t = -q / (2 * r),\n          cosphi = t < -1 ? -1 : t > 1 ? 1 : t,\n          phi = acos(cosphi),\n          crtr = crt(r),\n          t1 = 2 * crtr;\n        x1 = t1 * cos(phi / 3) - a / 3;\n        x2 = t1 * cos((phi + tau) / 3) - a / 3;\n        x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;\n        return [x1, x2, x3].filter(reduce);\n      } else if (discriminant === 0) {\n        u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n        x1 = 2 * u1 - a / 3;\n        x2 = -u1 - a / 3;\n        return [x1, x2].filter(reduce);\n      } else {\n        var sd = sqrt(discriminant);\n        u1 = crt(-q2 + sd);\n        v1 = crt(q2 + sd);\n        return [u1 - v1 - a / 3].filter(reduce);\n      }\n    },\n\n    droots: function(p) {\n      // quadratic roots are easy\n      if (p.length === 3) {\n        var a = p[0],\n          b = p[1],\n          c = p[2],\n          d = a - 2 * b + c;\n        if (d !== 0) {\n          var m1 = -sqrt(b * b - a * c),\n            m2 = -a + b,\n            v1 = -(m1 + m2) / d,\n            v2 = -(-m1 + m2) / d;\n          return [v1, v2];\n        } else if (b !== c && d === 0) {\n          return [(2 * b - c) / (2 * (b - c))];\n        }\n        return [];\n      }\n\n      // linear roots are even easier\n      if (p.length === 2) {\n        var a = p[0],\n          b = p[1];\n        if (a !== b) {\n          return [a / (a - b)];\n        }\n        return [];\n      }\n    },\n\n    curvature: function(t, points, _3d, kOnly) {\n      var dpoints = utils.derive(points);\n      var d1 = dpoints[0];\n      var d2 = dpoints[1];\n      var num, dnm, adk, dk, k=0, r=0;\n\n      //\n      // We're using the following formula for curvature:\n      //\n      //              x'y\" - y'x\"\n      //   k(t) = ------------------\n      //           (x'² + y'²)^(3/2)\n      //\n      // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition\n      //\n      // With it corresponding 3D counterpart:\n      //\n      //          sqrt( (y'z\" - y\"z')² + (z'x\" - z\"x')² + (x'y\" - x\"y')²)\n      //   k(t) = -------------------------------------------------------\n      //                     (x'² + y'² + z'²)^(3/2)\n      //\n\n      var d = utils.compute(t, d1);\n      var dd = utils.compute(t, d2);\n      var qdsum = d.x*d.x + d.y*d.y;\n      if (_3d) {\n        num = sqrt(\n          pow(d.y*dd.z - dd.y*d.z, 2) +\n          pow(d.z*dd.x - dd.z*d.x, 2) +\n          pow(d.x*dd.y - dd.x*d.y, 2)\n        );\n        dnm = pow(qdsum + d.z*d.z, 3/2);\n      } else {\n        num = d.x*dd.y - d.y*dd.x;\n        dnm = pow(qdsum, 3/2);\n      }\n\n      if (num === 0 || dnm === 0) {\n        return { k:0, r:0 };\n      }\n\n      k = num/dnm;\n      r = dnm/num;\n\n      // We're also computing the derivative of kappa, because\n      // there is value in knowing the rate of change for the\n      // curvature along the curve. And we're just going to\n      // ballpark it based on an epsilon.\n      if (!kOnly) {\n        // compute k'(t) based on the interval before, and after it,\n        // to at least try to not introduce forward/backward pass bias.\n        var pk = utils.curvature(t-0.001, points, _3d, true).k;\n        var nk = utils.curvature(t+0.001, points, _3d, true).k;\n        dk = ((nk-k) + (k-pk))/2;\n        adk = (abs(nk-k) + abs(k-pk))/2;\n      }\n\n      return { k: k, r: r, dk: dk, adk:adk, };\n    },\n\n    inflections: function(points) {\n      if (points.length < 4) return [];\n\n      // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n      var p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),\n        a = p[2].x * p[1].y,\n        b = p[3].x * p[1].y,\n        c = p[1].x * p[2].y,\n        d = p[3].x * p[2].y,\n        v1 = 18 * (-3 * a + 2 * b + 3 * c - d),\n        v2 = 18 * (3 * a - b - 3 * c),\n        v3 = 18 * (c - a);\n\n      if (utils.approximately(v1, 0)) {\n        if (!utils.approximately(v2, 0)) {\n          var t = -v3 / v2;\n          if (0 <= t && t <= 1) return [t];\n        }\n        return [];\n      }\n\n      var trm = v2 * v2 - 4 * v1 * v3,\n        sq = Math.sqrt(trm),\n        d = 2 * v1;\n\n      if (utils.approximately(d, 0)) return [];\n\n      return [(sq - v2) / d, -(v2 + sq) / d].filter(function(r) {\n        return 0 <= r && r <= 1;\n      });\n    },\n\n    bboxoverlap: function(b1, b2) {\n      var dims = [\"x\", \"y\"],\n        len = dims.length,\n        i,\n        dim,\n        l,\n        t,\n        d;\n      for (i = 0; i < len; i++) {\n        dim = dims[i];\n        l = b1[dim].mid;\n        t = b2[dim].mid;\n        d = (b1[dim].size + b2[dim].size) / 2;\n        if (abs(l - t) >= d) return false;\n      }\n      return true;\n    },\n\n    expandbox: function(bbox, _bbox) {\n      if (_bbox.x.min < bbox.x.min) {\n        bbox.x.min = _bbox.x.min;\n      }\n      if (_bbox.y.min < bbox.y.min) {\n        bbox.y.min = _bbox.y.min;\n      }\n      if (_bbox.z && _bbox.z.min < bbox.z.min) {\n        bbox.z.min = _bbox.z.min;\n      }\n      if (_bbox.x.max > bbox.x.max) {\n        bbox.x.max = _bbox.x.max;\n      }\n      if (_bbox.y.max > bbox.y.max) {\n        bbox.y.max = _bbox.y.max;\n      }\n      if (_bbox.z && _bbox.z.max > bbox.z.max) {\n        bbox.z.max = _bbox.z.max;\n      }\n      bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;\n      bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;\n      if (bbox.z) {\n        bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;\n      }\n      bbox.x.size = bbox.x.max - bbox.x.min;\n      bbox.y.size = bbox.y.max - bbox.y.min;\n      if (bbox.z) {\n        bbox.z.size = bbox.z.max - bbox.z.min;\n      }\n    },\n\n    pairiteration: function(c1, c2, curveIntersectionThreshold) {\n      var c1b = c1.bbox(),\n        c2b = c2.bbox(),\n        r = 100000,\n        threshold = curveIntersectionThreshold || 0.5;\n      if (\n        c1b.x.size + c1b.y.size < threshold &&\n        c2b.x.size + c2b.y.size < threshold\n      ) {\n        return [\n          ((r * (c1._t1 + c1._t2) / 2) | 0) / r +\n            \"/\" +\n            ((r * (c2._t1 + c2._t2) / 2) | 0) / r\n        ];\n      }\n      var cc1 = c1.split(0.5),\n        cc2 = c2.split(0.5),\n        pairs = [\n          { left: cc1.left, right: cc2.left },\n          { left: cc1.left, right: cc2.right },\n          { left: cc1.right, right: cc2.right },\n          { left: cc1.right, right: cc2.left }\n        ];\n      pairs = pairs.filter(function(pair) {\n        return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());\n      });\n      var results = [];\n      if (pairs.length === 0) return results;\n      pairs.forEach(function(pair) {\n        results = results.concat(\n          utils.pairiteration(pair.left, pair.right, threshold)\n        );\n      });\n      results = results.filter(function(v, i) {\n        return results.indexOf(v) === i;\n      });\n      return results;\n    },\n\n    getccenter: function(p1, p2, p3) {\n      var dx1 = p2.x - p1.x,\n        dy1 = p2.y - p1.y,\n        dx2 = p3.x - p2.x,\n        dy2 = p3.y - p2.y;\n      var dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n        dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n        dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n        dy2p = dx2 * sin(quart) + dy2 * cos(quart);\n      // chord midpoints\n      var mx1 = (p1.x + p2.x) / 2,\n        my1 = (p1.y + p2.y) / 2,\n        mx2 = (p2.x + p3.x) / 2,\n        my2 = (p2.y + p3.y) / 2;\n      // midpoint offsets\n      var mx1n = mx1 + dx1p,\n        my1n = my1 + dy1p,\n        mx2n = mx2 + dx2p,\n        my2n = my2 + dy2p;\n      // intersection of these lines:\n      var arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),\n        r = utils.dist(arc, p1),\n        // arc start/end values, over mid point:\n        s = atan2(p1.y - arc.y, p1.x - arc.x),\n        m = atan2(p2.y - arc.y, p2.x - arc.x),\n        e = atan2(p3.y - arc.y, p3.x - arc.x),\n        _;\n      // determine arc direction (cw/ccw correction)\n      if (s < e) {\n        // if s<m<e, arc(s, e)\n        // if m<s<e, arc(e, s + tau)\n        // if s<e<m, arc(e, s + tau)\n        if (s > m || m > e) {\n          s += tau;\n        }\n        if (s > e) {\n          _ = e;\n          e = s;\n          s = _;\n        }\n      } else {\n        // if e<m<s, arc(e, s)\n        // if m<e<s, arc(s, e + tau)\n        // if e<s<m, arc(s, e + tau)\n        if (e < m && m < s) {\n          _ = e;\n          e = s;\n          s = _;\n        } else {\n          e += tau;\n        }\n      }\n      // assign and done.\n      arc.s = s;\n      arc.e = e;\n      arc.r = r;\n      return arc;\n    },\n\n    numberSort: function(a, b) {\n      return a - b;\n    }\n  };\n\n  module.exports = utils;\n})();\n","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","/**\r\n * Graham's Scan Convex Hull Algorithm\r\n * @desc An implementation of the Graham's Scan Convex Hull algorithm in JavaScript.\r\n * @author Brian Barnett, brian@3kb.co.uk, http://brianbar.net/ || http://3kb.co.uk/\r\n * @version 1.0.4\r\n */\r\nfunction ConvexHullGrahamScan(){this.anchorPoint=void 0,this.reverse=!1,this.points=[]}ConvexHullGrahamScan.prototype={constructor:ConvexHullGrahamScan,Point:function(n,t){this.x=n,this.y=t},_findPolarAngle:function(n,t){var i,o,h=57.295779513082;if(!n||!t)return 0;if(i=t.x-n.x,o=t.y-n.y,0==i&&0==o)return 0;var r=Math.atan2(o,i)*h;return this.reverse?0>=r&&(r+=360):r>=0&&(r+=360),r},addPoint:function(n,t){return void 0===this.anchorPoint?void(this.anchorPoint=new this.Point(n,t)):this.anchorPoint.y>t&&this.anchorPoint.x>n||this.anchorPoint.y===t&&this.anchorPoint.x>n||this.anchorPoint.y>t&&this.anchorPoint.x===n?(this.points.push(new this.Point(this.anchorPoint.x,this.anchorPoint.y)),void(this.anchorPoint=new this.Point(n,t))):void this.points.push(new this.Point(n,t))},_sortPoints:function(){var n=this;return this.points.sort(function(t,i){var o=n._findPolarAngle(n.anchorPoint,t),h=n._findPolarAngle(n.anchorPoint,i);return h>o?-1:o>h?1:0})},_checkPoints:function(n,t,i){var o,h=this._findPolarAngle(n,t),r=this._findPolarAngle(n,i);return h>r?(o=h-r,!(o>180)):r>h?(o=r-h,o>180):!0},getHull:function(){var n,t,i=[];if(this.reverse=this.points.every(function(n){return n.x<0&&n.y<0}),n=this._sortPoints(),t=n.length,3>t)return n.unshift(this.anchorPoint),n;for(i.push(n.shift(),n.shift());;){var o,h,r;if(i.push(n.shift()),o=i[i.length-3],h=i[i.length-2],r=i[i.length-1],this._checkPoints(o,h,r)&&i.splice(i.length-2,1),0==n.length){if(t==i.length){var e=this.anchorPoint;return i=i.filter(function(n){return!!n}),i.some(function(n){return n.x==e.x&&n.y==e.y})||i.unshift(this.anchorPoint),i}n=i,t=n.length,i=[],i.push(n.shift(),n.shift())}}}},\"function\"==typeof define&&define.amd&&define(function(){return ConvexHullGrahamScan}),\"undefined\"!=typeof module&&(module.exports=ConvexHullGrahamScan);","\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    var m = Math.floor((left + right) / 2);\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        var t = coords[2 * k + inc];\n        var i = left;\n        var j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    var stack = [0, ids.length - 1, 0];\n    var result = [];\n    var r2 = r * r;\n\n    while (stack.length) {\n        var axis = stack.pop();\n        var right = stack.pop();\n        var left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (var i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        var m = Math.floor((left + right) / 2);\n\n        var x = coords[2 * m];\n        var y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        var nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    var dx = ax - bx;\n    var dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nexport default function kdbush(points, getX, getY, nodeSize, ArrayType) {\n    return new KDBush(points, getX, getY, nodeSize, ArrayType);\n}\n\nfunction KDBush(points, getX, getY, nodeSize, ArrayType) {\n    getX = getX || defaultGetX;\n    getY = getY || defaultGetY;\n    ArrayType = ArrayType || Array;\n\n    this.nodeSize = nodeSize || 64;\n    this.points = points;\n\n    this.ids = new ArrayType(points.length);\n    this.coords = new ArrayType(points.length * 2);\n\n    for (var i = 0; i < points.length; i++) {\n        this.ids[i] = i;\n        this.coords[2 * i] = getX(points[i]);\n        this.coords[2 * i + 1] = getY(points[i]);\n    }\n\n    sort(this.ids, this.coords, this.nodeSize, 0, this.ids.length - 1, 0);\n}\n\nKDBush.prototype = {\n    range: function (minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    },\n\n    within: function (x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n};\n\nfunction defaultGetX(p) { return p[0]; }\nfunction defaultGetY(p) { return p[1]; }\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    var stack = [0, ids.length - 1, 0];\n    var result = [];\n    var x, y;\n\n    while (stack.length) {\n        var axis = stack.pop();\n        var right = stack.pop();\n        var left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (var i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        var m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        var nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","/*\r\n__________________________________________________________________________________________________________________________________________            \r\n __________________________________________________________________________________________________________________________________________           \r\n  ________/\\\\\\\\____________/\\\\\\\\_____/\\\\\\\\\\\\\\\\\\_____/\\\\\\________/\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\________________________________________          \r\n   _______\\/\\\\\\\\\\\\________/\\\\\\\\\\\\___/\\\\\\\\/////\\\\\\\\__\\/\\\\\\_____/\\\\\\//__\\/\\\\\\///////////__\\/\\\\\\///////\\\\\\_______________/\\\\\\___________________         \r\n    _______\\/\\\\\\//\\\\\\____/\\\\\\//\\\\\\__/\\\\\\/____\\///\\\\\\_\\/\\\\\\__/\\\\\\//_____\\/\\\\\\_____________\\/\\\\\\_____\\/\\\\\\______________\\///____________________        \r\n     _______\\/\\\\\\\\///\\\\\\/\\\\\\/_\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\//\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\/________________/\\\\\\__/\\\\\\\\\\\\\\\\\\\\______       \r\n      _______\\/\\\\\\__\\///\\\\\\/___\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\//_\\//\\\\\\____\\/\\\\\\///////______\\/\\\\\\//////\\\\\\_______________\\/\\\\\\_\\/\\\\\\//////_______      \r\n       _______\\/\\\\\\____\\///_____\\/\\\\\\_\\/\\\\\\/////////\\\\\\_\\/\\\\\\____\\//\\\\\\___\\/\\\\\\_____________\\/\\\\\\____\\//\\\\\\______________\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\______     \r\n        _______\\/\\\\\\_____________\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____\\//\\\\\\__\\/\\\\\\_____________\\/\\\\\\_____\\//\\\\\\_________/\\\\_\\/\\\\\\_\\////////\\\\\\______    \r\n         _______\\/\\\\\\_____________\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\______\\//\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\______\\//\\\\\\__/\\\\\\_\\//\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\______   \r\n          _______\\///______________\\///__\\///________\\///__\\///________\\///__\\///////////////__\\///________\\///__\\///___\\//////___\\//////////_______  \r\n           __________________________________________________________________________________________________________________________________________ \r\n            __________________________________________________________________________________________________________________________________________\r\n\r\nMaker.js\r\nhttps://github.com/Microsoft/maker.js\r\n\r\nCopyright (c) Microsoft Corporation. All rights reserved. \r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0  \r\n \r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \r\nMERCHANTABLITY OR NON-INFRINGEMENT. \r\n \r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n\r\n*/\r\n/**\r\n * Root module for Maker.js.\r\n *\r\n * Example: get a reference to Maker.js\r\n * ```\r\n * var makerjs = require('makerjs');\r\n * ```\r\n *\r\n */\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    /**\r\n     * Version info\r\n     */\r\n    MakerJs.version = 'debug';\r\n    /**\r\n     * Enumeration of environment types.\r\n     */\r\n    MakerJs.environmentTypes = {\r\n        BrowserUI: 'browser',\r\n        NodeJs: 'node',\r\n        WebWorker: 'worker',\r\n        Unknown: 'unknown'\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    function tryEval(name) {\r\n        try {\r\n            var value = eval(name);\r\n            return value;\r\n        }\r\n        catch (e) { }\r\n        return;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    function detectEnvironment() {\r\n        if (tryEval('WorkerGlobalScope') && tryEval('self')) {\r\n            return MakerJs.environmentTypes.WebWorker;\r\n        }\r\n        if (tryEval('window') && tryEval('document')) {\r\n            return MakerJs.environmentTypes.BrowserUI;\r\n        }\r\n        //put node last since packagers usually add shims for it\r\n        if (tryEval('global') && tryEval('process')) {\r\n            return MakerJs.environmentTypes.NodeJs;\r\n        }\r\n        return MakerJs.environmentTypes.Unknown;\r\n    }\r\n    /**\r\n     * Current execution environment type, should be one of environmentTypes.\r\n     */\r\n    MakerJs.environment = detectEnvironment();\r\n    //units\r\n    /**\r\n     * String-based enumeration of unit types: imperial, metric or otherwise.\r\n     * A model may specify the unit system it is using, if any. When importing a model, it may have different units.\r\n     * Unit conversion function is makerjs.units.conversionScale().\r\n     * Important: If you add to this, you must also add a corresponding conversion ratio in the unit.ts file!\r\n     */\r\n    MakerJs.unitType = {\r\n        Centimeter: 'cm',\r\n        Foot: 'foot',\r\n        Inch: 'inch',\r\n        Meter: 'm',\r\n        Millimeter: 'mm'\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    function split(s, char) {\r\n        var p = s.indexOf(char);\r\n        if (p < 0) {\r\n            return [s];\r\n        }\r\n        else if (p > 0) {\r\n            return [s.substr(0, p), s.substr(p + 1)];\r\n        }\r\n        else {\r\n            return ['', s];\r\n        }\r\n    }\r\n    /**\r\n     * Split a decimal into its whole and fractional parts as strings.\r\n     *\r\n     * Example: get whole and fractional parts of 42.056\r\n     * ```\r\n     * makerjs.splitDecimal(42.056); //returns [\"42\", \"056\"]\r\n     * ```\r\n     *\r\n     * @param n The number to split.\r\n     * @returns Array of 2 strings when n contains a decimal point, or an array of one string when n is an integer.\r\n     */\r\n    function splitDecimal(n) {\r\n        var s = n.toString();\r\n        if (s.indexOf('e') > 0) {\r\n            //max digits is 20 - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\r\n            s = n.toFixed(20).match(/.*[^(0+$)]/)[0]; //regex trims trailing zeros\r\n        }\r\n        return split(s, '.');\r\n    }\r\n    MakerJs.splitDecimal = splitDecimal;\r\n    /**\r\n     * Numeric rounding\r\n     *\r\n     * Example: round to 3 decimal places\r\n     * ```\r\n     * makerjs.round(3.14159, .001); //returns 3.142\r\n     * ```\r\n     *\r\n     * @param n The number to round off.\r\n     * @param accuracy Optional exemplar of number of decimal places.\r\n     * @returns Rounded number.\r\n     */\r\n    function round(n, accuracy) {\r\n        if (accuracy === void 0) { accuracy = .0000001; }\r\n        //optimize for early exit for integers\r\n        if (n % 1 === 0)\r\n            return n;\r\n        var exp = 1 - String(Math.ceil(1 / accuracy)).length;\r\n        //Adapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\r\n        // If the exp is undefined or zero...\r\n        if (typeof exp === 'undefined' || +exp === 0) {\r\n            return Math.round(n);\r\n        }\r\n        n = +n;\r\n        exp = +exp;\r\n        // If the value is not a number or the exp is not an integer...\r\n        if (isNaN(n) || !(typeof exp === 'number' && exp % 1 === 0)) {\r\n            return NaN;\r\n        }\r\n        // If the value is negative...\r\n        if (n < 0) {\r\n            return -round(-n, accuracy);\r\n        }\r\n        // Shift\r\n        var a = split(n.toString(), 'e');\r\n        n = Math.round(+(a[0] + 'e' + (a[1] ? (+a[1] - exp) : -exp)));\r\n        // Shift back\r\n        a = split(n.toString(), 'e');\r\n        return +(a[0] + 'e' + (a[1] ? (+a[1] + exp) : exp));\r\n    }\r\n    MakerJs.round = round;\r\n    /**\r\n     * Create a string representation of a route array.\r\n     *\r\n     * @param route Array of strings which are segments of a route.\r\n     * @returns String of the flattened array.\r\n     */\r\n    function createRouteKey(route) {\r\n        var converted = [];\r\n        for (var i = 0; i < route.length; i++) {\r\n            var element = route[i];\r\n            var newElement;\r\n            if (i % 2 === 0) {\r\n                newElement = (i > 0 ? '.' : '') + element;\r\n            }\r\n            else {\r\n                newElement = JSON.stringify([element]);\r\n            }\r\n            converted.push(newElement);\r\n        }\r\n        return converted.join('');\r\n    }\r\n    MakerJs.createRouteKey = createRouteKey;\r\n    /**\r\n     * Travel along a route inside of a model to extract a specific node in its tree.\r\n     *\r\n     * @param modelContext Model to travel within.\r\n     * @param route String of a flattened route, or a string array of route segments.\r\n     * @returns Model or Path object within the modelContext tree.\r\n     */\r\n    function travel(modelContext, route) {\r\n        if (!modelContext || !route)\r\n            return null;\r\n        var routeArray;\r\n        if (Array.isArray(route)) {\r\n            routeArray = route;\r\n        }\r\n        else {\r\n            routeArray = JSON.parse(route);\r\n        }\r\n        var props = routeArray.slice();\r\n        var ref = modelContext;\r\n        var origin = modelContext.origin || [0, 0];\r\n        while (props.length) {\r\n            var prop = props.shift();\r\n            ref = ref[prop];\r\n            if (!ref)\r\n                return null;\r\n            if (ref.origin && props.length) {\r\n                origin = MakerJs.point.add(origin, ref.origin);\r\n            }\r\n        }\r\n        return {\r\n            result: ref,\r\n            offset: origin\r\n        };\r\n    }\r\n    MakerJs.travel = travel;\r\n    /**\r\n     * @private\r\n     */\r\n    var clone = require('clone');\r\n    /**\r\n     * Clone an object.\r\n     *\r\n     * @param objectToClone The object to clone.\r\n     * @returns A new clone of the original object.\r\n     */\r\n    function cloneObject(objectToClone) {\r\n        return clone(objectToClone);\r\n    }\r\n    MakerJs.cloneObject = cloneObject;\r\n    /**\r\n     * Copy the properties from one object to another object.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * makerjs.extendObject({ abc: 123 }, { xyz: 789 }); //returns { abc: 123, xyz: 789 }\r\n     * ```\r\n     *\r\n     * @param target The object to extend. It will receive the new properties.\r\n     * @param other An object containing properties to merge in.\r\n     * @returns The original object after merging.\r\n     */\r\n    function extendObject(target, other) {\r\n        if (target && other) {\r\n            for (var key in other) {\r\n                if (typeof other[key] !== 'undefined') {\r\n                    target[key] = other[key];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    MakerJs.extendObject = extendObject;\r\n    /**\r\n     * Test to see if a variable is a function.\r\n     *\r\n     * @param value The object to test.\r\n     * @returns True if the object is a function type.\r\n     */\r\n    function isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n    MakerJs.isFunction = isFunction;\r\n    /**\r\n     * Test to see if a variable is a number.\r\n     *\r\n     * @param value The object to test.\r\n     * @returns True if the object is a number type.\r\n     */\r\n    function isNumber(value) {\r\n        return typeof value === 'number';\r\n    }\r\n    MakerJs.isNumber = isNumber;\r\n    /**\r\n     * Test to see if a variable is an object.\r\n     *\r\n     * @param value The object to test.\r\n     * @returns True if the object is an object type.\r\n     */\r\n    function isObject(value) {\r\n        return typeof value === 'object';\r\n    }\r\n    MakerJs.isObject = isObject;\r\n    //points\r\n    /**\r\n     * Test to see if an object implements the required properties of a point.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPoint(item) {\r\n        return item && Array.isArray(item) && item.length == 2 && isNumber(item[0]) && isNumber(item[1]);\r\n    }\r\n    MakerJs.isPoint = isPoint;\r\n    /**\r\n     * Test to see if an object implements the required properties of a path.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPath(item) {\r\n        return item && item.type && isPoint(item.origin);\r\n    }\r\n    MakerJs.isPath = isPath;\r\n    /**\r\n     * Test to see if an object implements the required properties of a line.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathLine(item) {\r\n        return isPath(item) && item.type == MakerJs.pathType.Line && isPoint(item.end);\r\n    }\r\n    MakerJs.isPathLine = isPathLine;\r\n    /**\r\n     * Test to see if an object implements the required properties of a circle.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathCircle(item) {\r\n        return isPath(item) && item.type == MakerJs.pathType.Circle && isNumber(item.radius);\r\n    }\r\n    MakerJs.isPathCircle = isPathCircle;\r\n    /**\r\n     * Test to see if an object implements the required properties of an arc.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathArc(item) {\r\n        return isPath(item) && item.type == MakerJs.pathType.Arc && isNumber(item.radius) && isNumber(item.startAngle) && isNumber(item.endAngle);\r\n    }\r\n    MakerJs.isPathArc = isPathArc;\r\n    /**\r\n     * Test to see if an object implements the required properties of an arc in a bezier curve.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathArcInBezierCurve(item) {\r\n        return isPathArc(item) && isObject(item.bezierData) && isNumber(item.bezierData.startT) && isNumber(item.bezierData.endT);\r\n    }\r\n    MakerJs.isPathArcInBezierCurve = isPathArcInBezierCurve;\r\n    /**\r\n     * String-based enumeration of all paths types.\r\n     *\r\n     * Examples: use pathType instead of string literal when creating a circle.\r\n     * ```\r\n     * var circle: IPathCircle = { type: pathType.Circle, origin: [0, 0], radius: 7 };   //typescript\r\n     * var circle = { type: pathType.Circle, origin: [0, 0], radius: 7 };   //javascript\r\n     * ```\r\n     */\r\n    MakerJs.pathType = {\r\n        Line: \"line\",\r\n        Circle: \"circle\",\r\n        Arc: \"arc\",\r\n        BezierSeed: \"bezier-seed\"\r\n    };\r\n    /**\r\n     * Test to see if an object implements the required properties of a model.\r\n     */\r\n    function isModel(item) {\r\n        return item && (item.paths || item.models);\r\n    }\r\n    MakerJs.isModel = isModel;\r\n    /**\r\n     * Test to see if an object implements the required properties of a chain.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isChain(item) {\r\n        var x = item;\r\n        return x && x.links && Array.isArray(x.links) && isNumber(x.pathLength);\r\n    }\r\n    MakerJs.isChain = isChain;\r\n    /**\r\n     * @private\r\n     */\r\n    var Cascade = /** @class */ (function () {\r\n        function Cascade(_module, $initial) {\r\n            this._module = _module;\r\n            this.$initial = $initial;\r\n            for (var methodName in this._module)\r\n                this._shadow(methodName);\r\n            this.$result = $initial;\r\n        }\r\n        Cascade.prototype._shadow = function (methodName) {\r\n            var _this = this;\r\n            this[methodName] = function () {\r\n                return _this._apply(_this._module[methodName], arguments);\r\n            };\r\n        };\r\n        Cascade.prototype._apply = function (fn, carriedArguments) {\r\n            var args = [].slice.call(carriedArguments);\r\n            args.unshift(this.$result);\r\n            this.$result = fn.apply(undefined, args);\r\n            return this;\r\n        };\r\n        Cascade.prototype.$reset = function () {\r\n            this.$result = this.$initial;\r\n            return this;\r\n        };\r\n        return Cascade;\r\n    }());\r\n    function $(context) {\r\n        if (isModel(context)) {\r\n            return new Cascade(MakerJs.model, context);\r\n        }\r\n        else if (isPath(context)) {\r\n            return new Cascade(MakerJs.path, context);\r\n        }\r\n        else if (isPoint(context)) {\r\n            return new Cascade(MakerJs.point, context);\r\n        }\r\n    }\r\n    MakerJs.$ = $;\r\n})(MakerJs || (MakerJs = {}));\r\n//CommonJs\r\nmodule.exports = MakerJs;\r\n//This file is generated by ./target/cascadable.js\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var angle;\r\n    (function (angle) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getFractionalPart(n) {\r\n            return MakerJs.splitDecimal(n)[1];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function setFractionalPart(n, fractionalPart) {\r\n            if (fractionalPart) {\r\n                return +(MakerJs.splitDecimal(n)[0] + '.' + fractionalPart);\r\n            }\r\n            else {\r\n                return n;\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function copyFractionalPart(src, dest) {\r\n            if ((src < 0 && dest < 0) || (src > 0 && dest > 0)) {\r\n                return setFractionalPart(dest, getFractionalPart(src));\r\n            }\r\n            return dest;\r\n        }\r\n        /**\r\n         * Ensures an angle is not greater than 360\r\n         *\r\n         * @param angleInDegrees Angle in degrees.\r\n         * @returns Same polar angle but not greater than 360 degrees.\r\n         */\r\n        function noRevolutions(angleInDegrees) {\r\n            var revolutions = Math.floor(angleInDegrees / 360);\r\n            if (revolutions === 0)\r\n                return angleInDegrees;\r\n            var a = angleInDegrees - (360 * revolutions);\r\n            return copyFractionalPart(angleInDegrees, a);\r\n        }\r\n        angle.noRevolutions = noRevolutions;\r\n        /**\r\n         * Convert an angle from degrees to radians.\r\n         *\r\n         * @param angleInDegrees Angle in degrees.\r\n         * @returns Angle in radians.\r\n         */\r\n        function toRadians(angleInDegrees) {\r\n            return noRevolutions(angleInDegrees) * Math.PI / 180.0;\r\n        }\r\n        angle.toRadians = toRadians;\r\n        /**\r\n         * Convert an angle from radians to degrees.\r\n         *\r\n         * @param angleInRadians Angle in radians.\r\n         * @returns Angle in degrees.\r\n         */\r\n        function toDegrees(angleInRadians) {\r\n            return angleInRadians * 180.0 / Math.PI;\r\n        }\r\n        angle.toDegrees = toDegrees;\r\n        /**\r\n         * Get an arc's end angle, ensured to be greater than its start angle.\r\n         *\r\n         * @param arc An arc path object.\r\n         * @returns End angle of arc.\r\n         */\r\n        function ofArcEnd(arc) {\r\n            //compensate for values past zero. This allows easy compute of total angle size.\r\n            //for example 0 = 360\r\n            if (arc.endAngle < arc.startAngle) {\r\n                var revolutions = Math.ceil((arc.startAngle - arc.endAngle) / 360);\r\n                var a = revolutions * 360 + arc.endAngle;\r\n                return copyFractionalPart(arc.endAngle, a);\r\n            }\r\n            return arc.endAngle;\r\n        }\r\n        angle.ofArcEnd = ofArcEnd;\r\n        /**\r\n         * Get the angle in the middle of an arc's start and end angles.\r\n         *\r\n         * @param arc An arc path object.\r\n         * @param ratio Optional number between 0 and 1 specifying percentage between start and end angles. Default is .5\r\n         * @returns Middle angle of arc.\r\n         */\r\n        function ofArcMiddle(arc, ratio) {\r\n            if (ratio === void 0) { ratio = .5; }\r\n            return arc.startAngle + ofArcSpan(arc) * ratio;\r\n        }\r\n        angle.ofArcMiddle = ofArcMiddle;\r\n        /**\r\n         * Total angle of an arc between its start and end angles.\r\n         *\r\n         * @param arc The arc to measure.\r\n         * @returns Angle of arc.\r\n         */\r\n        function ofArcSpan(arc) {\r\n            var endAngle = angle.ofArcEnd(arc);\r\n            var a = endAngle - arc.startAngle;\r\n            if (MakerJs.round(a) > 360) {\r\n                return noRevolutions(a);\r\n            }\r\n            else {\r\n                return a;\r\n            }\r\n        }\r\n        angle.ofArcSpan = ofArcSpan;\r\n        /**\r\n         * Angle of a line path.\r\n         *\r\n         * @param line The line path to find the angle of.\r\n         * @returns Angle of the line path, in degrees.\r\n         */\r\n        function ofLineInDegrees(line) {\r\n            return noRevolutions(toDegrees(ofPointInRadians(line.origin, line.end)));\r\n        }\r\n        angle.ofLineInDegrees = ofLineInDegrees;\r\n        /**\r\n         * Angle of a line through a point, in degrees.\r\n         *\r\n         * @param pointToFindAngle The point to find the angle.\r\n         * @param origin Point of origin of the angle.\r\n         * @returns Angle of the line throught the point, in degrees.\r\n         */\r\n        function ofPointInDegrees(origin, pointToFindAngle) {\r\n            return toDegrees(ofPointInRadians(origin, pointToFindAngle));\r\n        }\r\n        angle.ofPointInDegrees = ofPointInDegrees;\r\n        /**\r\n         * Angle of a line through a point, in radians.\r\n         *\r\n         * @param pointToFindAngle The point to find the angle.\r\n         * @param origin Point of origin of the angle.\r\n         * @returns Angle of the line throught the point, in radians.\r\n         */\r\n        function ofPointInRadians(origin, pointToFindAngle) {\r\n            var d = MakerJs.point.subtract(pointToFindAngle, origin);\r\n            var x = d[0];\r\n            var y = d[1];\r\n            return Math.atan2(-y, -x) + Math.PI;\r\n        }\r\n        angle.ofPointInRadians = ofPointInRadians;\r\n        /**\r\n         * Mirror an angle on either or both x and y axes.\r\n         *\r\n         * @param angleInDegrees The angle to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored angle.\r\n         */\r\n        function mirror(angleInDegrees, mirrorX, mirrorY) {\r\n            if (mirrorY) {\r\n                angleInDegrees = 360 - angleInDegrees;\r\n            }\r\n            if (mirrorX) {\r\n                angleInDegrees = (angleInDegrees < 180 ? 180 : 540) - angleInDegrees;\r\n            }\r\n            return angleInDegrees;\r\n        }\r\n        angle.mirror = mirror;\r\n        /**\r\n         * @private\r\n         */\r\n        var linkLineMap = {};\r\n        linkLineMap[MakerJs.pathType.Arc] = function (arc, first, reversed) {\r\n            var fromEnd = first != reversed;\r\n            var angleToRotate = fromEnd ? arc.endAngle - 90 : arc.startAngle + 90;\r\n            var origin = MakerJs.point.fromArc(arc)[fromEnd ? 1 : 0];\r\n            var end = MakerJs.point.rotate(MakerJs.point.add(origin, [arc.radius, 0]), angleToRotate, origin);\r\n            return new MakerJs.paths.Line(first ? [end, origin] : [origin, end]);\r\n        };\r\n        linkLineMap[MakerJs.pathType.Line] = function (line, first, reversed) {\r\n            return reversed ? new MakerJs.paths.Line(line.end, line.origin) : line;\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getLinkLine(chainLink, first) {\r\n            if (chainLink) {\r\n                var p = chainLink.walkedPath.pathContext;\r\n                var fn = linkLineMap[p.type];\r\n                if (fn) {\r\n                    return fn(p, first, chainLink.reversed);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Get the angle of a joint between 2 chain links.\r\n         *\r\n         * @param linkA First chain link.\r\n         * @param linkB Second chain link.\r\n         * @returns Angle between chain links.\r\n         */\r\n        function ofChainLinkJoint(linkA, linkB) {\r\n            if (arguments.length < 2)\r\n                return null;\r\n            var linkLines = [linkA, linkB].map(function (link, i) { return getLinkLine(link, i === 0); });\r\n            var result = noRevolutions(ofLineInDegrees(linkLines[1]) - ofLineInDegrees(linkLines[0]));\r\n            if (result > 180)\r\n                result -= 360;\r\n            return result;\r\n        }\r\n        angle.ofChainLinkJoint = ofChainLinkJoint;\r\n    })(angle = MakerJs.angle || (MakerJs.angle = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var point;\r\n    (function (point) {\r\n        /**\r\n         * Add two points together and return the result as a new point object.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @param subtract Optional boolean to subtract instead of add.\r\n         * @returns A new point object.\r\n         */\r\n        function add(a, b, subtract) {\r\n            var newPoint = clone(a);\r\n            if (!b)\r\n                return newPoint;\r\n            for (var i = 2; i--;) {\r\n                if (subtract) {\r\n                    newPoint[i] -= b[i];\r\n                }\r\n                else {\r\n                    newPoint[i] += b[i];\r\n                }\r\n            }\r\n            return newPoint;\r\n        }\r\n        point.add = add;\r\n        /**\r\n         * Get the average of two points.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns New point object which is the average of a and b.\r\n         */\r\n        function average(a, b) {\r\n            function avg(i) {\r\n                return (a[i] + b[i]) / 2;\r\n            }\r\n            return [avg(0), avg(1)];\r\n        }\r\n        point.average = average;\r\n        /**\r\n         * Clone a point into a new point.\r\n         *\r\n         * @param pointToClone The point to clone.\r\n         * @returns A new point with same values as the original.\r\n         */\r\n        function clone(pointToClone) {\r\n            if (!pointToClone)\r\n                return point.zero();\r\n            return [pointToClone[0], pointToClone[1]];\r\n        }\r\n        point.clone = clone;\r\n        /**\r\n         * From an array of points, find the closest point to a given reference point.\r\n         *\r\n         * @param referencePoint The reference point.\r\n         * @param pointOptions Array of points to choose from.\r\n         * @returns The first closest point from the pointOptions.\r\n         */\r\n        function closest(referencePoint, pointOptions) {\r\n            var smallest = {\r\n                index: 0,\r\n                distance: -1\r\n            };\r\n            for (var i = 0; i < pointOptions.length; i++) {\r\n                var distance = MakerJs.measure.pointDistance(referencePoint, pointOptions[i]);\r\n                if (smallest.distance == -1 || distance < smallest.distance) {\r\n                    smallest.distance = distance;\r\n                    smallest.index = i;\r\n                }\r\n            }\r\n            return pointOptions[smallest.index];\r\n        }\r\n        point.closest = closest;\r\n        /**\r\n         * @private\r\n         */\r\n        var zero_cos = {};\r\n        zero_cos[Math.PI / 2] = true;\r\n        zero_cos[3 * Math.PI / 2] = true;\r\n        /**\r\n         * @private\r\n         */\r\n        var zero_sin = {};\r\n        zero_sin[Math.PI] = true;\r\n        zero_sin[2 * Math.PI] = true;\r\n        /**\r\n         * Get a point from its polar coordinates.\r\n         *\r\n         * @param angleInRadians The angle of the polar coordinate, in radians.\r\n         * @param radius The radius of the polar coordinate.\r\n         * @returns A new point object.\r\n         */\r\n        function fromPolar(angleInRadians, radius) {\r\n            return [\r\n                (angleInRadians in zero_cos) ? 0 : MakerJs.round(radius * Math.cos(angleInRadians)),\r\n                (angleInRadians in zero_sin) ? 0 : MakerJs.round(radius * Math.sin(angleInRadians))\r\n            ];\r\n        }\r\n        point.fromPolar = fromPolar;\r\n        /**\r\n         * Get a point on a circle or arc path, at a given angle.\r\n         * @param angleInDegrees The angle at which you want to find the point, in degrees.\r\n         * @param circle A circle or arc.\r\n         * @returns A new point object.\r\n         */\r\n        function fromAngleOnCircle(angleInDegrees, circle) {\r\n            return add(circle.origin, fromPolar(MakerJs.angle.toRadians(angleInDegrees), circle.radius));\r\n        }\r\n        point.fromAngleOnCircle = fromAngleOnCircle;\r\n        /**\r\n         * Get the two end points of an arc path.\r\n         *\r\n         * @param arc The arc path object.\r\n         * @returns Array with 2 elements: [0] is the point object corresponding to the start angle, [1] is the point object corresponding to the end angle.\r\n         */\r\n        function fromArc(arc) {\r\n            return [fromAngleOnCircle(arc.startAngle, arc), fromAngleOnCircle(arc.endAngle, arc)];\r\n        }\r\n        point.fromArc = fromArc;\r\n        /**\r\n         * @private\r\n         */\r\n        var pathEndsMap = {};\r\n        pathEndsMap[MakerJs.pathType.Arc] = function (arc) {\r\n            return point.fromArc(arc);\r\n        };\r\n        pathEndsMap[MakerJs.pathType.Line] = function (line) {\r\n            return [line.origin, line.end];\r\n        };\r\n        pathEndsMap[MakerJs.pathType.BezierSeed] = pathEndsMap[MakerJs.pathType.Line];\r\n        /**\r\n         * Get the two end points of a path.\r\n         *\r\n         * @param pathContext The path object.\r\n         * @returns Array with 2 elements: [0] is the point object corresponding to the origin, [1] is the point object corresponding to the end.\r\n         */\r\n        function fromPathEnds(pathContext, pathOffset) {\r\n            var result = null;\r\n            var fn = pathEndsMap[pathContext.type];\r\n            if (fn) {\r\n                result = fn(pathContext);\r\n                if (pathOffset) {\r\n                    result = result.map(function (p) { return add(p, pathOffset); });\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        point.fromPathEnds = fromPathEnds;\r\n        /**\r\n         * @private\r\n         */\r\n        function verticalIntersectionPoint(verticalLine, nonVerticalSlope) {\r\n            var x = verticalLine.origin[0];\r\n            var y = nonVerticalSlope.slope * x + nonVerticalSlope.yIntercept;\r\n            return [x, y];\r\n        }\r\n        /**\r\n         * Calculates the intersection of slopes of two lines.\r\n         *\r\n         * @param lineA First line to use for slope.\r\n         * @param lineB Second line to use for slope.\r\n         * @param options Optional IPathIntersectionOptions.\r\n         * @returns point of intersection of the two slopes, or null if the slopes did not intersect.\r\n         */\r\n        function fromSlopeIntersection(lineA, lineB, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var slopeA = MakerJs.measure.lineSlope(lineA);\r\n            var slopeB = MakerJs.measure.lineSlope(lineB);\r\n            //see if slope are parallel \r\n            if (MakerJs.measure.isSlopeParallel(slopeA, slopeB)) {\r\n                if (MakerJs.measure.isSlopeEqual(slopeA, slopeB)) {\r\n                    //check for overlap\r\n                    options.out_AreOverlapped = MakerJs.measure.isLineOverlapping(lineA, lineB, options.excludeTangents);\r\n                }\r\n                return null;\r\n            }\r\n            var pointOfIntersection;\r\n            if (!slopeA.hasSlope) {\r\n                pointOfIntersection = verticalIntersectionPoint(lineA, slopeB);\r\n            }\r\n            else if (!slopeB.hasSlope) {\r\n                pointOfIntersection = verticalIntersectionPoint(lineB, slopeA);\r\n            }\r\n            else {\r\n                // find intersection by line equation\r\n                var x = (slopeB.yIntercept - slopeA.yIntercept) / (slopeA.slope - slopeB.slope);\r\n                var y = slopeA.slope * x + slopeA.yIntercept;\r\n                pointOfIntersection = [x, y];\r\n            }\r\n            return pointOfIntersection;\r\n        }\r\n        point.fromSlopeIntersection = fromSlopeIntersection;\r\n        /**\r\n         * @private\r\n         */\r\n        function midCircle(circle, midAngle) {\r\n            return point.add(circle.origin, point.fromPolar(MakerJs.angle.toRadians(midAngle), circle.radius));\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var middleMap = {};\r\n        middleMap[MakerJs.pathType.Arc] = function (arc, ratio) {\r\n            var midAngle = MakerJs.angle.ofArcMiddle(arc, ratio);\r\n            return midCircle(arc, midAngle);\r\n        };\r\n        middleMap[MakerJs.pathType.Circle] = function (circle, ratio) {\r\n            return midCircle(circle, 360 * ratio);\r\n        };\r\n        middleMap[MakerJs.pathType.Line] = function (line, ratio) {\r\n            function ration(a, b) {\r\n                return a + (b - a) * ratio;\r\n            }\r\n            ;\r\n            return [\r\n                ration(line.origin[0], line.end[0]),\r\n                ration(line.origin[1], line.end[1])\r\n            ];\r\n        };\r\n        middleMap[MakerJs.pathType.BezierSeed] = function (seed, ratio) {\r\n            return MakerJs.models.BezierCurve.computePoint(seed, ratio);\r\n        };\r\n        /**\r\n         * Get the middle point of a path.\r\n         *\r\n         * @param pathContext The path object.\r\n         * @param ratio Optional ratio (between 0 and 1) of point along the path. Default is .5 for middle.\r\n         * @returns Point on the path, in the middle of the path.\r\n         */\r\n        function middle(pathContext, ratio) {\r\n            if (ratio === void 0) { ratio = .5; }\r\n            var midPoint = null;\r\n            var fn = middleMap[pathContext.type];\r\n            if (fn) {\r\n                midPoint = fn(pathContext, ratio);\r\n            }\r\n            return midPoint;\r\n        }\r\n        point.middle = middle;\r\n        /**\r\n         * Create a clone of a point, mirrored on either or both x and y axes.\r\n         *\r\n         * @param pointToMirror The point to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored point.\r\n         */\r\n        function mirror(pointToMirror, mirrorX, mirrorY) {\r\n            var p = clone(pointToMirror);\r\n            if (mirrorX) {\r\n                p[0] = -p[0];\r\n            }\r\n            if (mirrorY) {\r\n                p[1] = -p[1];\r\n            }\r\n            return p;\r\n        }\r\n        point.mirror = mirror;\r\n        /**\r\n         * Round the values of a point.\r\n         *\r\n         * @param pointContext The point to serialize.\r\n         * @param accuracy Optional exemplar number of decimal places.\r\n         * @returns A new point with the values rounded.\r\n         */\r\n        function rounded(pointContext, accuracy) {\r\n            return [MakerJs.round(pointContext[0], accuracy), MakerJs.round(pointContext[1], accuracy)];\r\n        }\r\n        point.rounded = rounded;\r\n        /**\r\n         * Rotate a point.\r\n         *\r\n         * @param pointToRotate The point to rotate.\r\n         * @param angleInDegrees The amount of rotation, in degrees.\r\n         * @param rotationOrigin The center point of rotation.\r\n         * @returns A new point.\r\n         */\r\n        function rotate(pointToRotate, angleInDegrees, rotationOrigin) {\r\n            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n            var pointAngleInRadians = MakerJs.angle.ofPointInRadians(rotationOrigin, pointToRotate);\r\n            var d = MakerJs.measure.pointDistance(rotationOrigin, pointToRotate);\r\n            var rotatedPoint = fromPolar(pointAngleInRadians + MakerJs.angle.toRadians(angleInDegrees), d);\r\n            return add(rotationOrigin, rotatedPoint);\r\n        }\r\n        point.rotate = rotate;\r\n        /**\r\n         * Scale a point's coordinates.\r\n         *\r\n         * @param pointToScale The point to scale.\r\n         * @param scaleValue The amount of scaling.\r\n         * @returns A new point.\r\n         */\r\n        function scale(pointToScale, scaleValue) {\r\n            var p = clone(pointToScale);\r\n            for (var i = 2; i--;) {\r\n                p[i] *= scaleValue;\r\n            }\r\n            return p;\r\n        }\r\n        point.scale = scale;\r\n        /**\r\n         * Distort a point's coordinates.\r\n         *\r\n         * @param pointToDistort The point to distort.\r\n         * @param scaleX The amount of x scaling.\r\n         * @param scaleY The amount of y scaling.\r\n         * @returns A new point.\r\n         */\r\n        function distort(pointToDistort, scaleX, scaleY) {\r\n            return [pointToDistort[0] * scaleX, pointToDistort[1] * scaleY];\r\n        }\r\n        point.distort = distort;\r\n        /**\r\n         * Subtract a point from another point, and return the result as a new point. Shortcut to Add(a, b, subtract = true).\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns A new point object.\r\n         */\r\n        function subtract(a, b) {\r\n            return add(a, b, true);\r\n        }\r\n        point.subtract = subtract;\r\n        /**\r\n         * A point at 0,0 coordinates.\r\n         * NOTE: It is important to call this as a method, with the empty parentheses.\r\n         *\r\n         * @returns A new point.\r\n         */\r\n        function zero() {\r\n            return [0, 0];\r\n        }\r\n        point.zero = zero;\r\n    })(point = MakerJs.point || (MakerJs.point = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * Add a path to a model. This is basically equivalent to:\r\n         * ```\r\n         * parentModel.paths[pathId] = childPath;\r\n         * ```\r\n         * with additional checks to make it safe for cascading.\r\n         *\r\n         * @param childPath The path to add.\r\n         * @param parentModel The model to add to.\r\n         * @param pathId The id of the path.\r\n         * @param overwrite Optional flag to overwrite any path referenced by pathId. Default is false, which will create an id similar to pathId.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function addTo(childPath, parentModel, pathId, overwrite) {\r\n            if (overwrite === void 0) { overwrite = false; }\r\n            MakerJs.model.addPath(parentModel, childPath, pathId, overwrite);\r\n            return childPath;\r\n        }\r\n        path.addTo = addTo;\r\n        /**\r\n         * @private\r\n         */\r\n        function copyLayer(pathA, pathB) {\r\n            if (pathA && pathB && typeof pathA.layer !== 'undefined') {\r\n                pathB.layer = pathA.layer;\r\n            }\r\n            //carry extra props if this is an IPathArcInBezierCurve\r\n            if (pathA && pathB && ('bezierData' in pathA)) {\r\n                pathB.bezierData = pathA.bezierData;\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var copyPropsMap = {};\r\n        copyPropsMap[MakerJs.pathType.Circle] = function (srcCircle, destCircle, offset) {\r\n            destCircle.radius = srcCircle.radius;\r\n        };\r\n        copyPropsMap[MakerJs.pathType.Arc] = function (srcArc, destArc, offset) {\r\n            copyPropsMap[MakerJs.pathType.Circle](srcArc, destArc, offset);\r\n            destArc.startAngle = srcArc.startAngle;\r\n            destArc.endAngle = srcArc.endAngle;\r\n        };\r\n        copyPropsMap[MakerJs.pathType.Line] = function (srcLine, destLine, offset) {\r\n            destLine.end = MakerJs.point.add(srcLine.end, offset);\r\n        };\r\n        copyPropsMap[MakerJs.pathType.BezierSeed] = function (srcSeed, destSeed, offset) {\r\n            copyPropsMap[MakerJs.pathType.Line](srcSeed, destSeed, offset);\r\n            destSeed.controls = srcSeed.controls.map(function (p) { return MakerJs.point.add(p, offset); });\r\n        };\r\n        /**\r\n         * Create a clone of a path. This is faster than cloneObject.\r\n         *\r\n         * @param pathToClone The path to clone.\r\n         * @param offset Optional point to move path a relative distance.\r\n         * @returns Cloned path.\r\n         */\r\n        function clone(pathToClone, offset) {\r\n            var result = { type: pathToClone.type, origin: MakerJs.point.add(pathToClone.origin, offset) };\r\n            var fn = copyPropsMap[pathToClone.type];\r\n            if (fn) {\r\n                fn(pathToClone, result, offset);\r\n            }\r\n            copyLayer(pathToClone, result);\r\n            return result;\r\n        }\r\n        path.clone = clone;\r\n        /**\r\n         * Copy the schema properties of one path to another.\r\n         *\r\n         * @param srcPath The source path to copy property values from.\r\n         * @param destPath The destination path to copy property values to.\r\n         * @returns The source path.\r\n         */\r\n        function copyProps(srcPath, destPath) {\r\n            var fn = copyPropsMap[srcPath.type];\r\n            if (fn) {\r\n                destPath.origin = MakerJs.point.clone(srcPath.origin);\r\n                fn(srcPath, destPath);\r\n            }\r\n            copyLayer(srcPath, destPath);\r\n            return srcPath;\r\n        }\r\n        path.copyProps = copyProps;\r\n        /**\r\n         * @private\r\n         */\r\n        var mirrorMap = {};\r\n        mirrorMap[MakerJs.pathType.Line] = function (line, origin, mirrorX, mirrorY) {\r\n            return new MakerJs.paths.Line(origin, MakerJs.point.mirror(line.end, mirrorX, mirrorY));\r\n        };\r\n        mirrorMap[MakerJs.pathType.Circle] = function (circle, origin, mirrorX, mirrorY) {\r\n            return new MakerJs.paths.Circle(origin, circle.radius);\r\n        };\r\n        mirrorMap[MakerJs.pathType.Arc] = function (arc, origin, mirrorX, mirrorY) {\r\n            var startAngle = MakerJs.angle.mirror(arc.startAngle, mirrorX, mirrorY);\r\n            var endAngle = MakerJs.angle.mirror(MakerJs.angle.ofArcEnd(arc), mirrorX, mirrorY);\r\n            var xor = mirrorX != mirrorY;\r\n            return new MakerJs.paths.Arc(origin, arc.radius, xor ? endAngle : startAngle, xor ? startAngle : endAngle);\r\n        };\r\n        mirrorMap[MakerJs.pathType.BezierSeed] = function (seed, origin, mirrorX, mirrorY) {\r\n            var mirrored = mirrorMap[MakerJs.pathType.Line](seed, origin, mirrorX, mirrorY);\r\n            mirrored.type = MakerJs.pathType.BezierSeed;\r\n            mirrored.controls = seed.controls.map(function (c) { return MakerJs.point.mirror(c, mirrorX, mirrorY); });\r\n            return mirrored;\r\n        };\r\n        /**\r\n         * Set the layer of a path. This is equivalent to:\r\n         * ```\r\n         * pathContext.layer = layer;\r\n         * ```\r\n         *\r\n         * @param pathContext The path to set the layer.\r\n         * @param layer The layer name.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function layer(pathContext, layer) {\r\n            pathContext.layer = layer;\r\n            return pathContext;\r\n        }\r\n        path.layer = layer;\r\n        /**\r\n         * Create a clone of a path, mirrored on either or both x and y axes.\r\n         *\r\n         * @param pathToMirror The path to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored path.\r\n         */\r\n        function mirror(pathToMirror, mirrorX, mirrorY) {\r\n            var newPath = null;\r\n            if (pathToMirror) {\r\n                var origin = MakerJs.point.mirror(pathToMirror.origin, mirrorX, mirrorY);\r\n                var fn = mirrorMap[pathToMirror.type];\r\n                if (fn) {\r\n                    newPath = fn(pathToMirror, origin, mirrorX, mirrorY);\r\n                }\r\n            }\r\n            copyLayer(pathToMirror, newPath);\r\n            return newPath;\r\n        }\r\n        path.mirror = mirror;\r\n        /**\r\n         * @private\r\n         */\r\n        var moveMap = {};\r\n        moveMap[MakerJs.pathType.Line] = function (line, origin) {\r\n            var delta = MakerJs.point.subtract(line.end, line.origin);\r\n            line.end = MakerJs.point.add(origin, delta);\r\n        };\r\n        /**\r\n         * Move a path to an absolute point.\r\n         *\r\n         * @param pathToMove The path to move.\r\n         * @param origin The new origin for the path.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function move(pathToMove, origin) {\r\n            if (pathToMove) {\r\n                var fn = moveMap[pathToMove.type];\r\n                if (fn) {\r\n                    fn(pathToMove, origin);\r\n                }\r\n                pathToMove.origin = origin;\r\n            }\r\n            return pathToMove;\r\n        }\r\n        path.move = move;\r\n        /**\r\n         * @private\r\n         */\r\n        var moveRelativeMap = {};\r\n        moveRelativeMap[MakerJs.pathType.Line] = function (line, delta, subtract) {\r\n            line.end = MakerJs.point.add(line.end, delta, subtract);\r\n        };\r\n        moveRelativeMap[MakerJs.pathType.BezierSeed] = function (seed, delta, subtract) {\r\n            moveRelativeMap[MakerJs.pathType.Line](seed, delta, subtract);\r\n            seed.controls = seed.controls.map(function (c) { return MakerJs.point.add(c, delta, subtract); });\r\n        };\r\n        /**\r\n         * Move a path's origin by a relative amount.\r\n         *\r\n         * @param pathToMove The path to move.\r\n         * @param delta The x & y adjustments as a point object.\r\n         * @param subtract Optional boolean to subtract instead of add.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function moveRelative(pathToMove, delta, subtract) {\r\n            if (pathToMove && delta) {\r\n                pathToMove.origin = MakerJs.point.add(pathToMove.origin, delta, subtract);\r\n                var fn = moveRelativeMap[pathToMove.type];\r\n                if (fn) {\r\n                    fn(pathToMove, delta, subtract);\r\n                }\r\n            }\r\n            return pathToMove;\r\n        }\r\n        path.moveRelative = moveRelative;\r\n        /**\r\n         * Move some paths relatively during a task execution, then unmove them.\r\n         *\r\n         * @param pathsToMove The paths to move.\r\n         * @param deltas The x & y adjustments as a point object array.\r\n         * @param task The function to call while the paths are temporarily moved.\r\n         */\r\n        function moveTemporary(pathsToMove, deltas, task) {\r\n            var subtract = false;\r\n            function move(pathToOffset, i) {\r\n                if (deltas[i]) {\r\n                    moveRelative(pathToOffset, deltas[i], subtract);\r\n                }\r\n            }\r\n            pathsToMove.map(move);\r\n            task();\r\n            subtract = true;\r\n            pathsToMove.map(move);\r\n        }\r\n        path.moveTemporary = moveTemporary;\r\n        /**\r\n         * @private\r\n         */\r\n        var rotateMap = {};\r\n        rotateMap[MakerJs.pathType.Line] = function (line, angleInDegrees, rotationOrigin) {\r\n            line.end = MakerJs.point.rotate(line.end, angleInDegrees, rotationOrigin);\r\n        };\r\n        rotateMap[MakerJs.pathType.Arc] = function (arc, angleInDegrees, rotationOrigin) {\r\n            arc.startAngle = MakerJs.angle.noRevolutions(arc.startAngle + angleInDegrees);\r\n            arc.endAngle = MakerJs.angle.noRevolutions(arc.endAngle + angleInDegrees);\r\n        };\r\n        rotateMap[MakerJs.pathType.BezierSeed] = function (seed, angleInDegrees, rotationOrigin) {\r\n            rotateMap[MakerJs.pathType.Line](seed, angleInDegrees, rotationOrigin);\r\n            seed.controls = seed.controls.map(function (c) { return MakerJs.point.rotate(c, angleInDegrees, rotationOrigin); });\r\n        };\r\n        /**\r\n         * Rotate a path.\r\n         *\r\n         * @param pathToRotate The path to rotate.\r\n         * @param angleInDegrees The amount of rotation, in degrees.\r\n         * @param rotationOrigin The center point of rotation.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function rotate(pathToRotate, angleInDegrees, rotationOrigin) {\r\n            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n            if (!pathToRotate || !angleInDegrees)\r\n                return pathToRotate;\r\n            pathToRotate.origin = MakerJs.point.rotate(pathToRotate.origin, angleInDegrees, rotationOrigin);\r\n            var fn = rotateMap[pathToRotate.type];\r\n            if (fn) {\r\n                fn(pathToRotate, angleInDegrees, rotationOrigin);\r\n            }\r\n            return pathToRotate;\r\n        }\r\n        path.rotate = rotate;\r\n        /**\r\n         * @private\r\n         */\r\n        var scaleMap = {};\r\n        scaleMap[MakerJs.pathType.Line] = function (line, scaleValue) {\r\n            line.end = MakerJs.point.scale(line.end, scaleValue);\r\n        };\r\n        scaleMap[MakerJs.pathType.BezierSeed] = function (seed, scaleValue) {\r\n            scaleMap[MakerJs.pathType.Line](seed, scaleValue);\r\n            seed.controls = seed.controls.map(function (c) { return MakerJs.point.scale(c, scaleValue); });\r\n        };\r\n        scaleMap[MakerJs.pathType.Circle] = function (circle, scaleValue) {\r\n            circle.radius *= scaleValue;\r\n        };\r\n        scaleMap[MakerJs.pathType.Arc] = scaleMap[MakerJs.pathType.Circle];\r\n        /**\r\n         * Scale a path.\r\n         *\r\n         * @param pathToScale The path to scale.\r\n         * @param scaleValue The amount of scaling.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function scale(pathToScale, scaleValue) {\r\n            if (!pathToScale || scaleValue === 1 || !scaleValue)\r\n                return pathToScale;\r\n            pathToScale.origin = MakerJs.point.scale(pathToScale.origin, scaleValue);\r\n            var fn = scaleMap[pathToScale.type];\r\n            if (fn) {\r\n                fn(pathToScale, scaleValue);\r\n            }\r\n            return pathToScale;\r\n        }\r\n        path.scale = scale;\r\n        /**\r\n         * @private\r\n         */\r\n        var distortMap = {};\r\n        distortMap[MakerJs.pathType.Arc] = function (arc, scaleX, scaleY) {\r\n            return new MakerJs.models.EllipticArc(arc, scaleX, scaleY);\r\n        };\r\n        distortMap[MakerJs.pathType.Circle] = function (circle, scaleX, scaleY) {\r\n            var ellipse = new MakerJs.models.Ellipse(circle.radius * scaleX, circle.radius * scaleY);\r\n            ellipse.origin = MakerJs.point.distort(circle.origin, scaleX, scaleY);\r\n            return ellipse;\r\n        };\r\n        distortMap[MakerJs.pathType.Line] = function (line, scaleX, scaleY) {\r\n            return new MakerJs.paths.Line([line.origin, line.end].map(function (p) { return MakerJs.point.distort(p, scaleX, scaleY); }));\r\n        };\r\n        distortMap[MakerJs.pathType.BezierSeed] = function (seed, scaleX, scaleY) {\r\n            var d = MakerJs.point.distort;\r\n            return {\r\n                type: MakerJs.pathType.BezierSeed,\r\n                origin: d(seed.origin, scaleX, scaleY),\r\n                controls: seed.controls.map(function (c) { return d(c, scaleX, scaleY); }),\r\n                end: d(seed.end, scaleX, scaleY)\r\n            };\r\n        };\r\n        /**\r\n         * Distort a path - scale x and y individually.\r\n         *\r\n         * @param pathToDistort The path to distort.\r\n         * @param scaleX The amount of x scaling.\r\n         * @param scaleY The amount of y scaling.\r\n         * @returns A new IModel (for circles and arcs) or IPath (for lines and bezier seeds).\r\n         */\r\n        function distort(pathToDistort, scaleX, scaleY) {\r\n            if (!pathToDistort || !scaleX || !scaleY)\r\n                return null;\r\n            var fn = distortMap[pathToDistort.type];\r\n            if (fn) {\r\n                var distorted = fn(pathToDistort, scaleX, scaleY);\r\n                if (typeof pathToDistort.layer !== 'undefined') {\r\n                    distorted.layer = pathToDistort.layer;\r\n                }\r\n                return distorted;\r\n            }\r\n            return null;\r\n        }\r\n        path.distort = distort;\r\n        /**\r\n         * Connect 2 lines at their slope intersection point.\r\n         *\r\n         * @param lineA First line to converge.\r\n         * @param lineB Second line to converge.\r\n         * @param useOriginA Optional flag to converge the origin point of lineA instead of the end point.\r\n         * @param useOriginB Optional flag to converge the origin point of lineB instead of the end point.\r\n         * @returns point of convergence.\r\n         */\r\n        function converge(lineA, lineB, useOriginA, useOriginB) {\r\n            var p = MakerJs.point.fromSlopeIntersection(lineA, lineB);\r\n            if (p) {\r\n                var lines = [lineA, lineB];\r\n                var useOrigin = [useOriginA, useOriginB];\r\n                if (arguments.length === 2) {\r\n                    //converge to closest\r\n                    lines.forEach(function (line, i) {\r\n                        useOrigin[i] = (MakerJs.point.closest(p, [line.origin, line.end]) === line.origin);\r\n                    });\r\n                }\r\n                function setPoint(line, useOrigin) {\r\n                    var setP;\r\n                    if (useOrigin) {\r\n                        setP = line.origin;\r\n                    }\r\n                    else {\r\n                        setP = line.end;\r\n                    }\r\n                    setP[0] = p[0];\r\n                    setP[1] = p[1];\r\n                }\r\n                lines.forEach(function (line, i) {\r\n                    setPoint(line, useOrigin[i]);\r\n                });\r\n            }\r\n            return p;\r\n        }\r\n        path.converge = converge;\r\n        /**\r\n         * @private\r\n         */\r\n        var alterMap = {};\r\n        alterMap[MakerJs.pathType.Arc] = function (arc, pathLength, distance, useOrigin) {\r\n            var span = MakerJs.angle.ofArcSpan(arc);\r\n            var delta = ((pathLength + distance) * span / pathLength) - span;\r\n            if (useOrigin) {\r\n                arc.startAngle -= delta;\r\n            }\r\n            else {\r\n                arc.endAngle += delta;\r\n            }\r\n        };\r\n        alterMap[MakerJs.pathType.Circle] = function (circle, pathLength, distance, useOrigin) {\r\n            circle.radius *= (pathLength + distance) / pathLength;\r\n        };\r\n        alterMap[MakerJs.pathType.Line] = function (line, pathLength, distance, useOrigin) {\r\n            var delta = MakerJs.point.scale(MakerJs.point.subtract(line.end, line.origin), distance / pathLength);\r\n            if (useOrigin) {\r\n                line.origin = MakerJs.point.subtract(line.origin, delta);\r\n            }\r\n            else {\r\n                line.end = MakerJs.point.add(line.end, delta);\r\n            }\r\n        };\r\n        /**\r\n         * Alter a path by lengthening or shortening it.\r\n         *\r\n         * @param pathToAlter Path to alter.\r\n         * @param distance Numeric amount of length to add or remove from the path. Use a positive number to lengthen, negative to shorten. When shortening: this function will not alter the path and will return null if the resulting path length is less than or equal to zero.\r\n         * @param useOrigin Optional flag to alter from the origin instead of the end of the path.\r\n         * @returns The original path (for cascading), or null if the path could not be altered.\r\n         */\r\n        function alterLength(pathToAlter, distance, useOrigin) {\r\n            if (useOrigin === void 0) { useOrigin = false; }\r\n            if (!pathToAlter || !distance)\r\n                return null;\r\n            var fn = alterMap[pathToAlter.type];\r\n            if (fn) {\r\n                var pathLength = MakerJs.measure.pathLength(pathToAlter);\r\n                if (!pathLength || -distance >= pathLength)\r\n                    return null;\r\n                fn(pathToAlter, pathLength, distance, useOrigin);\r\n                return pathToAlter;\r\n            }\r\n            return null;\r\n        }\r\n        path.alterLength = alterLength;\r\n        /**\r\n         * Get points along a path.\r\n         *\r\n         * @param pathContext Path to get points from.\r\n         * @param numberOfPoints Number of points to divide the path.\r\n         * @returns Array of points which are on the path spread at a uniform interval.\r\n         */\r\n        function toPoints(pathContext, numberOfPoints) {\r\n            //avoid division by zero when there is only one point\r\n            if (numberOfPoints == 1) {\r\n                return [MakerJs.point.middle(pathContext)];\r\n            }\r\n            var points = [];\r\n            var base = numberOfPoints;\r\n            if (pathContext.type != MakerJs.pathType.Circle)\r\n                base--;\r\n            for (var i = 0; i < numberOfPoints; i++) {\r\n                points.push(MakerJs.point.middle(pathContext, i / base));\r\n            }\r\n            return points;\r\n        }\r\n        path.toPoints = toPoints;\r\n        /**\r\n         * @private\r\n         */\r\n        var numberOfKeyPointsMap = {};\r\n        numberOfKeyPointsMap[MakerJs.pathType.Line] = function (line) {\r\n            return 2;\r\n        };\r\n        numberOfKeyPointsMap[MakerJs.pathType.Circle] = function (circle, maxPointDistance) {\r\n            var len = MakerJs.measure.pathLength(circle);\r\n            if (!len)\r\n                return 0;\r\n            maxPointDistance = maxPointDistance || len;\r\n            return Math.max(8, Math.ceil(len / (maxPointDistance || len)));\r\n        };\r\n        numberOfKeyPointsMap[MakerJs.pathType.Arc] = function (arc, maxPointDistance) {\r\n            var len = MakerJs.measure.pathLength(arc);\r\n            if (!len)\r\n                return 0;\r\n            var minPoints = Math.ceil(MakerJs.angle.ofArcSpan(arc) / 45) + 1;\r\n            return Math.max(minPoints, Math.ceil(len / (maxPointDistance || len)));\r\n        };\r\n        /**\r\n         * Get key points (a minimal a number of points) along a path.\r\n         *\r\n         * @param pathContext Path to get points from.\r\n         * @param maxArcFacet Optional maximum length between points on an arc or circle.\r\n         * @returns Array of points which are on the path.\r\n         */\r\n        function toKeyPoints(pathContext, maxArcFacet) {\r\n            if (pathContext.type == MakerJs.pathType.BezierSeed) {\r\n                var curve = new MakerJs.models.BezierCurve(pathContext);\r\n                var curveKeyPoints;\r\n                MakerJs.model.findChains(curve, function (chains, loose, layer) {\r\n                    if (chains.length == 1) {\r\n                        var c = chains[0];\r\n                        switch (c.links[0].walkedPath.pathId) {\r\n                            case 'arc_0':\r\n                            case 'line_0':\r\n                                break;\r\n                            default:\r\n                                MakerJs.chain.reverse(c);\r\n                        }\r\n                        curveKeyPoints = MakerJs.chain.toKeyPoints(c);\r\n                    }\r\n                    else if (loose.length === 1) {\r\n                        curveKeyPoints = toKeyPoints(loose[0].pathContext);\r\n                    }\r\n                });\r\n                return curveKeyPoints;\r\n            }\r\n            else {\r\n                var fn = numberOfKeyPointsMap[pathContext.type];\r\n                if (fn) {\r\n                    var numberOfKeyPoints = fn(pathContext, maxArcFacet);\r\n                    if (numberOfKeyPoints) {\r\n                        return toPoints(pathContext, numberOfKeyPoints);\r\n                    }\r\n                }\r\n            }\r\n            return [];\r\n        }\r\n        path.toKeyPoints = toKeyPoints;\r\n        /**\r\n         * Center a path at [0, 0].\r\n         *\r\n         * @param pathToCenter The path to center.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function center(pathToCenter) {\r\n            var m = MakerJs.measure.pathExtents(pathToCenter);\r\n            var c = MakerJs.point.average(m.high, m.low);\r\n            var o = MakerJs.point.subtract(pathToCenter.origin || [0, 0], c);\r\n            move(pathToCenter, o);\r\n            return pathToCenter;\r\n        }\r\n        path.center = center;\r\n        /**\r\n         * Move a path so its bounding box begins at [0, 0].\r\n         *\r\n         * @param pathToZero The path to zero.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function zero(pathToZero) {\r\n            var m = MakerJs.measure.pathExtents(pathToZero);\r\n            var z = MakerJs.point.subtract(pathToZero.origin || [0, 0], m.low);\r\n            move(pathToZero, z);\r\n            return pathToZero;\r\n        }\r\n        path.zero = zero;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path_1) {\r\n        /**\r\n         * @private\r\n         */\r\n        var breakPathFunctionMap = {};\r\n        breakPathFunctionMap[MakerJs.pathType.Arc] = function (arc, pointOfBreak) {\r\n            var angleAtBreakPoint = MakerJs.angle.ofPointInDegrees(arc.origin, pointOfBreak);\r\n            if (MakerJs.measure.isAngleEqual(angleAtBreakPoint, arc.startAngle) || MakerJs.measure.isAngleEqual(angleAtBreakPoint, arc.endAngle)) {\r\n                return null;\r\n            }\r\n            function getAngleStrictlyBetweenArcAngles() {\r\n                var startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n                var endAngle = startAngle + MakerJs.angle.ofArcEnd(arc) - arc.startAngle;\r\n                var tries = [0, 1, -1];\r\n                for (var i = 0; i < tries.length; i++) {\r\n                    var add = +360 * tries[i];\r\n                    if (MakerJs.measure.isBetween(angleAtBreakPoint + add, startAngle, endAngle, true)) {\r\n                        return arc.startAngle + angleAtBreakPoint + add - startAngle;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            var angleAtBreakPointBetween = getAngleStrictlyBetweenArcAngles();\r\n            if (angleAtBreakPointBetween == null) {\r\n                return null;\r\n            }\r\n            var savedEndAngle = arc.endAngle;\r\n            arc.endAngle = angleAtBreakPointBetween;\r\n            //clone the original to carry other properties\r\n            var copy = MakerJs.cloneObject(arc);\r\n            copy.startAngle = angleAtBreakPointBetween;\r\n            copy.endAngle = savedEndAngle;\r\n            return copy;\r\n        };\r\n        breakPathFunctionMap[MakerJs.pathType.Circle] = function (circle, pointOfBreak) {\r\n            //breaking a circle turns it into an arc\r\n            circle.type = MakerJs.pathType.Arc;\r\n            var arc = circle;\r\n            var angleAtBreakPoint = MakerJs.angle.ofPointInDegrees(circle.origin, pointOfBreak);\r\n            arc.startAngle = angleAtBreakPoint;\r\n            arc.endAngle = angleAtBreakPoint + 360;\r\n            return null;\r\n        };\r\n        breakPathFunctionMap[MakerJs.pathType.Line] = function (line, pointOfBreak) {\r\n            if (!MakerJs.measure.isBetweenPoints(pointOfBreak, line, true)) {\r\n                return null;\r\n            }\r\n            var savedEndPoint = line.end;\r\n            line.end = pointOfBreak;\r\n            //clone the original to carry other properties\r\n            var copy = MakerJs.cloneObject(line);\r\n            copy.origin = pointOfBreak;\r\n            copy.end = savedEndPoint;\r\n            return copy;\r\n        };\r\n        /**\r\n         * Breaks a path in two. The supplied path will end at the supplied pointOfBreak,\r\n         * a new path is returned which begins at the pointOfBreak and ends at the supplied path's initial end point.\r\n         * For Circle, the original path will be converted in place to an Arc, and null is returned.\r\n         *\r\n         * @param pathToBreak The path to break.\r\n         * @param pointOfBreak The point at which to break the path.\r\n         * @returns A new path of the same type, when path type is line or arc. Returns null for circle.\r\n         */\r\n        function breakAtPoint(pathToBreak, pointOfBreak) {\r\n            if (pathToBreak && pointOfBreak) {\r\n                var fn = breakPathFunctionMap[pathToBreak.type];\r\n                if (fn) {\r\n                    var result = fn(pathToBreak, pointOfBreak);\r\n                    if (result && ('layer' in pathToBreak)) {\r\n                        result.layer = pathToBreak.layer;\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path_1.breakAtPoint = breakAtPoint;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var paths;\r\n    (function (paths) {\r\n        /**\r\n         * Class for arc path.\r\n         */\r\n        var Arc = /** @class */ (function () {\r\n            function Arc() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                function getSpan(origin) {\r\n                    var startAngle = MakerJs.angle.ofPointInDegrees(origin, args[clockwise ? 1 : 0]);\r\n                    var endAngle = MakerJs.angle.ofPointInDegrees(origin, args[clockwise ? 0 : 1]);\r\n                    if (endAngle < startAngle) {\r\n                        endAngle += 360;\r\n                    }\r\n                    return {\r\n                        origin: origin,\r\n                        startAngle: startAngle,\r\n                        endAngle: endAngle,\r\n                        size: endAngle - startAngle\r\n                    };\r\n                }\r\n                switch (args.length) {\r\n                    case 5:\r\n                        //SVG style arc designation\r\n                        var pointA = args[0];\r\n                        var pointB = args[1];\r\n                        this.radius = args[2];\r\n                        var largeArc = args[3];\r\n                        var clockwise = args[4];\r\n                        var span;\r\n                        //make sure arc can reach. if not, scale up.\r\n                        var smallestRadius = MakerJs.measure.pointDistance(pointA, pointB) / 2;\r\n                        if (MakerJs.round(this.radius - smallestRadius) <= 0) {\r\n                            this.radius = smallestRadius;\r\n                            span = getSpan(MakerJs.point.average(pointA, pointB));\r\n                        }\r\n                        else {\r\n                            //find the 2 potential origins\r\n                            var origins = MakerJs.path.intersection(new Circle(pointA, this.radius), new Circle(pointB, this.radius));\r\n                            var spans = [];\r\n                            for (var i = origins.intersectionPoints.length; i--;) {\r\n                                span = getSpan(origins.intersectionPoints[i]);\r\n                                //insert sorted by size ascending\r\n                                if (spans.length == 0 || span.size > spans[0].size) {\r\n                                    spans.push(span);\r\n                                }\r\n                                else {\r\n                                    spans.unshift(span);\r\n                                }\r\n                            }\r\n                            var index = largeArc ? 1 : 0;\r\n                            span = spans[index];\r\n                        }\r\n                        this.origin = span.origin;\r\n                        this.startAngle = span.startAngle;\r\n                        this.endAngle = span.endAngle;\r\n                        break;\r\n                    case 4:\r\n                        this.origin = args[0];\r\n                        this.radius = args[1];\r\n                        this.startAngle = args[2];\r\n                        this.endAngle = args[3];\r\n                        break;\r\n                    case 3:\r\n                        if (MakerJs.isPoint(args[2])) {\r\n                            //from 3 points\r\n                            Circle.apply(this, args);\r\n                            var angles = [];\r\n                            for (var i = 0; i < 3; i++) {\r\n                                angles.push(MakerJs.angle.ofPointInDegrees(this.origin, args[i]));\r\n                            }\r\n                            this.startAngle = angles[0];\r\n                            this.endAngle = angles[2];\r\n                            //swap start and end angles if this arc does not contain the midpoint\r\n                            if (!MakerJs.measure.isBetweenArcAngles(angles[1], this, false)) {\r\n                                this.startAngle = angles[2];\r\n                                this.endAngle = angles[0];\r\n                            }\r\n                            //do not fall through if this was 3 points\r\n                            break;\r\n                        }\r\n                    //fall through to below if 2 points\r\n                    case 2:\r\n                        //from 2 points (and optional clockwise flag)\r\n                        var clockwise = args[2];\r\n                        Circle.call(this, args[0], args[1]);\r\n                        this.startAngle = MakerJs.angle.ofPointInDegrees(this.origin, args[clockwise ? 1 : 0]);\r\n                        this.endAngle = MakerJs.angle.ofPointInDegrees(this.origin, args[clockwise ? 0 : 1]);\r\n                        break;\r\n                }\r\n                //do this after Circle.apply / Circle.call to make sure this is an arc\r\n                this.type = MakerJs.pathType.Arc;\r\n            }\r\n            return Arc;\r\n        }());\r\n        paths.Arc = Arc;\r\n        /**\r\n         * Class for circle path.\r\n         */\r\n        var Circle = /** @class */ (function () {\r\n            function Circle() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = MakerJs.pathType.Circle;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        this.origin = [0, 0];\r\n                        this.radius = args[0];\r\n                        break;\r\n                    case 2:\r\n                        if (MakerJs.isNumber(args[1])) {\r\n                            this.origin = args[0];\r\n                            this.radius = args[1];\r\n                        }\r\n                        else {\r\n                            //Circle from 2 points\r\n                            this.origin = MakerJs.point.average(args[0], args[1]);\r\n                            this.radius = MakerJs.measure.pointDistance(this.origin, args[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        //Circle from 3 points\r\n                        //create 2 lines with 2nd point in common\r\n                        var lines = [\r\n                            new Line(args[0], args[1]),\r\n                            new Line(args[1], args[2])\r\n                        ];\r\n                        //create perpendicular lines\r\n                        var perpendiculars = [];\r\n                        for (var i = 2; i--;) {\r\n                            var midpoint = MakerJs.point.middle(lines[i]);\r\n                            perpendiculars.push(MakerJs.path.rotate(lines[i], 90, midpoint));\r\n                        }\r\n                        //find intersection of slopes of perpendiculars\r\n                        var origin = MakerJs.point.fromSlopeIntersection(perpendiculars[0], perpendiculars[1]);\r\n                        if (origin) {\r\n                            this.origin = origin;\r\n                            //radius is distance to any of the 3 points\r\n                            this.radius = MakerJs.measure.pointDistance(this.origin, args[0]);\r\n                        }\r\n                        else {\r\n                            throw 'invalid parameters - attempted to construct a circle from 3 points on a line: ' + JSON.stringify(args);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            return Circle;\r\n        }());\r\n        paths.Circle = Circle;\r\n        /**\r\n         * Class for line path.\r\n         */\r\n        var Line = /** @class */ (function () {\r\n            function Line() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = MakerJs.pathType.Line;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        var points = args[0];\r\n                        this.origin = points[0];\r\n                        this.end = points[1];\r\n                        break;\r\n                    case 2:\r\n                        this.origin = args[0];\r\n                        this.end = args[1];\r\n                        break;\r\n                }\r\n            }\r\n            return Line;\r\n        }());\r\n        paths.Line = Line;\r\n        /**\r\n         * Class for chord, which is simply a line path that connects the endpoints of an arc.\r\n         *\r\n         * @param arc Arc to use as the basic for the chord.\r\n         */\r\n        var Chord = /** @class */ (function () {\r\n            function Chord(arc) {\r\n                var arcPoints = MakerJs.point.fromArc(arc);\r\n                this.type = MakerJs.pathType.Line;\r\n                this.origin = arcPoints[0];\r\n                this.end = arcPoints[1];\r\n            }\r\n            return Chord;\r\n        }());\r\n        paths.Chord = Chord;\r\n        /**\r\n         * Class for a parallel line path.\r\n         *\r\n         * @param toLine A line to be parallel to.\r\n         * @param distance Distance between parallel and original line.\r\n         * @param nearPoint Any point to determine which side of the line to place the parallel.\r\n         */\r\n        var Parallel = /** @class */ (function () {\r\n            function Parallel(toLine, distance, nearPoint) {\r\n                this.type = MakerJs.pathType.Line;\r\n                this.origin = MakerJs.point.clone(toLine.origin);\r\n                this.end = MakerJs.point.clone(toLine.end);\r\n                var angleOfLine = MakerJs.angle.ofLineInDegrees(this);\r\n                function getNewOrigin(offsetAngle) {\r\n                    var origin = MakerJs.point.add(toLine.origin, MakerJs.point.fromPolar(MakerJs.angle.toRadians(angleOfLine + offsetAngle), distance));\r\n                    return {\r\n                        origin: origin,\r\n                        nearness: MakerJs.measure.pointDistance(origin, nearPoint)\r\n                    };\r\n                }\r\n                var newOrigins = [getNewOrigin(-90), getNewOrigin(90)];\r\n                var newOrigin = (newOrigins[0].nearness < newOrigins[1].nearness) ? newOrigins[0].origin : newOrigins[1].origin;\r\n                MakerJs.path.move(this, newOrigin);\r\n            }\r\n            return Parallel;\r\n        }());\r\n        paths.Parallel = Parallel;\r\n    })(paths = MakerJs.paths || (MakerJs.paths = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * Add a Caption object to a model.\r\n         * @param modelContext The model to add to.\r\n         * @param text Text to add.\r\n         * @param leftAnchorPoint Optional Point on left side middle of text.\r\n         * @param rightAnchorPoint Optional Point on right side middle of text.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function addCaption(modelContext, text, leftAnchorPoint, rightAnchorPoint) {\r\n            if (!leftAnchorPoint) {\r\n                leftAnchorPoint = MakerJs.point.zero();\r\n            }\r\n            if (!rightAnchorPoint) {\r\n                rightAnchorPoint = MakerJs.point.clone(leftAnchorPoint);\r\n            }\r\n            modelContext.caption = { text: text, anchor: new MakerJs.paths.Line(leftAnchorPoint, rightAnchorPoint) };\r\n            return modelContext;\r\n        }\r\n        model.addCaption = addCaption;\r\n        /**\r\n         * Add a path as a child. This is basically equivalent to:\r\n         * ```\r\n         * parentModel.paths[childPathId] = childPath;\r\n         * ```\r\n         * with additional checks to make it safe for cascading.\r\n         *\r\n         * @param modelContext The model to add to.\r\n         * @param pathContext The path to add.\r\n         * @param pathId The id of the path.\r\n         * @param overWrite Optional flag to overwrite any path referenced by pathId. Default is false, which will create an id similar to pathId.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function addPath(modelContext, pathContext, pathId, overWrite) {\r\n            if (overWrite === void 0) { overWrite = false; }\r\n            var id = overWrite ? pathId : getSimilarPathId(modelContext, pathId);\r\n            modelContext.paths = modelContext.paths || {};\r\n            modelContext.paths[id] = pathContext;\r\n            return modelContext;\r\n        }\r\n        model.addPath = addPath;\r\n        /**\r\n         * Add a model as a child. This is basically equivalent to:\r\n         * ```\r\n         * parentModel.models[childModelId] = childModel;\r\n         * ```\r\n         * with additional checks to make it safe for cascading.\r\n         *\r\n         * @param parentModel The model to add to.\r\n         * @param childModel The model to add.\r\n         * @param childModelId The id of the child model.\r\n         * @param overWrite Optional flag to overwrite any model referenced by childModelId. Default is false, which will create an id similar to childModelId.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function addModel(parentModel, childModel, childModelId, overWrite) {\r\n            if (overWrite === void 0) { overWrite = false; }\r\n            var id = overWrite ? childModelId : getSimilarModelId(parentModel, childModelId);\r\n            parentModel.models = parentModel.models || {};\r\n            parentModel.models[id] = childModel;\r\n            return parentModel;\r\n        }\r\n        model.addModel = addModel;\r\n        /**\r\n         * Add a model as a child of another model. This is basically equivalent to:\r\n         * ```\r\n         * parentModel.models[childModelId] = childModel;\r\n         * ```\r\n         * with additional checks to make it safe for cascading.\r\n         *\r\n         * @param childModel The model to add.\r\n         * @param parentModel The model to add to.\r\n         * @param childModelId The id of the child model.\r\n         * @param overWrite Optional flag to overwrite any model referenced by childModelId. Default is false, which will create an id similar to childModelId.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function addTo(childModel, parentModel, childModelId, overWrite) {\r\n            if (overWrite === void 0) { overWrite = false; }\r\n            addModel(parentModel, childModel, childModelId, overWrite);\r\n            return childModel;\r\n        }\r\n        model.addTo = addTo;\r\n        /**\r\n         * Clone a model. Alias of makerjs.cloneObject(modelToClone)\r\n         *\r\n         * @param modelToClone The model to clone.\r\n         * @returns A clone of the model you passed.\r\n         */\r\n        function clone(modelToClone) {\r\n            return MakerJs.cloneObject(modelToClone);\r\n        }\r\n        model.clone = clone;\r\n        /**\r\n         * Count the number of child models within a given model.\r\n         *\r\n         * @param modelContext The model containing other models.\r\n         * @returns Number of child models.\r\n         */\r\n        function countChildModels(modelContext) {\r\n            var count = 0;\r\n            if (modelContext.models) {\r\n                for (var id in modelContext.models) {\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        model.countChildModels = countChildModels;\r\n        /**\r\n         * Gets all Caption objects, in absolute position, in this model and its children.\r\n         * @param modelContext The model to search for Caption objects.\r\n         * @returns Array of Caption objects.\r\n         */\r\n        function getAllCaptionsOffset(modelContext) {\r\n            var captions = [];\r\n            function tryAddCaption(m, offset, layer) {\r\n                if (m.caption) {\r\n                    captions.push({ text: m.caption.text, anchor: MakerJs.path.clone(m.caption.anchor, MakerJs.point.add(m.origin, offset)), layer: (m.caption.anchor.layer || layer) });\r\n                }\r\n            }\r\n            tryAddCaption(modelContext, modelContext.origin, modelContext.layer);\r\n            model.walk(modelContext, {\r\n                afterChildWalk: function (wm) { return tryAddCaption(wm.childModel, wm.offset, wm.layer); }\r\n            });\r\n            return captions;\r\n        }\r\n        model.getAllCaptionsOffset = getAllCaptionsOffset;\r\n        /**\r\n         * @private\r\n         */\r\n        function getSimilarId(map, id) {\r\n            if (!map)\r\n                return id;\r\n            var i = 0;\r\n            var newId = id;\r\n            while (newId in map) {\r\n                i++;\r\n                newId = [id, i].join('_');\r\n            }\r\n            return newId;\r\n        }\r\n        /**\r\n         * Get an unused id in the models map with the same prefix.\r\n         *\r\n         * @param modelContext The model containing the models map.\r\n         * @param modelId The id to use directly (if unused), or as a prefix.\r\n         */\r\n        function getSimilarModelId(modelContext, modelId) {\r\n            return getSimilarId(modelContext.models, modelId);\r\n        }\r\n        model.getSimilarModelId = getSimilarModelId;\r\n        /**\r\n         * Get an unused id in the paths map with the same prefix.\r\n         *\r\n         * @param modelContext The model containing the paths map.\r\n         * @param pathId The id to use directly (if unused), or as a prefix.\r\n         */\r\n        function getSimilarPathId(modelContext, pathId) {\r\n            return getSimilarId(modelContext.paths, pathId);\r\n        }\r\n        model.getSimilarPathId = getSimilarPathId;\r\n        /**\r\n         * Set the layer of a model. This is equivalent to:\r\n         * ```\r\n         * modelContext.layer = layer;\r\n         * ```\r\n         *\r\n         * @param modelContext The model to set the layer.\r\n         * @param layer The layer name.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function layer(modelContext, layer) {\r\n            modelContext.layer = layer;\r\n            return modelContext;\r\n        }\r\n        model.layer = layer;\r\n        /**\r\n         * Moves all of a model's children (models and paths, recursively) in reference to a single common origin. Useful when points between children need to connect to each other.\r\n         *\r\n         * @param modelToOriginate The model to originate.\r\n         * @param origin Optional offset reference point.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function originate(modelToOriginate, origin) {\r\n            function innerOriginate(m, o) {\r\n                if (!m)\r\n                    return;\r\n                var newOrigin = MakerJs.point.add(m.origin, o);\r\n                if (m.type === MakerJs.models.BezierCurve.typeName) {\r\n                    MakerJs.path.moveRelative(m.seed, newOrigin);\r\n                }\r\n                if (m.paths) {\r\n                    for (var id in m.paths) {\r\n                        MakerJs.path.moveRelative(m.paths[id], newOrigin);\r\n                    }\r\n                }\r\n                if (m.models) {\r\n                    for (var id in m.models) {\r\n                        innerOriginate(m.models[id], newOrigin);\r\n                    }\r\n                }\r\n                if (m.caption) {\r\n                    MakerJs.path.moveRelative(m.caption.anchor, newOrigin);\r\n                }\r\n                m.origin = MakerJs.point.zero();\r\n            }\r\n            innerOriginate(modelToOriginate, origin ? MakerJs.point.subtract([0, 0], origin) : [0, 0]);\r\n            if (origin) {\r\n                modelToOriginate.origin = origin;\r\n            }\r\n            return modelToOriginate;\r\n        }\r\n        model.originate = originate;\r\n        /**\r\n         * Center a model at [0, 0].\r\n         *\r\n         * @param modelToCenter The model to center.\r\n         * @param centerX Boolean to center on the x axis. Default is true.\r\n         * @param centerY Boolean to center on the y axis. Default is true.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function center(modelToCenter, centerX, centerY) {\r\n            if (centerX === void 0) { centerX = true; }\r\n            if (centerY === void 0) { centerY = true; }\r\n            var m = MakerJs.measure.modelExtents(modelToCenter);\r\n            var o = modelToCenter.origin || [0, 0];\r\n            if (centerX)\r\n                o[0] -= m.center[0];\r\n            if (centerY)\r\n                o[1] -= m.center[1];\r\n            modelToCenter.origin = o;\r\n            return modelToCenter;\r\n        }\r\n        model.center = center;\r\n        /**\r\n         * Create a clone of a model, mirrored on either or both x and y axes.\r\n         *\r\n         * @param modelToMirror The model to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored model.\r\n         */\r\n        function mirror(modelToMirror, mirrorX, mirrorY) {\r\n            var newModel = {};\r\n            if (!modelToMirror)\r\n                return null;\r\n            if (modelToMirror.origin) {\r\n                newModel.origin = MakerJs.point.mirror(modelToMirror.origin, mirrorX, mirrorY);\r\n            }\r\n            if (modelToMirror.type) {\r\n                newModel.type = modelToMirror.type;\r\n            }\r\n            if ('layer' in modelToMirror) {\r\n                newModel.layer = modelToMirror.layer;\r\n            }\r\n            if (modelToMirror.units) {\r\n                newModel.units = modelToMirror.units;\r\n            }\r\n            if (modelToMirror.type === MakerJs.models.BezierCurve.typeName) {\r\n                newModel.type = MakerJs.models.BezierCurve.typeName;\r\n                newModel.seed = MakerJs.path.mirror(modelToMirror.seed, mirrorX, mirrorY);\r\n            }\r\n            if (modelToMirror.paths) {\r\n                newModel.paths = {};\r\n                for (var id in modelToMirror.paths) {\r\n                    var pathToMirror = modelToMirror.paths[id];\r\n                    if (!pathToMirror)\r\n                        continue;\r\n                    var pathMirrored = MakerJs.path.mirror(pathToMirror, mirrorX, mirrorY);\r\n                    if (!pathMirrored)\r\n                        continue;\r\n                    newModel.paths[id] = pathMirrored;\r\n                }\r\n            }\r\n            if (modelToMirror.models) {\r\n                newModel.models = {};\r\n                for (var id in modelToMirror.models) {\r\n                    var childModelToMirror = modelToMirror.models[id];\r\n                    if (!childModelToMirror)\r\n                        continue;\r\n                    var childModelMirrored = mirror(childModelToMirror, mirrorX, mirrorY);\r\n                    if (!childModelMirrored)\r\n                        continue;\r\n                    newModel.models[id] = childModelMirrored;\r\n                }\r\n            }\r\n            if (modelToMirror.caption) {\r\n                newModel.caption = MakerJs.cloneObject(modelToMirror.caption);\r\n                newModel.caption.anchor = MakerJs.path.mirror(modelToMirror.caption.anchor, mirrorX, mirrorY);\r\n            }\r\n            return newModel;\r\n        }\r\n        model.mirror = mirror;\r\n        /**\r\n         * Move a model to an absolute point. Note that this is also accomplished by directly setting the origin property. This function exists for cascading.\r\n         *\r\n         * @param modelToMove The model to move.\r\n         * @param origin The new position of the model.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function move(modelToMove, origin) {\r\n            modelToMove.origin = MakerJs.point.clone(origin);\r\n            return modelToMove;\r\n        }\r\n        model.move = move;\r\n        /**\r\n         * Move a model's origin by a relative amount.\r\n         *\r\n         * @param modelToMove The model to move.\r\n         * @param delta The x & y adjustments as a point object.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function moveRelative(modelToMove, delta) {\r\n            if (modelToMove) {\r\n                modelToMove.origin = MakerJs.point.add(modelToMove.origin || MakerJs.point.zero(), delta);\r\n            }\r\n            return modelToMove;\r\n        }\r\n        model.moveRelative = moveRelative;\r\n        /**\r\n         * Prefix the ids of paths in a model.\r\n         *\r\n         * @param modelToPrefix The model to prefix.\r\n         * @param prefix The prefix to prepend on paths ids.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function prefixPathIds(modelToPrefix, prefix) {\r\n            var walkedPaths = [];\r\n            //first collect the paths because we don't want to modify keys during an iteration on keys\r\n            walk(modelToPrefix, {\r\n                onPath: function (walkedPath) {\r\n                    walkedPaths.push(walkedPath);\r\n                }\r\n            });\r\n            //now modify the ids in our own iteration\r\n            for (var i = 0; i < walkedPaths.length; i++) {\r\n                var walkedPath = walkedPaths[i];\r\n                delete walkedPath.modelContext.paths[walkedPath.pathId];\r\n                walkedPath.modelContext.paths[prefix + walkedPath.pathId] = walkedPath.pathContext;\r\n            }\r\n            return modelToPrefix;\r\n        }\r\n        model.prefixPathIds = prefixPathIds;\r\n        /**\r\n         * Rotate a model.\r\n         *\r\n         * @param modelToRotate The model to rotate.\r\n         * @param angleInDegrees The amount of rotation, in degrees.\r\n         * @param rotationOrigin The center point of rotation.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function rotate(modelToRotate, angleInDegrees, rotationOrigin) {\r\n            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n            if (!modelToRotate || !angleInDegrees)\r\n                return modelToRotate;\r\n            var offsetOrigin = MakerJs.point.subtract(rotationOrigin, modelToRotate.origin);\r\n            if (modelToRotate.type === MakerJs.models.BezierCurve.typeName) {\r\n                MakerJs.path.rotate(modelToRotate.seed, angleInDegrees, offsetOrigin);\r\n            }\r\n            if (modelToRotate.paths) {\r\n                for (var id in modelToRotate.paths) {\r\n                    MakerJs.path.rotate(modelToRotate.paths[id], angleInDegrees, offsetOrigin);\r\n                }\r\n            }\r\n            if (modelToRotate.models) {\r\n                for (var id in modelToRotate.models) {\r\n                    rotate(modelToRotate.models[id], angleInDegrees, offsetOrigin);\r\n                }\r\n            }\r\n            if (modelToRotate.caption) {\r\n                MakerJs.path.rotate(modelToRotate.caption.anchor, angleInDegrees, offsetOrigin);\r\n            }\r\n            return modelToRotate;\r\n        }\r\n        model.rotate = rotate;\r\n        /**\r\n         * Scale a model.\r\n         *\r\n         * @param modelToScale The model to scale.\r\n         * @param scaleValue The amount of scaling.\r\n         * @param scaleOrigin Optional boolean to scale the origin point. Typically false for the root model.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function scale(modelToScale, scaleValue, scaleOrigin) {\r\n            if (scaleOrigin === void 0) { scaleOrigin = false; }\r\n            if (scaleOrigin && modelToScale.origin) {\r\n                modelToScale.origin = MakerJs.point.scale(modelToScale.origin, scaleValue);\r\n            }\r\n            if (modelToScale.type === MakerJs.models.BezierCurve.typeName) {\r\n                MakerJs.path.scale(modelToScale.seed, scaleValue);\r\n            }\r\n            if (modelToScale.paths) {\r\n                for (var id in modelToScale.paths) {\r\n                    MakerJs.path.scale(modelToScale.paths[id], scaleValue);\r\n                }\r\n            }\r\n            if (modelToScale.models) {\r\n                for (var id in modelToScale.models) {\r\n                    scale(modelToScale.models[id], scaleValue, true);\r\n                }\r\n            }\r\n            if (modelToScale.caption) {\r\n                MakerJs.path.scale(modelToScale.caption.anchor, scaleValue);\r\n            }\r\n            return modelToScale;\r\n        }\r\n        model.scale = scale;\r\n        /**\r\n         * @private\r\n         */\r\n        function addDistortedPath(parentModel, pathToDistort, pathId, layer, scaleX, scaleY, bezierAccuracy) {\r\n            var distortedPath = MakerJs.path.distort(pathToDistort, scaleX, scaleY);\r\n            layer = layer || pathToDistort.layer;\r\n            if (layer) {\r\n                distortedPath.layer = layer;\r\n            }\r\n            if (MakerJs.isPath(distortedPath)) {\r\n                if (distortedPath.type === MakerJs.pathType.BezierSeed) {\r\n                    var curve = new MakerJs.models.BezierCurve(distortedPath, bezierAccuracy);\r\n                    addModel(parentModel, curve, pathId);\r\n                }\r\n                else {\r\n                    addPath(parentModel, distortedPath, pathId);\r\n                }\r\n            }\r\n            else {\r\n                addModel(parentModel, distortedPath, pathId);\r\n            }\r\n        }\r\n        /**\r\n         * Create a distorted copy of a model - scale x and y individually.\r\n         *\r\n         * @param modelToDistort The model to distort.\r\n         * @param scaleX The amount of x scaling.\r\n         * @param scaleY The amount of y scaling.\r\n         * @param scaleOrigin Optional boolean to scale the origin point. Typically false for the root model.\r\n         * @param bezierAccuracy Optional accuracy of Bezier curves.\r\n         * @returns New model (for cascading).\r\n         */\r\n        function distort(modelToDistort, scaleX, scaleY, scaleOrigin, bezierAccuracy) {\r\n            if (scaleOrigin === void 0) { scaleOrigin = false; }\r\n            var distorted = {};\r\n            if (modelToDistort.layer) {\r\n                distorted.layer = modelToDistort.layer;\r\n            }\r\n            if (scaleOrigin && modelToDistort.origin) {\r\n                distorted.origin = MakerJs.point.distort(modelToDistort.origin, scaleX, scaleY);\r\n            }\r\n            if (modelToDistort.type === MakerJs.models.BezierCurve.typeName) {\r\n                var b = modelToDistort;\r\n                var bezierPartsByLayer = MakerJs.models.BezierCurve.getBezierSeeds(b, { byLayers: true });\r\n                var _loop_1 = function (layer_1) {\r\n                    var pathArray = bezierPartsByLayer[layer_1];\r\n                    pathArray.forEach(function (p, i) {\r\n                        addDistortedPath(distorted, p, i.toString(), layer_1, scaleX, scaleY, bezierAccuracy);\r\n                    });\r\n                };\r\n                for (var layer_1 in bezierPartsByLayer) {\r\n                    _loop_1(layer_1);\r\n                }\r\n            }\r\n            else if (modelToDistort.paths) {\r\n                for (var pathId in modelToDistort.paths) {\r\n                    var pathToDistort = modelToDistort.paths[pathId];\r\n                    addDistortedPath(distorted, pathToDistort, pathId, null, scaleX, scaleY, bezierAccuracy);\r\n                }\r\n            }\r\n            if (modelToDistort.models) {\r\n                for (var childId in modelToDistort.models) {\r\n                    var childModel = modelToDistort.models[childId];\r\n                    var distortedChild = distort(childModel, scaleX, scaleY, true, bezierAccuracy);\r\n                    addModel(distorted, distortedChild, childId);\r\n                }\r\n            }\r\n            if (modelToDistort.caption) {\r\n                distorted.caption = MakerJs.cloneObject(modelToDistort.caption);\r\n                distorted.caption.anchor = MakerJs.path.distort(modelToDistort.caption.anchor, scaleX, scaleY);\r\n            }\r\n            return distorted;\r\n        }\r\n        model.distort = distort;\r\n        /**\r\n         * Convert a model to match a different unit system.\r\n         *\r\n         * @param modeltoConvert The model to convert.\r\n         * @param destUnitType The unit system.\r\n         * @returns The scaled model (for cascading).\r\n         */\r\n        function convertUnits(modeltoConvert, destUnitType) {\r\n            if (modeltoConvert.units && MakerJs.units.isValidUnit(modeltoConvert.units) && MakerJs.units.isValidUnit(destUnitType)) {\r\n                var ratio = MakerJs.units.conversionScale(modeltoConvert.units, destUnitType);\r\n                if (ratio != 1) {\r\n                    scale(modeltoConvert, ratio);\r\n                    //update the model with its new unit type\r\n                    modeltoConvert.units = destUnitType;\r\n                }\r\n            }\r\n            return modeltoConvert;\r\n        }\r\n        model.convertUnits = convertUnits;\r\n        /**\r\n         * DEPRECATED - use model.walk instead.\r\n         * Recursively walk through all paths for a given model.\r\n         *\r\n         * @param modelContext The model to walk.\r\n         * @param callback Callback for each path.\r\n         */\r\n        function walkPaths(modelContext, callback) {\r\n            if (modelContext.paths) {\r\n                for (var pathId in modelContext.paths) {\r\n                    if (!modelContext.paths[pathId])\r\n                        continue;\r\n                    callback(modelContext, pathId, modelContext.paths[pathId]);\r\n                }\r\n            }\r\n            if (modelContext.models) {\r\n                for (var id in modelContext.models) {\r\n                    if (!modelContext.models[id])\r\n                        continue;\r\n                    walkPaths(modelContext.models[id], callback);\r\n                }\r\n            }\r\n        }\r\n        model.walkPaths = walkPaths;\r\n        /**\r\n         * Recursively walk through all child models and paths for a given model.\r\n         *\r\n         * @param modelContext The model to walk.\r\n         * @param options Object containing callbacks.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function walk(modelContext, options) {\r\n            if (!modelContext)\r\n                return;\r\n            function walkRecursive(modelContext, layer, offset, route, routeKey) {\r\n                var newOffset = MakerJs.point.add(modelContext.origin, offset);\r\n                layer = (layer != undefined) ? layer : '';\r\n                if (modelContext.paths) {\r\n                    for (var pathId in modelContext.paths) {\r\n                        var pathContext = modelContext.paths[pathId];\r\n                        if (!pathContext)\r\n                            continue;\r\n                        var walkedPath = {\r\n                            modelContext: modelContext,\r\n                            layer: (pathContext.layer != undefined) ? pathContext.layer : layer,\r\n                            offset: newOffset,\r\n                            pathContext: pathContext,\r\n                            pathId: pathId,\r\n                            route: route.concat(['paths', pathId]),\r\n                            routeKey: routeKey + (routeKey ? '.' : '') + 'paths' + JSON.stringify([pathId])\r\n                        };\r\n                        if (options.onPath)\r\n                            options.onPath(walkedPath);\r\n                    }\r\n                }\r\n                if (modelContext.models) {\r\n                    for (var modelId in modelContext.models) {\r\n                        var childModel = modelContext.models[modelId];\r\n                        if (!childModel)\r\n                            continue;\r\n                        var walkedModel = {\r\n                            parentModel: modelContext,\r\n                            layer: (childModel.layer != undefined) ? childModel.layer : layer,\r\n                            offset: newOffset,\r\n                            route: route.concat(['models', modelId]),\r\n                            routeKey: routeKey + (routeKey ? '.' : '') + 'models' + JSON.stringify([modelId]),\r\n                            childId: modelId,\r\n                            childModel: childModel\r\n                        };\r\n                        if (options.beforeChildWalk) {\r\n                            if (!options.beforeChildWalk(walkedModel))\r\n                                continue;\r\n                        }\r\n                        walkRecursive(walkedModel.childModel, walkedModel.layer, newOffset, walkedModel.route, walkedModel.routeKey);\r\n                        if (options.afterChildWalk) {\r\n                            options.afterChildWalk(walkedModel);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            walkRecursive(modelContext, modelContext.layer, [0, 0], [], '');\r\n            return modelContext;\r\n        }\r\n        model.walk = walk;\r\n        /**\r\n         * Move a model so its bounding box begins at [0, 0].\r\n         *\r\n         * @param modelToZero The model to zero.\r\n         * @param zeroX Boolean to zero on the x axis. Default is true.\r\n         * @param zeroY Boolean to zero on the y axis. Default is true.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function zero(modelToZero, zeroX, zeroY) {\r\n            if (zeroX === void 0) { zeroX = true; }\r\n            if (zeroY === void 0) { zeroY = true; }\r\n            var m = MakerJs.measure.modelExtents(modelToZero);\r\n            var z = modelToZero.origin || [0, 0];\r\n            if (zeroX)\r\n                z[0] -= m.low[0];\r\n            if (zeroY)\r\n                z[1] -= m.low[1];\r\n            modelToZero.origin = z;\r\n            return modelToZero;\r\n        }\r\n        model.zero = zero;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getNonZeroSegments(pathToSegment, breakPoint) {\r\n            var segment1 = MakerJs.cloneObject(pathToSegment);\r\n            if (!segment1)\r\n                return null;\r\n            var segment2 = MakerJs.path.breakAtPoint(segment1, breakPoint);\r\n            if (segment2) {\r\n                var segments = [segment1, segment2];\r\n                for (var i = 2; i--;) {\r\n                    if (MakerJs.round(MakerJs.measure.pathLength(segments[i]), .0001) == 0) {\r\n                        return null;\r\n                    }\r\n                }\r\n                return segments;\r\n            }\r\n            else if (pathToSegment.type == MakerJs.pathType.Circle) {\r\n                return [segment1];\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getPointsOnPath(points, onPath, popOptions) {\r\n            var endpointsOnPath = [];\r\n            points.forEach(function (p) {\r\n                if (MakerJs.measure.isPointOnPath(p, onPath, .00001, null, popOptions)) {\r\n                    endpointsOnPath.push(p);\r\n                }\r\n            });\r\n            return endpointsOnPath;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function breakAlongForeignPath(crossedPath, overlappedSegments, foreignWalkedPath) {\r\n            var foreignPath = foreignWalkedPath.pathContext;\r\n            var segments = crossedPath.segments;\r\n            if (MakerJs.measure.isPathEqual(segments[0].absolutePath, foreignPath, .0001, null, foreignWalkedPath.offset)) {\r\n                segments[0].overlapped = true;\r\n                segments[0].duplicate = true;\r\n                overlappedSegments.push(segments[0]);\r\n                return;\r\n            }\r\n            //this will cache the slope, to keep from being recalculated for each segment\r\n            var popOptions = {};\r\n            var options = { path1Offset: crossedPath.offset, path2Offset: foreignWalkedPath.offset };\r\n            var foreignIntersection = MakerJs.path.intersection(crossedPath.pathContext, foreignPath, options);\r\n            var intersectionPoints = foreignIntersection ? foreignIntersection.intersectionPoints : null;\r\n            var foreignPathEndPoints = MakerJs.point.fromPathEnds(foreignPath, foreignWalkedPath.offset) || [];\r\n            for (var i = 0; i < segments.length; i++) {\r\n                var pointsOfInterest = intersectionPoints ? foreignPathEndPoints.concat(intersectionPoints) : foreignPathEndPoints;\r\n                var pointsToCheck = getPointsOnPath(pointsOfInterest, segments[i].absolutePath, popOptions);\r\n                if (options.out_AreOverlapped) {\r\n                    segments[i].overlapped = true;\r\n                    overlappedSegments.push(segments[i]);\r\n                }\r\n                if (pointsToCheck.length > 0) {\r\n                    //break the path which intersected, and add the shard to the end of the array so it can also be checked in this loop for further sharding.\r\n                    var subSegments = null;\r\n                    var p = 0;\r\n                    while (!subSegments && p < pointsToCheck.length) {\r\n                        subSegments = getNonZeroSegments(segments[i].absolutePath, pointsToCheck[p]);\r\n                        p++;\r\n                    }\r\n                    if (subSegments) {\r\n                        crossedPath.broken = true;\r\n                        segments[i].absolutePath = subSegments[0];\r\n                        if (subSegments[1]) {\r\n                            var newSegment = {\r\n                                absolutePath: subSegments[1],\r\n                                pathId: segments[0].pathId,\r\n                                overlapped: segments[i].overlapped,\r\n                                uniqueForeignIntersectionPoints: []\r\n                            };\r\n                            if (segments[i].overlapped) {\r\n                                overlappedSegments.push(newSegment);\r\n                            }\r\n                            segments.push(newSegment);\r\n                        }\r\n                        //re-check this segment for another deep intersection\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * DEPRECATED - use measure.isPointInsideModel instead.\r\n         * Check to see if a path is inside of a model.\r\n         *\r\n         * @param pathContext The path to check.\r\n         * @param modelContext The model to check against.\r\n         * @param farPoint Optional point of reference which is outside the bounds of the modelContext.\r\n         * @returns Boolean true if the path is inside of the modelContext.\r\n         */\r\n        function isPathInsideModel(pathContext, modelContext, pathOffset, farPoint, measureAtlas) {\r\n            var options = {\r\n                farPoint: farPoint,\r\n                measureAtlas: measureAtlas\r\n            };\r\n            var p = MakerJs.point.add(MakerJs.point.middle(pathContext), pathOffset);\r\n            return MakerJs.measure.isPointInsideModel(p, modelContext, options);\r\n        }\r\n        model.isPathInsideModel = isPathInsideModel;\r\n        /**\r\n         * DEPRECATED\r\n         * Break a model's paths everywhere they intersect with another path.\r\n         *\r\n         * @param modelToBreak The model containing paths to be broken.\r\n         * @param modelToIntersect Optional model containing paths to look for intersection, or else the modelToBreak will be used.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function breakPathsAtIntersections(modelToBreak, modelToIntersect) {\r\n            var modelToBreakAtlas = new MakerJs.measure.Atlas(modelToBreak);\r\n            modelToBreakAtlas.measureModels();\r\n            var modelToIntersectAtlas;\r\n            if (!modelToIntersect) {\r\n                modelToIntersect = modelToBreak;\r\n                modelToIntersectAtlas = modelToBreakAtlas;\r\n            }\r\n            else {\r\n                modelToIntersectAtlas = new MakerJs.measure.Atlas(modelToIntersect);\r\n                modelToIntersectAtlas.measureModels();\r\n            }\r\n            ;\r\n            breakAllPathsAtIntersections(modelToBreak, modelToIntersect || modelToBreak, false, modelToBreakAtlas, modelToIntersectAtlas);\r\n            return modelToBreak;\r\n        }\r\n        model.breakPathsAtIntersections = breakPathsAtIntersections;\r\n        /**\r\n         * @private\r\n         */\r\n        function breakAllPathsAtIntersections(modelToBreak, modelToIntersect, checkIsInside, modelToBreakAtlas, modelToIntersectAtlas, farPoint) {\r\n            var crossedPaths = [];\r\n            var overlappedSegments = [];\r\n            var walkModelToBreakOptions = {\r\n                onPath: function (outerWalkedPath) {\r\n                    //clone this path and make it the first segment\r\n                    var segment = {\r\n                        absolutePath: MakerJs.path.clone(outerWalkedPath.pathContext, outerWalkedPath.offset),\r\n                        pathId: outerWalkedPath.pathId,\r\n                        overlapped: false,\r\n                        uniqueForeignIntersectionPoints: []\r\n                    };\r\n                    var thisPath = outerWalkedPath;\r\n                    thisPath.broken = false;\r\n                    thisPath.segments = [segment];\r\n                    var walkModelToIntersectOptions = {\r\n                        onPath: function (innerWalkedPath) {\r\n                            if (outerWalkedPath.pathContext !== innerWalkedPath.pathContext && MakerJs.measure.isMeasurementOverlapping(modelToBreakAtlas.pathMap[outerWalkedPath.routeKey], modelToIntersectAtlas.pathMap[innerWalkedPath.routeKey])) {\r\n                                breakAlongForeignPath(thisPath, overlappedSegments, innerWalkedPath);\r\n                            }\r\n                        },\r\n                        beforeChildWalk: function (innerWalkedModel) {\r\n                            //see if there is a model measurement. if not, it is because the model does not contain paths.\r\n                            var innerModelMeasurement = modelToIntersectAtlas.modelMap[innerWalkedModel.routeKey];\r\n                            return innerModelMeasurement && MakerJs.measure.isMeasurementOverlapping(modelToBreakAtlas.pathMap[outerWalkedPath.routeKey], innerModelMeasurement);\r\n                        }\r\n                    };\r\n                    //keep breaking the segments anywhere they intersect with paths of the other model\r\n                    model.walk(modelToIntersect, walkModelToIntersectOptions);\r\n                    if (checkIsInside) {\r\n                        //check each segment whether it is inside or outside\r\n                        for (var i = 0; i < thisPath.segments.length; i++) {\r\n                            var p = MakerJs.point.middle(thisPath.segments[i].absolutePath);\r\n                            var pointInsideOptions = { measureAtlas: modelToIntersectAtlas, farPoint: farPoint };\r\n                            thisPath.segments[i].isInside = MakerJs.measure.isPointInsideModel(p, modelToIntersect, pointInsideOptions);\r\n                            thisPath.segments[i].uniqueForeignIntersectionPoints = pointInsideOptions.out_intersectionPoints;\r\n                        }\r\n                    }\r\n                    crossedPaths.push(thisPath);\r\n                }\r\n            };\r\n            model.walk(modelToBreak, walkModelToBreakOptions);\r\n            return { crossedPaths: crossedPaths, overlappedSegments: overlappedSegments };\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function checkForEqualOverlaps(crossedPathsA, crossedPathsB, pointMatchingDistance) {\r\n            function compareSegments(segment1, segment2) {\r\n                if (MakerJs.measure.isPathEqual(segment1.absolutePath, segment2.absolutePath, pointMatchingDistance)) {\r\n                    segment1.duplicate = segment2.duplicate = true;\r\n                }\r\n            }\r\n            function compareAll(segment) {\r\n                for (var i = 0; i < crossedPathsB.length; i++) {\r\n                    compareSegments(crossedPathsB[i], segment);\r\n                }\r\n            }\r\n            for (var i = 0; i < crossedPathsA.length; i++) {\r\n                compareAll(crossedPathsA[i]);\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function addOrDeleteSegments(crossedPath, includeInside, includeOutside, keepDuplicates, atlas, trackDeleted) {\r\n            function addSegment(modelContext, pathIdBase, segment) {\r\n                var id = model.getSimilarPathId(modelContext, pathIdBase);\r\n                var newRouteKey = (id == pathIdBase) ? crossedPath.routeKey : MakerJs.createRouteKey(crossedPath.route.slice(0, -1).concat([id]));\r\n                segment.addedPath = MakerJs.cloneObject(crossedPath.pathContext);\r\n                //circles may have become arcs\r\n                segment.addedPath.type = segment.absolutePath.type;\r\n                MakerJs.path.copyProps(segment.absolutePath, segment.addedPath);\r\n                MakerJs.path.moveRelative(segment.addedPath, crossedPath.offset, true);\r\n                modelContext.paths[id] = segment.addedPath;\r\n                if (crossedPath.broken) {\r\n                    //save the new segment's measurement\r\n                    var measurement = MakerJs.measure.pathExtents(segment.absolutePath);\r\n                    atlas.pathMap[newRouteKey] = measurement;\r\n                    atlas.modelsMeasured = false;\r\n                }\r\n                else {\r\n                    //keep the original measurement\r\n                    atlas.pathMap[newRouteKey] = savedMeasurement;\r\n                }\r\n            }\r\n            function checkAddSegment(modelContext, pathIdBase, segment) {\r\n                if (segment.isInside && includeInside || !segment.isInside && includeOutside) {\r\n                    addSegment(modelContext, pathIdBase, segment);\r\n                }\r\n                else {\r\n                    atlas.modelsMeasured = false;\r\n                    trackDeleted(segment.absolutePath, crossedPath.routeKey, 'segment is ' + (segment.isInside ? 'inside' : 'outside') + ' intersectionPoints=' + JSON.stringify(segment.uniqueForeignIntersectionPoints));\r\n                }\r\n            }\r\n            //save the original measurement\r\n            var savedMeasurement = atlas.pathMap[crossedPath.routeKey];\r\n            //delete the original, its segments will be added\r\n            delete crossedPath.modelContext.paths[crossedPath.pathId];\r\n            delete atlas.pathMap[crossedPath.routeKey];\r\n            for (var i = 0; i < crossedPath.segments.length; i++) {\r\n                if (crossedPath.segments[i].duplicate) {\r\n                    if (keepDuplicates) {\r\n                        addSegment(crossedPath.modelContext, crossedPath.pathId, crossedPath.segments[i]);\r\n                    }\r\n                    else {\r\n                        trackDeleted(crossedPath.segments[i].absolutePath, crossedPath.routeKey, 'segment is duplicate');\r\n                    }\r\n                }\r\n                else {\r\n                    checkAddSegment(crossedPath.modelContext, crossedPath.pathId, crossedPath.segments[i]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Combine 2 models. Each model will be modified accordingly.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         * @param includeAInsideB Flag to include paths from modelA which are inside of modelB.\r\n         * @param includeAOutsideB Flag to include paths from modelA which are outside of modelB.\r\n         * @param includeBInsideA Flag to include paths from modelB which are inside of modelA.\r\n         * @param includeBOutsideA Flag to include paths from modelB which are outside of modelA.\r\n         * @param options Optional ICombineOptions object.\r\n         * @returns A new model containing both of the input models as \"a\" and \"b\".\r\n         */\r\n        function combine(modelA, modelB, includeAInsideB, includeAOutsideB, includeBInsideA, includeBOutsideA, options) {\r\n            if (includeAInsideB === void 0) { includeAInsideB = false; }\r\n            if (includeAOutsideB === void 0) { includeAOutsideB = true; }\r\n            if (includeBInsideA === void 0) { includeBInsideA = false; }\r\n            if (includeBOutsideA === void 0) { includeBOutsideA = true; }\r\n            var opts = {\r\n                trimDeadEnds: true,\r\n                pointMatchingDistance: .005,\r\n                out_deleted: [{ paths: {} }, { paths: {} }]\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            opts.measureA = opts.measureA || new MakerJs.measure.Atlas(modelA);\r\n            opts.measureB = opts.measureB || new MakerJs.measure.Atlas(modelB);\r\n            //make sure model measurements capture all paths\r\n            opts.measureA.measureModels();\r\n            opts.measureB.measureModels();\r\n            if (!opts.farPoint) {\r\n                var measureBoth = MakerJs.measure.increase(MakerJs.measure.increase({ high: [null, null], low: [null, null] }, opts.measureA.modelMap['']), opts.measureB.modelMap['']);\r\n                opts.farPoint = MakerJs.point.add(measureBoth.high, [1, 1]);\r\n            }\r\n            var pathsA = breakAllPathsAtIntersections(modelA, modelB, true, opts.measureA, opts.measureB, opts.farPoint);\r\n            var pathsB = breakAllPathsAtIntersections(modelB, modelA, true, opts.measureB, opts.measureA, opts.farPoint);\r\n            checkForEqualOverlaps(pathsA.overlappedSegments, pathsB.overlappedSegments, opts.pointMatchingDistance);\r\n            function trackDeleted(which, deletedPath, routeKey, reason) {\r\n                model.addPath(opts.out_deleted[which], deletedPath, 'deleted');\r\n                var p = deletedPath;\r\n                p.reason = reason;\r\n                p.routeKey = routeKey;\r\n            }\r\n            for (var i = 0; i < pathsA.crossedPaths.length; i++) {\r\n                addOrDeleteSegments(pathsA.crossedPaths[i], includeAInsideB, includeAOutsideB, true, opts.measureA, function (p, id, reason) { return trackDeleted(0, p, id, reason); });\r\n            }\r\n            for (var i = 0; i < pathsB.crossedPaths.length; i++) {\r\n                addOrDeleteSegments(pathsB.crossedPaths[i], includeBInsideA, includeBOutsideA, false, opts.measureB, function (p, id, reason) { return trackDeleted(1, p, id, reason); });\r\n            }\r\n            var result = { models: { a: modelA, b: modelB } };\r\n            if (opts.trimDeadEnds) {\r\n                var shouldKeep;\r\n                //union\r\n                if (!includeAInsideB && !includeBInsideA) {\r\n                    shouldKeep = function (walkedPath) {\r\n                        //When A and B share an outer contour, the segments marked as duplicate will not pass the \"inside\" test on either A or B.\r\n                        //Duplicates were discarded from B but kept in A\r\n                        for (var i = 0; i < pathsA.overlappedSegments.length; i++) {\r\n                            if (pathsA.overlappedSegments[i].duplicate && walkedPath.pathContext === pathsA.overlappedSegments[i].addedPath) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        //default - keep the path\r\n                        return true;\r\n                    };\r\n                }\r\n                model.removeDeadEnds(result, null, shouldKeep, function (wp, reason) {\r\n                    var which = wp.route[1] === 'a' ? 0 : 1;\r\n                    trackDeleted(which, wp.pathContext, wp.routeKey, reason);\r\n                });\r\n            }\r\n            //pass options back to caller\r\n            MakerJs.extendObject(options, opts);\r\n            return result;\r\n        }\r\n        model.combine = combine;\r\n        /**\r\n         * Combine 2 models, resulting in a intersection. Each model will be modified accordingly.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         * @returns A new model containing both of the input models as \"a\" and \"b\".\r\n         */\r\n        function combineIntersection(modelA, modelB) {\r\n            return combine(modelA, modelB, true, false, true, false);\r\n        }\r\n        model.combineIntersection = combineIntersection;\r\n        /**\r\n         * Combine 2 models, resulting in a subtraction of B from A. Each model will be modified accordingly.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         * @returns A new model containing both of the input models as \"a\" and \"b\".\r\n         */\r\n        function combineSubtraction(modelA, modelB) {\r\n            return combine(modelA, modelB, false, true, true, false);\r\n        }\r\n        model.combineSubtraction = combineSubtraction;\r\n        /**\r\n         * Combine 2 models, resulting in a union. Each model will be modified accordingly.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         * @returns A new model containing both of the input models as \"a\" and \"b\".\r\n         */\r\n        function combineUnion(modelA, modelB) {\r\n            return combine(modelA, modelB, false, true, false, true);\r\n        }\r\n        model.combineUnion = combineUnion;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    /**\r\n     * Collects items that share a common key.\r\n     */\r\n    var Collector = /** @class */ (function () {\r\n        function Collector(comparer) {\r\n            this.comparer = comparer;\r\n            this.collections = [];\r\n        }\r\n        Collector.prototype.addItemToCollection = function (key, item) {\r\n            var found = this.findCollection(key);\r\n            if (found) {\r\n                found.push(item);\r\n            }\r\n            else {\r\n                var collection = { key: key, items: [item] };\r\n                this.collections.push(collection);\r\n            }\r\n        };\r\n        Collector.prototype.findCollection = function (key, action) {\r\n            for (var i = 0; i < this.collections.length; i++) {\r\n                var collection = this.collections[i];\r\n                if (this.comparer(key, collection.key)) {\r\n                    if (action) {\r\n                        action(i);\r\n                    }\r\n                    return collection.items;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Collector.prototype.removeCollection = function (key) {\r\n            var _this = this;\r\n            if (this.findCollection(key, function (index) { _this.collections.splice(index, 1); })) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        Collector.prototype.removeItemFromCollection = function (key, item) {\r\n            var collection = this.findCollection(key);\r\n            if (!collection)\r\n                return;\r\n            for (var i = 0; i < collection.length; i++) {\r\n                if (collection[i] === item) {\r\n                    collection.splice(i, 1);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        Collector.prototype.getCollectionsOfMultiple = function (cb) {\r\n            for (var i = 0; i < this.collections.length; i++) {\r\n                var collection = this.collections[i];\r\n                if (collection.items.length > 1) {\r\n                    cb(collection.key, collection.items);\r\n                }\r\n            }\r\n        };\r\n        return Collector;\r\n    }());\r\n    MakerJs.Collector = Collector;\r\n    /**\r\n     * @private\r\n     */\r\n    var _kdbush = require('kdbush');\r\n    /**\r\n     * @private\r\n     */\r\n    var kdbush = (_kdbush[\"default\"] || _kdbush);\r\n    /**\r\n     * A graph of items which may be located on the same points.\r\n     */\r\n    var PointGraph = /** @class */ (function () {\r\n        function PointGraph() {\r\n            this.reset();\r\n        }\r\n        /**\r\n         * Reset the stored points, graphs, lists, to initial state.\r\n         */\r\n        PointGraph.prototype.reset = function () {\r\n            this.insertedCount = 0;\r\n            this.graph = {};\r\n            this.index = {};\r\n            this.merged = {};\r\n            this.values = [];\r\n        };\r\n        /**\r\n         * Insert a value.\r\n         * @param value Value associated with this point.\r\n         * @returns valueId of the inserted value.\r\n         */\r\n        PointGraph.prototype.insertValue = function (value) {\r\n            this.values.push(value);\r\n            return this.values.length - 1;\r\n        };\r\n        /**\r\n         * Insert a value at a point.\r\n         * @param p Point.\r\n         * @param value Value associated with this point.\r\n         */\r\n        PointGraph.prototype.insertValueIdAtPoint = function (valueId, p) {\r\n            var x = p[0], y = p[1];\r\n            if (!this.graph[x]) {\r\n                this.graph[x] = {};\r\n            }\r\n            var pgx = this.graph[x];\r\n            var existed = (y in pgx);\r\n            var el;\r\n            var pointId;\r\n            if (!existed) {\r\n                pgx[y] = pointId = this.insertedCount++;\r\n                el = {\r\n                    pointId: pointId,\r\n                    point: p,\r\n                    valueIds: [valueId]\r\n                };\r\n                this.index[pointId] = el;\r\n            }\r\n            else {\r\n                pointId = pgx[y];\r\n                if (pointId in this.merged) {\r\n                    pointId = this.merged[pointId];\r\n                }\r\n                el = this.index[pointId];\r\n                el.valueIds.push(valueId);\r\n            }\r\n            return { existed: existed, pointId: pointId };\r\n        };\r\n        /**\r\n         * Merge points within a given distance from each other. Call this after inserting values.\r\n         * @param withinDistance Distance to consider points equal.\r\n         */\r\n        PointGraph.prototype.mergePoints = function (withinDistance) {\r\n            var _this = this;\r\n            var points = [];\r\n            var kEls = [];\r\n            for (var pointId in this.index) {\r\n                var el = this.index[pointId];\r\n                var p = el.point;\r\n                el.kdId = points.length;\r\n                points.push(p);\r\n                kEls.push(el);\r\n            }\r\n            this.kdbush = kdbush(points);\r\n            var _loop_2 = function (pointId) {\r\n                if (pointId in this_1.merged)\r\n                    return \"continue\";\r\n                var el = this_1.index[pointId];\r\n                var mergeIds = this_1.kdbush.within(el.point[0], el.point[1], withinDistance);\r\n                mergeIds.forEach(function (kdId) {\r\n                    if (kdId === el.kdId)\r\n                        return;\r\n                    _this.mergeIndexElements(el, kEls[kdId]);\r\n                });\r\n            };\r\n            var this_1 = this;\r\n            for (var pointId in this.index) {\r\n                _loop_2(pointId);\r\n            }\r\n        };\r\n        /**\r\n         * Finds all points which have only one value associated. Then, merge to the nearest other point within this set.\r\n         * Call this after inserting values.\r\n         * @param withinDistance Distance to consider points equal.\r\n         */\r\n        PointGraph.prototype.mergeNearestSinglePoints = function (withinDistance) {\r\n            var _this = this;\r\n            var singles = [];\r\n            for (var pointId in this.index) {\r\n                var el = this.index[pointId];\r\n                if (el.valueIds.length === 1) {\r\n                    singles.push(el);\r\n                }\r\n            }\r\n            this.kdbush = kdbush(singles.map(function (el) { return el.point; }));\r\n            singles.forEach(function (el) {\r\n                if (el.pointId in _this.merged)\r\n                    return;\r\n                var mergeIds = _this.kdbush.within(el.point[0], el.point[1], withinDistance);\r\n                var byDistance = [];\r\n                mergeIds.forEach(function (i) {\r\n                    var other = singles[i];\r\n                    if (other.pointId === el.pointId)\r\n                        return;\r\n                    byDistance.push({ el: other, distance: MakerJs.measure.pointDistance(other.point, el.point) });\r\n                });\r\n                byDistance.sort(function (a, b) { return a.distance - b.distance; });\r\n                for (var i = 0; i < byDistance.length; i++) {\r\n                    var other = byDistance[i].el;\r\n                    if (other.pointId in _this.merged)\r\n                        continue;\r\n                    if (other.merged && other.merged.length > 0) {\r\n                        _this.mergeIndexElements(other, el);\r\n                    }\r\n                    else {\r\n                        _this.mergeIndexElements(el, other);\r\n                    }\r\n                    return;\r\n                }\r\n            });\r\n        };\r\n        PointGraph.prototype.mergeIndexElements = function (keep, remove) {\r\n            keep.merged = keep.merged || [];\r\n            keep.merged.push(remove.pointId);\r\n            this.merged[remove.pointId] = keep.pointId;\r\n            keep.valueIds.push.apply(keep.valueIds, remove.valueIds);\r\n            delete this.index[remove.pointId];\r\n            return keep.pointId;\r\n        };\r\n        /**\r\n         * Iterate over points in the index.\r\n         * @param cb Callback for each point in the index.\r\n         */\r\n        PointGraph.prototype.forEachPoint = function (cb) {\r\n            var _this = this;\r\n            for (var pointId = 0; pointId < this.insertedCount; pointId++) {\r\n                var el = this.index[pointId];\r\n                if (!el)\r\n                    continue;\r\n                var length_1 = el.valueIds.length;\r\n                if (length_1 > 0) {\r\n                    cb(el.point, el.valueIds.map(function (i) { return _this.values[i]; }), pointId, el);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Gets the id of a point, after merging.\r\n         * @param p Point to look up id.\r\n         */\r\n        PointGraph.prototype.getIdOfPoint = function (p) {\r\n            var px = this.graph[p[0]];\r\n            if (px) {\r\n                var pointId = px[p[1]];\r\n                if (pointId >= 0) {\r\n                    if (pointId in this.merged) {\r\n                        return this.merged[pointId];\r\n                    }\r\n                    else {\r\n                        return pointId;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Get the index element of a point, after merging.\r\n         * @param p Point to look up index element.\r\n         */\r\n        PointGraph.prototype.getElementAtPoint = function (p) {\r\n            var pointId = this.getIdOfPoint(p);\r\n            if (pointId >= 0) {\r\n                return this.index[pointId];\r\n            }\r\n        };\r\n        return PointGraph;\r\n    }());\r\n    MakerJs.PointGraph = PointGraph;\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function checkForOverlaps(refPaths, isOverlapping, overlapUnion) {\r\n            var currIndex = 0;\r\n            do {\r\n                var root = refPaths[currIndex];\r\n                do {\r\n                    var overlaps = false;\r\n                    for (var i = currIndex + 1; i < refPaths.length; i++) {\r\n                        var arcRef = refPaths[i];\r\n                        overlaps = isOverlapping(root.pathContext, arcRef.pathContext, false);\r\n                        if (overlaps) {\r\n                            overlapUnion(root.pathContext, arcRef.pathContext);\r\n                            delete arcRef.modelContext.paths[arcRef.pathId];\r\n                            refPaths.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                } while (overlaps);\r\n                currIndex++;\r\n            } while (currIndex < refPaths.length);\r\n        }\r\n        /**\r\n         * Simplify a model's paths by reducing redundancy: combine multiple overlapping paths into a single path. The model must be originated.\r\n         *\r\n         * @param modelContext The originated model to search for similar paths.\r\n         * @param options Optional options object.\r\n         * @returns The simplified model (for cascading).\r\n         */\r\n        function simplify(modelToSimplify, options) {\r\n            function compareCircles(circleA, circleB) {\r\n                if (Math.abs(circleA.radius - circleB.radius) <= opts.scalarMatchingDistance) {\r\n                    var distance = MakerJs.measure.pointDistance(circleA.origin, circleB.origin);\r\n                    return distance <= opts.pointMatchingDistance;\r\n                }\r\n                return false;\r\n            }\r\n            var similarArcs = new MakerJs.Collector(compareCircles);\r\n            var similarCircles = new MakerJs.Collector(compareCircles);\r\n            var similarLines = new MakerJs.Collector(MakerJs.measure.isSlopeEqual);\r\n            var map = {};\r\n            map[MakerJs.pathType.Arc] = function (arcRef) {\r\n                similarArcs.addItemToCollection(arcRef.pathContext, arcRef);\r\n            };\r\n            map[MakerJs.pathType.Circle] = function (circleRef) {\r\n                similarCircles.addItemToCollection(circleRef.pathContext, circleRef);\r\n            };\r\n            map[MakerJs.pathType.Line] = function (lineRef) {\r\n                var slope = MakerJs.measure.lineSlope(lineRef.pathContext);\r\n                similarLines.addItemToCollection(slope, lineRef);\r\n            };\r\n            var opts = {\r\n                scalarMatchingDistance: .001,\r\n                pointMatchingDistance: .005\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            //walk the model and collect: arcs on same center / radius, circles on same center / radius, lines on same y-intercept / slope.\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    var fn = map[walkedPath.pathContext.type];\r\n                    if (fn) {\r\n                        fn(walkedPath);\r\n                    }\r\n                }\r\n            };\r\n            model.walk(modelToSimplify, walkOptions);\r\n            //for all arcs that are similar, see if they overlap.\r\n            //combine overlapping arcs into the first one and delete the second.\r\n            similarArcs.getCollectionsOfMultiple(function (key, arcRefs) {\r\n                checkForOverlaps(arcRefs, MakerJs.measure.isArcOverlapping, function (arcA, arcB) {\r\n                    //find ends within the other\r\n                    var aEndsInB = MakerJs.measure.isBetweenArcAngles(arcA.endAngle, arcB, false);\r\n                    var bEndsInA = MakerJs.measure.isBetweenArcAngles(arcB.endAngle, arcA, false);\r\n                    //check for complete circle\r\n                    if (aEndsInB && bEndsInA) {\r\n                        arcA.endAngle = arcA.startAngle + 360;\r\n                        return;\r\n                    }\r\n                    //find the leader, in polar terms\r\n                    var ordered = aEndsInB ? [arcA, arcB] : [arcB, arcA];\r\n                    //save in arcA\r\n                    arcA.startAngle = MakerJs.angle.noRevolutions(ordered[0].startAngle);\r\n                    arcA.endAngle = ordered[1].endAngle;\r\n                });\r\n            });\r\n            //for all circles that are similar, delete all but the first.\r\n            similarCircles.getCollectionsOfMultiple(function (key, circleRefs) {\r\n                for (var i = 1; i < circleRefs.length; i++) {\r\n                    var circleRef = circleRefs[i];\r\n                    delete circleRef.modelContext.paths[circleRef.pathId];\r\n                }\r\n            });\r\n            //for all lines that are similar, see if they overlap.\r\n            //combine overlapping lines into the first one and delete the second.\r\n            similarLines.getCollectionsOfMultiple(function (slope, arcRefs) {\r\n                checkForOverlaps(arcRefs, MakerJs.measure.isLineOverlapping, function (lineA, lineB) {\r\n                    var box = { paths: { lineA: lineA, lineB: lineB } };\r\n                    var m = MakerJs.measure.modelExtents(box);\r\n                    if (!slope.hasSlope) {\r\n                        //vertical\r\n                        lineA.origin[1] = m.low[1];\r\n                        lineA.end[1] = m.high[1];\r\n                    }\r\n                    else {\r\n                        //non-vertical\r\n                        if (slope.slope < 0) {\r\n                            //downward\r\n                            lineA.origin = [m.low[0], m.high[1]];\r\n                            lineA.end = [m.high[0], m.low[1]];\r\n                        }\r\n                        else if (slope.slope > 0) {\r\n                            //upward\r\n                            lineA.origin = m.low;\r\n                            lineA.end = m.high;\r\n                        }\r\n                        else {\r\n                            //horizontal\r\n                            lineA.origin[0] = m.low[0];\r\n                            lineA.end[0] = m.high[0];\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            return modelToSimplify;\r\n        }\r\n        model.simplify = simplify;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        var map = {};\r\n        map[MakerJs.pathType.Arc] = function (arc, expansion, isolateCaps) {\r\n            return new MakerJs.models.OvalArc(arc.startAngle, arc.endAngle, arc.radius, expansion, false, isolateCaps);\r\n        };\r\n        map[MakerJs.pathType.Circle] = function (circle, expansion, isolateCaps) {\r\n            return new MakerJs.models.Ring(circle.radius + expansion, circle.radius - expansion);\r\n        };\r\n        map[MakerJs.pathType.Line] = function (line, expansion, isolateCaps) {\r\n            return new MakerJs.models.Slot(line.origin, line.end, expansion, isolateCaps);\r\n        };\r\n        /**\r\n         * Expand path by creating a model which surrounds it.\r\n         *\r\n         * @param pathToExpand Path to expand.\r\n         * @param expansion Distance to expand.\r\n         * @param isolateCaps Optional flag to put the end caps into a separate model named \"caps\".\r\n         * @returns Model which surrounds the path.\r\n         */\r\n        function expand(pathToExpand, expansion, isolateCaps) {\r\n            if (!pathToExpand)\r\n                return null;\r\n            var result = null;\r\n            var fn = map[pathToExpand.type];\r\n            if (fn) {\r\n                result = fn(pathToExpand, expansion, isolateCaps);\r\n                result.origin = pathToExpand.origin;\r\n            }\r\n            return result;\r\n        }\r\n        path.expand = expand;\r\n        /**\r\n         * Represent an arc using straight lines.\r\n         *\r\n         * @param arc Arc to straighten.\r\n         * @param bevel Optional flag to bevel the angle to prevent it from being too sharp.\r\n         * @param prefix Optional string prefix to apply to path ids.\r\n         * @param close Optional flag to make a closed geometry by connecting the endpoints.\r\n         * @returns Model of straight lines with same endpoints as the arc.\r\n         */\r\n        function straighten(arc, bevel, prefix, close) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            var joints = 1;\r\n            if (arcSpan >= 270) {\r\n                joints = 4;\r\n            }\r\n            else if (arcSpan > 180) {\r\n                joints = 3;\r\n            }\r\n            else if (arcSpan > 150 || bevel) { //30 degrees is the sharpest\r\n                joints = 2;\r\n            }\r\n            var jointAngleInRadians = MakerJs.angle.toRadians(arcSpan / joints);\r\n            var circumscribedRadius = MakerJs.models.Polygon.circumscribedRadius(arc.radius, jointAngleInRadians);\r\n            var ends = MakerJs.point.fromArc(arc);\r\n            var points = [MakerJs.point.subtract(ends[0], arc.origin)];\r\n            var a = MakerJs.angle.toRadians(arc.startAngle) + jointAngleInRadians / 2;\r\n            for (var i = 0; i < joints; i++) {\r\n                points.push(MakerJs.point.fromPolar(a, circumscribedRadius));\r\n                a += jointAngleInRadians;\r\n            }\r\n            points.push(MakerJs.point.subtract(ends[1], arc.origin));\r\n            var result = new MakerJs.models.ConnectTheDots(close, points);\r\n            result.origin = arc.origin;\r\n            if (typeof prefix === 'string' && prefix.length) {\r\n                MakerJs.model.prefixPathIds(result, prefix);\r\n            }\r\n            return result;\r\n        }\r\n        path.straighten = straighten;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * Expand all paths in a model, then combine the resulting expansions.\r\n         *\r\n         * @param modelToExpand Model to expand.\r\n         * @param distance Distance to expand.\r\n         * @param joints Number of points at a joint between paths. Use 0 for round joints, 1 for pointed joints, 2 for beveled joints.\r\n         * @param combineOptions Optional object containing combine options.\r\n         * @returns Model which surrounds the paths of the original model.\r\n         */\r\n        function expandPaths(modelToExpand, distance, joints, combineOptions) {\r\n            if (joints === void 0) { joints = 0; }\r\n            if (combineOptions === void 0) { combineOptions = {}; }\r\n            if (distance <= 0)\r\n                return null;\r\n            var result = {\r\n                models: {\r\n                    expansions: { models: {} },\r\n                    caps: { models: {} }\r\n                }\r\n            };\r\n            var first = true;\r\n            var lastFarPoint = combineOptions.farPoint;\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    //don't expand paths shorter than the tolerance for combine operations\r\n                    if (combineOptions.pointMatchingDistance && MakerJs.measure.pathLength(walkedPath.pathContext) < combineOptions.pointMatchingDistance)\r\n                        return;\r\n                    var expandedPathModel = MakerJs.path.expand(walkedPath.pathContext, distance, true);\r\n                    if (expandedPathModel) {\r\n                        model.moveRelative(expandedPathModel, walkedPath.offset);\r\n                        var newId = model.getSimilarModelId(result.models['expansions'], walkedPath.pathId);\r\n                        model.prefixPathIds(expandedPathModel, walkedPath.pathId + '_');\r\n                        model.originate(expandedPathModel);\r\n                        if (!first) {\r\n                            model.combine(result, expandedPathModel, false, true, false, true, combineOptions);\r\n                            combineOptions.measureA.modelsMeasured = false;\r\n                            lastFarPoint = combineOptions.farPoint;\r\n                            delete combineOptions.farPoint;\r\n                            delete combineOptions.measureB;\r\n                        }\r\n                        result.models['expansions'].models[newId] = expandedPathModel;\r\n                        if (expandedPathModel.models) {\r\n                            var caps = expandedPathModel.models['Caps'];\r\n                            if (caps) {\r\n                                delete expandedPathModel.models['Caps'];\r\n                                result.models['caps'].models[newId] = caps;\r\n                            }\r\n                        }\r\n                        first = false;\r\n                    }\r\n                }\r\n            };\r\n            model.walk(modelToExpand, walkOptions);\r\n            if (joints) {\r\n                var roundCaps = result.models['caps'];\r\n                var straightCaps = { models: {} };\r\n                result.models['straightcaps'] = straightCaps;\r\n                model.simplify(roundCaps);\r\n                //straighten each cap, optionally beveling\r\n                for (var id in roundCaps.models) {\r\n                    //add a model container to the straight caps\r\n                    straightCaps.models[id] = { models: {} };\r\n                    model.walk(roundCaps.models[id], {\r\n                        onPath: function (walkedPath) {\r\n                            var arc = walkedPath.pathContext;\r\n                            //make a small closed shape using the straightened arc\r\n                            var straightened = MakerJs.path.straighten(arc, joints == 2, walkedPath.pathId + '_', true);\r\n                            //union this little pointy shape with the rest of the result\r\n                            model.combine(result, straightened, false, true, false, true, combineOptions);\r\n                            combineOptions.measureA.modelsMeasured = false;\r\n                            lastFarPoint = combineOptions.farPoint;\r\n                            delete combineOptions.farPoint;\r\n                            delete combineOptions.measureB;\r\n                            //replace the rounded path with the straightened model\r\n                            straightCaps.models[id].models[walkedPath.pathId] = straightened;\r\n                            //delete this path in the parent model\r\n                            delete walkedPath.modelContext.paths[walkedPath.pathId];\r\n                        }\r\n                    });\r\n                }\r\n                //delete the round caps\r\n                delete result.models['caps'];\r\n            }\r\n            combineOptions.farPoint = lastFarPoint;\r\n            return result;\r\n        }\r\n        model.expandPaths = expandPaths;\r\n        /**\r\n         * @private\r\n         */\r\n        function getEndlessChains(modelContext) {\r\n            var endlessChains = [];\r\n            model.findChains(modelContext, function (chains, loose, layer) {\r\n                endlessChains = chains.filter(function (chain) { return chain.endless; });\r\n            });\r\n            return endlessChains;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getClosedGeometries(modelContext) {\r\n            //get endless chains from the model\r\n            var endlessChains = getEndlessChains(modelContext);\r\n            if (endlessChains.length == 0)\r\n                return null;\r\n            //make a new model with only closed geometries\r\n            var closed = { models: {} };\r\n            endlessChains.forEach(function (c, i) {\r\n                closed.models[i] = MakerJs.chain.toNewModel(c);\r\n            });\r\n            return closed;\r\n        }\r\n        /**\r\n         * Outline a model by a specified distance. Useful for accommodating for kerf.\r\n         *\r\n         * @param modelToOutline Model to outline.\r\n         * @param distance Distance to outline.\r\n         * @param joints Number of points at a joint between paths. Use 0 for round joints, 1 for pointed joints, 2 for beveled joints.\r\n         * @param inside Optional boolean to draw lines inside the model instead of outside.\r\n         * @param options Options to send to combine() function.\r\n         * @returns Model which surrounds the paths outside of the original model.\r\n         */\r\n        function outline(modelToOutline, distance, joints, inside, options) {\r\n            if (joints === void 0) { joints = 0; }\r\n            if (inside === void 0) { inside = false; }\r\n            if (options === void 0) { options = {}; }\r\n            var expanded = expandPaths(modelToOutline, distance, joints, options);\r\n            if (!expanded)\r\n                return null;\r\n            //get closed geometries from the model\r\n            var closed = getClosedGeometries(modelToOutline);\r\n            if (closed) {\r\n                var childCount = 0;\r\n                var result = { models: {} };\r\n                //get closed geometries from the expansion\r\n                var chains = getEndlessChains(expanded);\r\n                chains.forEach(function (c) {\r\n                    //sample one link from the chain\r\n                    var wp = c.links[0].walkedPath;\r\n                    //see if it is inside the original model\r\n                    var isInside = MakerJs.measure.isPointInsideModel(MakerJs.point.middle(wp.pathContext), closed, wp.offset);\r\n                    //save the ones we want\r\n                    if (inside && isInside || !inside && !isInside) {\r\n                        result.models[childCount++] = MakerJs.chain.toNewModel(c);\r\n                    }\r\n                    ;\r\n                });\r\n                return result;\r\n            }\r\n            else {\r\n                return expanded;\r\n            }\r\n        }\r\n        model.outline = outline;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var units;\r\n    (function (units) {\r\n        /**\r\n         * The base type is arbitrary. Other conversions are then based off of this.\r\n         * @private\r\n         */\r\n        var base = MakerJs.unitType.Millimeter;\r\n        /**\r\n         * Initialize all known conversions here.\r\n         * @private\r\n         */\r\n        function init() {\r\n            addBaseConversion(MakerJs.unitType.Centimeter, 10);\r\n            addBaseConversion(MakerJs.unitType.Meter, 1000);\r\n            addBaseConversion(MakerJs.unitType.Inch, 25.4);\r\n            addBaseConversion(MakerJs.unitType.Foot, 25.4 * 12);\r\n        }\r\n        /**\r\n         * Table of conversions. Lazy load upon first conversion.\r\n         * @private\r\n         */\r\n        var table;\r\n        /**\r\n         * Add a conversion, and its inversion.\r\n         * @private\r\n         */\r\n        function addConversion(srcUnitType, destUnitType, value) {\r\n            function row(unitType) {\r\n                if (!table[unitType]) {\r\n                    table[unitType] = {};\r\n                }\r\n                return table[unitType];\r\n            }\r\n            row(srcUnitType)[destUnitType] = value;\r\n            row(destUnitType)[srcUnitType] = 1 / value;\r\n        }\r\n        /**\r\n         * Add a conversion of the base unit.\r\n         * @private\r\n         */\r\n        function addBaseConversion(destUnitType, value) {\r\n            addConversion(destUnitType, base, value);\r\n        }\r\n        /**\r\n         * Get a conversion ratio between a source unit and a destination unit.\r\n         *\r\n         * @param srcUnitType unitType converting from.\r\n         * @param destUnitType unitType converting to.\r\n         * @returns Numeric ratio of the conversion.\r\n         */\r\n        function conversionScale(srcUnitType, destUnitType) {\r\n            if (srcUnitType == destUnitType) {\r\n                return 1;\r\n            }\r\n            //This will lazy load the table with initial conversions.\r\n            if (!table) {\r\n                table = {};\r\n                init();\r\n            }\r\n            //look for a cached conversion in the table.\r\n            if (!table[srcUnitType][destUnitType]) {\r\n                //create a new conversionsand cache it in the table.\r\n                addConversion(srcUnitType, destUnitType, table[srcUnitType][base] * table[base][destUnitType]);\r\n            }\r\n            return table[srcUnitType] && table[srcUnitType][destUnitType];\r\n        }\r\n        units.conversionScale = conversionScale;\r\n        /**\r\n         * Check to see if unit type is a valid Maker.js unit.\r\n         *\r\n         * @param tryUnit unit type to check.\r\n         * @returns Boolean true if unit type is valid.\r\n         */\r\n        function isValidUnit(tryUnit) {\r\n            for (var id in MakerJs.unitType) {\r\n                if (MakerJs.unitType[id] == tryUnit) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        units.isValidUnit = isValidUnit;\r\n    })(units = MakerJs.units || (MakerJs.units = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var measure;\r\n    (function (measure) {\r\n        /**\r\n         * Find out if two angles are equal.\r\n         *\r\n         * @param angleA First angle.\r\n         * @param angleB Second angle.\r\n         * @returns true if angles are the same, false if they are not\r\n         */\r\n        function isAngleEqual(angleA, angleB, accuracy) {\r\n            if (accuracy === void 0) { accuracy = .0001; }\r\n            var a = MakerJs.angle.noRevolutions(angleA);\r\n            var b = MakerJs.angle.noRevolutions(angleB);\r\n            var d = MakerJs.angle.noRevolutions(MakerJs.round(b - a, accuracy));\r\n            return d == 0;\r\n        }\r\n        measure.isAngleEqual = isAngleEqual;\r\n        /**\r\n         * @private\r\n         */\r\n        var pathAreEqualMap = {};\r\n        pathAreEqualMap[MakerJs.pathType.Line] = function (lineA, lineB, withinPointDistance) {\r\n            return (isPointEqual(lineA.origin, lineB.origin, withinPointDistance) && isPointEqual(lineA.end, lineB.end, withinPointDistance))\r\n                || (isPointEqual(lineA.origin, lineB.end, withinPointDistance) && isPointEqual(lineA.end, lineB.origin, withinPointDistance));\r\n        };\r\n        pathAreEqualMap[MakerJs.pathType.Circle] = function (circleA, circleB, withinPointDistance) {\r\n            return isPointEqual(circleA.origin, circleB.origin, withinPointDistance) && circleA.radius == circleB.radius;\r\n        };\r\n        pathAreEqualMap[MakerJs.pathType.Arc] = function (arcA, arcB, withinPointDistance) {\r\n            return pathAreEqualMap[MakerJs.pathType.Circle](arcA, arcB, withinPointDistance) && isAngleEqual(arcA.startAngle, arcB.startAngle) && isAngleEqual(arcA.endAngle, arcB.endAngle);\r\n        };\r\n        /**\r\n         * Find out if two paths are equal.\r\n         *\r\n         * @param pathA First path.\r\n         * @param pathB Second path.\r\n         * @returns true if paths are the same, false if they are not\r\n         */\r\n        function isPathEqual(pathA, pathB, withinPointDistance, pathAOffset, pathBOffset) {\r\n            var result = false;\r\n            if (pathA.type == pathB.type) {\r\n                var fn = pathAreEqualMap[pathA.type];\r\n                if (fn) {\r\n                    function getResult() {\r\n                        result = fn(pathA, pathB, withinPointDistance);\r\n                    }\r\n                    if (pathAOffset || pathBOffset) {\r\n                        MakerJs.path.moveTemporary([pathA, pathB], [pathAOffset, pathBOffset], getResult);\r\n                    }\r\n                    else {\r\n                        getResult();\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        measure.isPathEqual = isPathEqual;\r\n        /**\r\n         * Find out if two points are equal.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @param withinDistance Optional distance to consider points equal.\r\n         * @returns true if points are the same, false if they are not\r\n         */\r\n        function isPointEqual(a, b, withinDistance) {\r\n            if (!withinDistance) {\r\n                return MakerJs.round(a[0] - b[0]) == 0 && MakerJs.round(a[1] - b[1]) == 0;\r\n            }\r\n            else {\r\n                if (!a || !b)\r\n                    return false;\r\n                var distance = measure.pointDistance(a, b);\r\n                return distance <= withinDistance;\r\n            }\r\n        }\r\n        measure.isPointEqual = isPointEqual;\r\n        /**\r\n         * Find out if a point is distinct among an array of points.\r\n         *\r\n         * @param pointToCheck point to check.\r\n         * @param pointArray array of points.\r\n         * @param withinDistance Optional distance to consider points equal.\r\n         * @returns false if point is equal to any point in the array.\r\n         */\r\n        function isPointDistinct(pointToCheck, pointArray, withinDistance) {\r\n            for (var i = 0; i < pointArray.length; i++) {\r\n                if (isPointEqual(pointArray[i], pointToCheck, withinDistance)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        measure.isPointDistinct = isPointDistinct;\r\n        /**\r\n         * Find out if point is on a slope.\r\n         *\r\n         * @param p Point to check.\r\n         * @param b Slope.\r\n         * @param withinDistance Optional distance of tolerance.\r\n         * @returns true if point is on the slope\r\n         */\r\n        function isPointOnSlope(p, slope, withinDistance) {\r\n            if (withinDistance === void 0) { withinDistance = 0; }\r\n            if (slope.hasSlope) {\r\n                // y = mx * b\r\n                return Math.abs(p[1] - (slope.slope * p[0] + slope.yIntercept)) <= withinDistance;\r\n            }\r\n            else {\r\n                //vertical slope\r\n                return Math.abs(p[0] - slope.line.origin[0]) <= withinDistance;\r\n            }\r\n        }\r\n        measure.isPointOnSlope = isPointOnSlope;\r\n        /**\r\n         * Find out if point is on a circle.\r\n         *\r\n         * @param p Point to check.\r\n         * @param circle Circle.\r\n         * @param withinDistance Optional distance of tolerance.\r\n         * @returns true if point is on the circle\r\n         */\r\n        function isPointOnCircle(p, circle, withinDistance) {\r\n            if (withinDistance === void 0) { withinDistance = 0; }\r\n            var d = Math.abs(measure.pointDistance(p, circle.origin) - circle.radius);\r\n            return d <= withinDistance;\r\n        }\r\n        measure.isPointOnCircle = isPointOnCircle;\r\n        /**\r\n         * @private\r\n         */\r\n        var onPathMap = {};\r\n        onPathMap[MakerJs.pathType.Circle] = function (p, circle, withinDistance) {\r\n            return isPointOnCircle(p, circle, withinDistance);\r\n        };\r\n        onPathMap[MakerJs.pathType.Arc] = function (p, arc, withinDistance) {\r\n            if (onPathMap[MakerJs.pathType.Circle](p, arc, withinDistance)) {\r\n                var a = MakerJs.angle.ofPointInDegrees(arc.origin, p);\r\n                return measure.isBetweenArcAngles(a, arc, false);\r\n            }\r\n            return false;\r\n        };\r\n        onPathMap[MakerJs.pathType.Line] = function (p, line, withinDistance, options) {\r\n            var slope = (options && options.cachedLineSlope) || measure.lineSlope(line);\r\n            if (options && !options.cachedLineSlope) {\r\n                options.cachedLineSlope = slope;\r\n            }\r\n            return isPointOnSlope(p, slope, withinDistance) && measure.isBetweenPoints(p, line, false);\r\n        };\r\n        /**\r\n         * Find out if a point lies on a path.\r\n         * @param pointToCheck point to check.\r\n         * @param onPath path to check against.\r\n         * @param withinDistance Optional distance to consider point on the path.\r\n         * @param pathOffset Optional offset of path from [0, 0].\r\n         * @param options Optional IIsPointOnPathOptions to cache computation.\r\n         */\r\n        function isPointOnPath(pointToCheck, onPath, withinDistance, pathOffset, options) {\r\n            if (withinDistance === void 0) { withinDistance = 0; }\r\n            var fn = onPathMap[onPath.type];\r\n            if (fn) {\r\n                var offsetPath = pathOffset ? MakerJs.path.clone(onPath, pathOffset) : onPath;\r\n                return fn(pointToCheck, offsetPath, withinDistance, options);\r\n            }\r\n            return false;\r\n        }\r\n        measure.isPointOnPath = isPointOnPath;\r\n        /**\r\n         * Check for slope equality.\r\n         *\r\n         * @param slopeA The ISlope to test.\r\n         * @param slopeB The ISlope to check for equality.\r\n         * @returns Boolean true if slopes are equal.\r\n         */\r\n        function isSlopeEqual(slopeA, slopeB) {\r\n            if (!isSlopeParallel(slopeA, slopeB))\r\n                return false;\r\n            if (!slopeA.hasSlope && !slopeB.hasSlope) {\r\n                //lines are both vertical, see if x are the same\r\n                return MakerJs.round(slopeA.line.origin[0] - slopeB.line.origin[0]) == 0;\r\n            }\r\n            //lines are parallel, but not vertical\r\n            //create array of slopes\r\n            var slopes = [slopeA, slopeB];\r\n            //get angle of each line\r\n            var angles = slopes.map(function (s) { return MakerJs.angle.toDegrees(Math.atan(s.slope)); });\r\n            //create an array of each line cloned\r\n            var lines = slopes.map(function (s) { return MakerJs.path.clone(s.line); });\r\n            //use the first line as the rotation origin\r\n            var origin = lines[0].origin;\r\n            //rotate each line to flat\r\n            lines.forEach(function (l, i) { return MakerJs.path.rotate(l, -angles[i], origin); });\r\n            //get average y-intercept of each line\r\n            var averageYs = lines.map(function (l) { return (l.origin[1] + l.end[1]) / 2; });\r\n            //see if y-intercept is the same\r\n            return MakerJs.round(averageYs[0] - averageYs[1], .00001) == 0;\r\n        }\r\n        measure.isSlopeEqual = isSlopeEqual;\r\n        /**\r\n         * Check for parallel slopes.\r\n         *\r\n         * @param slopeA The ISlope to test.\r\n         * @param slopeB The ISlope to check for parallel.\r\n         * @returns Boolean true if slopes are parallel.\r\n         */\r\n        function isSlopeParallel(slopeA, slopeB) {\r\n            if (!slopeA.hasSlope && !slopeB.hasSlope) {\r\n                return true;\r\n            }\r\n            if (slopeA.hasSlope && slopeB.hasSlope && (MakerJs.round(slopeA.slope - slopeB.slope, .00001) == 0)) {\r\n                //lines are parallel\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        measure.isSlopeParallel = isSlopeParallel;\r\n    })(measure = MakerJs.measure || (MakerJs.measure = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var measure;\r\n    (function (measure) {\r\n        /**\r\n         * Increase a measurement by an additional measurement.\r\n         *\r\n         * @param baseMeasure The measurement to increase.\r\n         * @param addMeasure The additional measurement.\r\n         * @param augmentBaseMeasure Optional flag to call measure.augment on the measurement.\r\n         * @returns The increased original measurement (for cascading).\r\n         */\r\n        function increase(baseMeasure, addMeasure, augmentBaseMeasure) {\r\n            function getExtreme(basePoint, newPoint, fn) {\r\n                if (!newPoint)\r\n                    return;\r\n                for (var i = 2; i--;) {\r\n                    if (newPoint[i] == null)\r\n                        continue;\r\n                    if (basePoint[i] == null) {\r\n                        basePoint[i] = newPoint[i];\r\n                    }\r\n                    else {\r\n                        basePoint[i] = fn(basePoint[i], newPoint[i]);\r\n                    }\r\n                }\r\n            }\r\n            if (addMeasure) {\r\n                getExtreme(baseMeasure.low, addMeasure.low, Math.min);\r\n                getExtreme(baseMeasure.high, addMeasure.high, Math.max);\r\n            }\r\n            if (augmentBaseMeasure) {\r\n                augment(baseMeasure);\r\n            }\r\n            return baseMeasure;\r\n        }\r\n        measure.increase = increase;\r\n        /**\r\n         * Check for arc being concave or convex towards a given point.\r\n         *\r\n         * @param arc The arc to test.\r\n         * @param towardsPoint The point to test.\r\n         * @returns Boolean true if arc is concave towards point.\r\n         */\r\n        function isArcConcaveTowardsPoint(arc, towardsPoint) {\r\n            if (pointDistance(arc.origin, towardsPoint) <= arc.radius) {\r\n                return true;\r\n            }\r\n            var midPointToNearPoint = new MakerJs.paths.Line(MakerJs.point.middle(arc), towardsPoint);\r\n            var options = {};\r\n            var intersectionPoint = MakerJs.path.intersection(midPointToNearPoint, new MakerJs.paths.Chord(arc), options);\r\n            if (intersectionPoint || options.out_AreOverlapped) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        measure.isArcConcaveTowardsPoint = isArcConcaveTowardsPoint;\r\n        /**\r\n         * DEPRECATED - use isArcSpanOverlapping() instead.\r\n         */\r\n        function isArcOverlapping(arcA, arcB, excludeTangents) {\r\n            return isArcSpanOverlapping(arcA, arcB, excludeTangents);\r\n        }\r\n        measure.isArcOverlapping = isArcOverlapping;\r\n        /**\r\n         * Check for arc overlapping another arc.\r\n         *\r\n         * @param arcA The arc to test.\r\n         * @param arcB The arc to check for overlap.\r\n         * @param excludeTangents Boolean to exclude exact endpoints and only look for deep overlaps.\r\n         * @returns Boolean true if arcA is overlapped with arcB.\r\n         */\r\n        function isArcSpanOverlapping(arcA, arcB, excludeTangents) {\r\n            var pointsOfIntersection = [];\r\n            function checkAngles(a, b) {\r\n                function checkAngle(n) {\r\n                    return isBetweenArcAngles(n, a, excludeTangents);\r\n                }\r\n                return checkAngle(b.startAngle) || checkAngle(b.endAngle);\r\n            }\r\n            return checkAngles(arcA, arcB) || checkAngles(arcB, arcA) || (arcA.startAngle == arcB.startAngle && arcA.endAngle == arcB.endAngle);\r\n        }\r\n        measure.isArcSpanOverlapping = isArcSpanOverlapping;\r\n        /**\r\n         * Check if a given number is between two given limits.\r\n         *\r\n         * @param valueInQuestion The number to test.\r\n         * @param limitA First limit.\r\n         * @param limitB Second limit.\r\n         * @param exclusive Flag to exclude equaling the limits.\r\n         * @returns Boolean true if value is between (or equal to) the limits.\r\n         */\r\n        function isBetween(valueInQuestion, limitA, limitB, exclusive) {\r\n            if (exclusive) {\r\n                return Math.min(limitA, limitB) < valueInQuestion && valueInQuestion < Math.max(limitA, limitB);\r\n            }\r\n            else {\r\n                return Math.min(limitA, limitB) <= valueInQuestion && valueInQuestion <= Math.max(limitA, limitB);\r\n            }\r\n        }\r\n        measure.isBetween = isBetween;\r\n        /**\r\n         * Check if a given angle is between an arc's start and end angles.\r\n         *\r\n         * @param angleInQuestion The angle to test.\r\n         * @param arc Arc to test against.\r\n         * @param exclusive Flag to exclude equaling the start or end angles.\r\n         * @returns Boolean true if angle is between (or equal to) the arc's start and end angles.\r\n         */\r\n        function isBetweenArcAngles(angleInQuestion, arc, exclusive) {\r\n            var startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n            var span = MakerJs.angle.ofArcSpan(arc);\r\n            var endAngle = startAngle + span;\r\n            angleInQuestion = MakerJs.angle.noRevolutions(angleInQuestion);\r\n            //computed angles will not be negative, but the arc may have specified a negative angle, so check against one revolution forward and backward\r\n            return (isBetween(angleInQuestion, startAngle, endAngle, exclusive) || isBetween(angleInQuestion, startAngle + 360, endAngle + 360, exclusive) || isBetween(angleInQuestion, startAngle - 360, endAngle - 360, exclusive));\r\n        }\r\n        measure.isBetweenArcAngles = isBetweenArcAngles;\r\n        /**\r\n         * Check if a given point is between a line's end points.\r\n         *\r\n         * @param pointInQuestion The point to test.\r\n         * @param line Line to test against.\r\n         * @param exclusive Flag to exclude equaling the origin or end points.\r\n         * @returns Boolean true if point is between (or equal to) the line's origin and end points.\r\n         */\r\n        function isBetweenPoints(pointInQuestion, line, exclusive) {\r\n            var oneDimension = false;\r\n            for (var i = 2; i--;) {\r\n                if (MakerJs.round(line.origin[i] - line.end[i], .000001) == 0) {\r\n                    if (oneDimension)\r\n                        return false;\r\n                    oneDimension = true;\r\n                    continue;\r\n                }\r\n                var origin_value = MakerJs.round(line.origin[i]);\r\n                var end_value = MakerJs.round(line.end[i]);\r\n                if (!isBetween(MakerJs.round(pointInQuestion[i]), origin_value, end_value, exclusive))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        measure.isBetweenPoints = isBetweenPoints;\r\n        /**\r\n         * Check if a given bezier seed has all points on the same slope.\r\n         *\r\n         * @param seed The bezier seed to test.\r\n         * @param exclusive Optional boolean to test only within the boundary of the endpoints.\r\n         * @returns Boolean true if bezier seed has control points on the line slope and between the line endpoints.\r\n         */\r\n        function isBezierSeedLinear(seed, exclusive) {\r\n            //create a slope from the endpoints\r\n            var slope = lineSlope(seed);\r\n            for (var i = 0; i < seed.controls.length; i++) {\r\n                if (!(measure.isPointOnSlope(seed.controls[i], slope))) {\r\n                    if (!exclusive)\r\n                        return false;\r\n                    if (isBetweenPoints(seed.controls[i], seed, false))\r\n                        return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        measure.isBezierSeedLinear = isBezierSeedLinear;\r\n        /**\r\n         * @private\r\n         */\r\n        var graham_scan = require('graham_scan');\r\n        /**\r\n         * @private\r\n         */\r\n        function serializePoint(p) {\r\n            return p.join(',');\r\n        }\r\n        /**\r\n         * Check for flow of paths in a chain being clockwise or not.\r\n         *\r\n         * @param chainContext The chain to test.\r\n         * @param out_result Optional output object, if provided, will be populated with convex hull results.\r\n         * @returns Boolean true if paths in the chain flow clockwise.\r\n         */\r\n        function isChainClockwise(chainContext, out_result) {\r\n            //cannot do non-endless or circle\r\n            if (!chainContext.endless || chainContext.links.length === 1) {\r\n                return null;\r\n            }\r\n            var keyPoints = MakerJs.chain.toKeyPoints(chainContext);\r\n            return isPointArrayClockwise(keyPoints, out_result);\r\n        }\r\n        measure.isChainClockwise = isChainClockwise;\r\n        /**\r\n         * Check for array of points being clockwise or not.\r\n         *\r\n         * @param points The array of points to test.\r\n         * @param out_result Optional output object, if provided, will be populated with convex hull results.\r\n         * @returns Boolean true if points flow clockwise.\r\n         */\r\n        function isPointArrayClockwise(points, out_result) {\r\n            var convexHull = new graham_scan();\r\n            var pointsInOrder = [];\r\n            function add(endPoint) {\r\n                convexHull.addPoint(endPoint[0], endPoint[1]);\r\n                pointsInOrder.push(serializePoint(endPoint));\r\n            }\r\n            points.forEach(add);\r\n            //we only need to deal with 3 points\r\n            var hull = convexHull.getHull();\r\n            var hullPoints = hull.slice(0, 3).map(function (p) { return serializePoint([p.x, p.y]); });\r\n            var ordered = [];\r\n            pointsInOrder.forEach(function (p) {\r\n                if (~hullPoints.indexOf(p))\r\n                    ordered.push(p);\r\n            });\r\n            //now make sure endpoints of hull are endpoints of ordered. do this by managing the middle point\r\n            switch (ordered.indexOf(hullPoints[1])) {\r\n                case 0:\r\n                    //shift down\r\n                    ordered.unshift(ordered.pop());\r\n                    break;\r\n                case 2:\r\n                    //shift up\r\n                    ordered.push(ordered.shift());\r\n                    break;\r\n            }\r\n            if (out_result) {\r\n                out_result.hullPoints = hull.map(function (p) { return [p.x, p.y]; });\r\n                out_result.keyPoints = points;\r\n            }\r\n            //the hull is counterclockwise, so the result is clockwise if the first elements do not match\r\n            return hullPoints[0] != ordered[0];\r\n        }\r\n        measure.isPointArrayClockwise = isPointArrayClockwise;\r\n        /**\r\n         * Check for line overlapping another line.\r\n         *\r\n         * @param lineA The line to test.\r\n         * @param lineB The line to check for overlap.\r\n         * @param excludeTangents Boolean to exclude exact endpoints and only look for deep overlaps.\r\n         * @returns Boolean true if lineA is overlapped with lineB.\r\n         */\r\n        function isLineOverlapping(lineA, lineB, excludeTangents) {\r\n            var pointsOfIntersection = [];\r\n            function checkPoints(index, a, b) {\r\n                function checkPoint(p) {\r\n                    return isBetweenPoints(p, a, excludeTangents);\r\n                }\r\n                return checkPoint(b.origin) || checkPoint(b.end);\r\n            }\r\n            return checkPoints(0, lineA, lineB) || checkPoints(1, lineB, lineA);\r\n        }\r\n        measure.isLineOverlapping = isLineOverlapping;\r\n        /**\r\n         * Check for measurement overlapping another measurement.\r\n         *\r\n         * @param measureA The measurement to test.\r\n         * @param measureB The measurement to check for overlap.\r\n         * @returns Boolean true if measureA is overlapped with measureB.\r\n         */\r\n        function isMeasurementOverlapping(measureA, measureB) {\r\n            for (var i = 2; i--;) {\r\n                if (!(MakerJs.round(measureA.low[i] - measureB.high[i]) <= 0 && MakerJs.round(measureA.high[i] - measureB.low[i]) >= 0))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        measure.isMeasurementOverlapping = isMeasurementOverlapping;\r\n        /**\r\n         * Gets the slope of a line.\r\n         */\r\n        function lineSlope(line) {\r\n            var dx = line.end[0] - line.origin[0];\r\n            if (MakerJs.round(dx, .000001) == 0) {\r\n                return {\r\n                    line: line,\r\n                    hasSlope: false\r\n                };\r\n            }\r\n            var dy = line.end[1] - line.origin[1];\r\n            var slope = dy / dx;\r\n            var yIntercept = line.origin[1] - slope * line.origin[0];\r\n            return {\r\n                line: line,\r\n                hasSlope: true,\r\n                slope: slope,\r\n                yIntercept: yIntercept\r\n            };\r\n        }\r\n        measure.lineSlope = lineSlope;\r\n        /**\r\n         * Calculates the distance between two points.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns Distance between points.\r\n         */\r\n        function pointDistance(a, b) {\r\n            var dx = b[0] - a[0];\r\n            var dy = b[1] - a[1];\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n        measure.pointDistance = pointDistance;\r\n        /**\r\n         * @private\r\n         */\r\n        function getExtremePoint(a, b, fn) {\r\n            return [\r\n                fn(a[0], b[0]),\r\n                fn(a[1], b[1])\r\n            ];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var pathExtentsMap = {};\r\n        pathExtentsMap[MakerJs.pathType.Line] = function (line) {\r\n            return {\r\n                low: getExtremePoint(line.origin, line.end, Math.min),\r\n                high: getExtremePoint(line.origin, line.end, Math.max)\r\n            };\r\n        };\r\n        pathExtentsMap[MakerJs.pathType.Circle] = function (circle) {\r\n            var r = circle.radius;\r\n            return {\r\n                low: MakerJs.point.add(circle.origin, [-r, -r]),\r\n                high: MakerJs.point.add(circle.origin, [r, r])\r\n            };\r\n        };\r\n        pathExtentsMap[MakerJs.pathType.Arc] = function (arc) {\r\n            var r = arc.radius;\r\n            var arcPoints = MakerJs.point.fromArc(arc);\r\n            function extremeAngle(xyAngle, value, fn) {\r\n                var extremePoint = getExtremePoint(arcPoints[0], arcPoints[1], fn);\r\n                for (var i = 2; i--;) {\r\n                    if (isBetweenArcAngles(xyAngle[i], arc, false)) {\r\n                        extremePoint[i] = value + arc.origin[i];\r\n                    }\r\n                }\r\n                return extremePoint;\r\n            }\r\n            return {\r\n                low: extremeAngle([180, 270], -r, Math.min),\r\n                high: extremeAngle([360, 90], r, Math.max)\r\n            };\r\n        };\r\n        /**\r\n         * Calculates the smallest rectangle which contains a path.\r\n         *\r\n         * @param pathToMeasure The path to measure.\r\n         * @returns object with low and high points.\r\n         */\r\n        function pathExtents(pathToMeasure, addOffset) {\r\n            if (pathToMeasure) {\r\n                var fn = pathExtentsMap[pathToMeasure.type];\r\n                if (fn) {\r\n                    var m = fn(pathToMeasure);\r\n                    if (addOffset) {\r\n                        m.high = MakerJs.point.add(m.high, addOffset);\r\n                        m.low = MakerJs.point.add(m.low, addOffset);\r\n                    }\r\n                    return m;\r\n                }\r\n            }\r\n            return { low: null, high: null };\r\n        }\r\n        measure.pathExtents = pathExtents;\r\n        /**\r\n         * @private\r\n         */\r\n        var pathLengthMap = {};\r\n        pathLengthMap[MakerJs.pathType.Line] = function (line) {\r\n            return pointDistance(line.origin, line.end);\r\n        };\r\n        pathLengthMap[MakerJs.pathType.Circle] = function (circle) {\r\n            return 2 * Math.PI * circle.radius;\r\n        };\r\n        pathLengthMap[MakerJs.pathType.Arc] = function (arc) {\r\n            var value = pathLengthMap[MakerJs.pathType.Circle](arc);\r\n            var pct = MakerJs.angle.ofArcSpan(arc) / 360;\r\n            value *= pct;\r\n            return value;\r\n        };\r\n        pathLengthMap[MakerJs.pathType.BezierSeed] = function (seed) {\r\n            return MakerJs.models.BezierCurve.computeLength(seed);\r\n        };\r\n        /**\r\n         * Measures the length of a path.\r\n         *\r\n         * @param pathToMeasure The path to measure.\r\n         * @returns Length of the path.\r\n         */\r\n        function pathLength(pathToMeasure) {\r\n            if (pathToMeasure) {\r\n                var fn = pathLengthMap[pathToMeasure.type];\r\n                if (fn) {\r\n                    return fn(pathToMeasure);\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        measure.pathLength = pathLength;\r\n        /**\r\n         * Measures the length of all paths in a model.\r\n         *\r\n         * @param modelToMeasure The model containing paths to measure.\r\n         * @returns Length of all paths in the model.\r\n         */\r\n        function modelPathLength(modelToMeasure) {\r\n            var total = 0;\r\n            MakerJs.model.walk(modelToMeasure, {\r\n                onPath: function (walkedPath) {\r\n                    total += pathLength(walkedPath.pathContext);\r\n                }\r\n            });\r\n            return total;\r\n        }\r\n        measure.modelPathLength = modelPathLength;\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneMeasure(measureToclone) {\r\n            return {\r\n                high: MakerJs.point.clone(measureToclone.high),\r\n                low: MakerJs.point.clone(measureToclone.low)\r\n            };\r\n        }\r\n        /**\r\n         * Measures the smallest rectangle which contains a model.\r\n         *\r\n         * @param modelToMeasure The model to measure.\r\n         * @param atlas Optional atlas to save measurements.\r\n         * @returns object with low and high points.\r\n         */\r\n        function modelExtents(modelToMeasure, atlas) {\r\n            function increaseParentModel(childRoute, childMeasurement) {\r\n                if (!childMeasurement)\r\n                    return;\r\n                //to get the parent route, just traverse backwards 2 to remove id and 'paths' / 'models'\r\n                var parentRoute = childRoute.slice(0, -2);\r\n                var parentRouteKey = MakerJs.createRouteKey(parentRoute);\r\n                if (!(parentRouteKey in atlas.modelMap)) {\r\n                    //just start with the known size\r\n                    atlas.modelMap[parentRouteKey] = cloneMeasure(childMeasurement);\r\n                }\r\n                else {\r\n                    increase(atlas.modelMap[parentRouteKey], childMeasurement);\r\n                }\r\n            }\r\n            if (!atlas)\r\n                atlas = new Atlas(modelToMeasure);\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    //trust that the path measurement is good\r\n                    if (!(walkedPath.routeKey in atlas.pathMap)) {\r\n                        atlas.pathMap[walkedPath.routeKey] = pathExtents(walkedPath.pathContext, walkedPath.offset);\r\n                    }\r\n                    increaseParentModel(walkedPath.route, atlas.pathMap[walkedPath.routeKey]);\r\n                },\r\n                afterChildWalk: function (walkedModel) {\r\n                    //model has been updated by all its children, update parent\r\n                    increaseParentModel(walkedModel.route, atlas.modelMap[walkedModel.routeKey]);\r\n                }\r\n            };\r\n            MakerJs.model.walk(modelToMeasure, walkOptions);\r\n            atlas.modelsMeasured = true;\r\n            var m = atlas.modelMap[''];\r\n            if (m) {\r\n                return augment(m);\r\n            }\r\n            return m;\r\n        }\r\n        measure.modelExtents = modelExtents;\r\n        /**\r\n         * Augment a measurement - add more properties such as center point, height and width.\r\n         *\r\n         * @param measureToAugment The measurement to augment.\r\n         * @returns Measurement object with augmented properties.\r\n         */\r\n        function augment(measureToAugment) {\r\n            var m = measureToAugment;\r\n            m.center = MakerJs.point.average(m.high, m.low);\r\n            m.width = m.high[0] - m.low[0];\r\n            m.height = m.high[1] - m.low[1];\r\n            return m;\r\n        }\r\n        measure.augment = augment;\r\n        /**\r\n         * A list of maps of measurements.\r\n         *\r\n         * @param modelToMeasure The model to measure.\r\n         * @param atlas Optional atlas to save measurements.\r\n         * @returns object with low and high points.\r\n         */\r\n        var Atlas = /** @class */ (function () {\r\n            /**\r\n             * Constructor.\r\n             * @param modelContext The model to measure.\r\n             */\r\n            function Atlas(modelContext) {\r\n                this.modelContext = modelContext;\r\n                /**\r\n                 * Flag that models have been measured.\r\n                 */\r\n                this.modelsMeasured = false;\r\n                /**\r\n                 * Map of model measurements, mapped by routeKey.\r\n                 */\r\n                this.modelMap = {};\r\n                /**\r\n                 * Map of path measurements, mapped by routeKey.\r\n                 */\r\n                this.pathMap = {};\r\n            }\r\n            Atlas.prototype.measureModels = function () {\r\n                if (!this.modelsMeasured) {\r\n                    modelExtents(this.modelContext, this);\r\n                }\r\n            };\r\n            return Atlas;\r\n        }());\r\n        measure.Atlas = Atlas;\r\n        /**\r\n         * @private\r\n         */\r\n        function loopIndex(base, i) {\r\n            if (i >= base)\r\n                return i - base;\r\n            if (i < 0)\r\n                return i + base;\r\n            return i;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function yAtX(slope, x) {\r\n            return slope.slope * x + slope.yIntercept;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function pointOnSlopeAtX(line, x) {\r\n            var slope = lineSlope(line);\r\n            return [x, yAtX(slope, x)];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function isCircular(bounds) {\r\n            for (var i = 1; i < 3; i++) {\r\n                if (!measure.isPointEqual(bounds[0].center, bounds[i].center, .000001) || !(MakerJs.round(bounds[0].width - bounds[i].width) === 0)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getAngledBounds(index, modelToMeasure, rotateModel, rotatePaths) {\r\n            MakerJs.model.rotate(modelToMeasure, rotateModel);\r\n            var m = modelExtents(modelToMeasure);\r\n            var result = {\r\n                index: index,\r\n                rotation: rotatePaths,\r\n                center: MakerJs.point.rotate(m.center, rotatePaths),\r\n                //model is sideways, so width is based on Y, height is based on X\r\n                width: m.height,\r\n                height: m.width,\r\n                bottom: new MakerJs.paths.Line(m.low, [m.high[0], m.low[1]]),\r\n                middle: new MakerJs.paths.Line([m.low[0], m.center[1]], [m.high[0], m.center[1]]),\r\n                top: new MakerJs.paths.Line(m.high, [m.low[0], m.high[1]])\r\n            };\r\n            [result.top, result.middle, result.bottom].forEach(function (line) { return MakerJs.path.rotate(line, rotatePaths); });\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function hexSolution(lines, bounds) {\r\n            var tip = lines[1].origin;\r\n            var tipX = tip[0];\r\n            var left = lines[3].origin[0];\r\n            var right = lines[0].origin[0];\r\n            //see if left edge is in bounds if right edge is on the hex boundary\r\n            var altRight = tipX - right;\r\n            if ((right - left) > 2 * altRight)\r\n                return null;\r\n            //see if right edge is in bounds if left edge is on the hex boundary\r\n            var altLeft = (tipX - left) / 3;\r\n            if (altRight < altLeft)\r\n                return null;\r\n            var altitudeViaSide = Math.min(altLeft, altRight);\r\n            var radiusViaSide = MakerJs.solvers.equilateralSide(altitudeViaSide);\r\n            //find peaks, then find highest peak\r\n            var peakPoints = [MakerJs.point.fromSlopeIntersection(lines[1], lines[2]), MakerJs.point.fromSlopeIntersection(lines[4], lines[5])];\r\n            var peakRadii = peakPoints.map(function (p) { return Math.abs(p[1] - tip[1]); });\r\n            var peakNum = (peakRadii[0] > peakRadii[1]) ? 0 : 1; //top = 0, bottom = 1\r\n            var radiusViaPeak = peakRadii[peakNum];\r\n            if (radiusViaPeak > radiusViaSide) {\r\n                var altitudeViaPeak = MakerJs.solvers.equilateralAltitude(radiusViaPeak);\r\n                var peakX = tipX - 2 * altitudeViaPeak;\r\n                //see if it will contain right side\r\n                if (right > peakX + altitudeViaPeak)\r\n                    return null;\r\n                //see if it will contain left side\r\n                if (left < peakX - altitudeViaPeak)\r\n                    return null;\r\n                //at this point, [tipX - 2 * altitudeViaPeak, tip[1]] is a solution for origin.\r\n                //but we want to best center the result by sliding along the boundary middle, balancing the smallest gap\r\n                var leftGap = left - peakX + altitudeViaPeak;\r\n                var peakGap = 2 * altitudeViaPeak - bounds[peakNum + 1].width;\r\n                var minHalfGap = Math.min(leftGap, peakGap) / 2;\r\n                return {\r\n                    origin: pointOnSlopeAtX(bounds[2 - peakNum].middle, peakX + minHalfGap),\r\n                    radius: radiusViaPeak,\r\n                    type: 'peak ' + peakNum\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    origin: [tipX - 2 * altitudeViaSide, tip[1]],\r\n                    radius: radiusViaSide,\r\n                    type: 'side'\r\n                };\r\n            }\r\n        }\r\n        /**\r\n         * Measures the minimum bounding hexagon surrounding a model. The hexagon is oriented such that the right and left sides are vertical, and the top and bottom are pointed.\r\n         *\r\n         * @param modelToMeasure The model to measure.\r\n         * @returns IBoundingHex object which is a hexagon model, with an additional radius property.\r\n         */\r\n        function boundingHexagon(modelToMeasure) {\r\n            var clone = MakerJs.cloneObject(modelToMeasure);\r\n            MakerJs.model.originate(clone);\r\n            var originalMeasure = modelExtents(clone);\r\n            var bounds = [];\r\n            var scratch = { paths: {} };\r\n            MakerJs.model.center(clone);\r\n            function result(radius, origin, notes) {\r\n                return {\r\n                    radius: radius,\r\n                    paths: new MakerJs.models.Polygon(6, radius, 30).paths,\r\n                    origin: MakerJs.point.add(origin, originalMeasure.center),\r\n                    //models: { scratch: scratch },\r\n                    notes: notes\r\n                };\r\n            }\r\n            var boundRotations = [[90, -90], [-60, -30], [-60, 30]];\r\n            while (boundRotations.length) {\r\n                var rotation = boundRotations.shift();\r\n                var bound = getAngledBounds(bounds.length, clone, rotation[0], rotation[1]);\r\n                var side = MakerJs.solvers.equilateralSide(bound.width / 2);\r\n                if (side >= bound.height) {\r\n                    return result(side, bound.center, 'solved by bound ' + bounds.length);\r\n                }\r\n                bounds.push(bound);\r\n            }\r\n            //model.rotate(clone, 30);\r\n            //scratch.models = { clone: clone };\r\n            //check for a circular solution\r\n            if (isCircular(bounds)) {\r\n                return result(MakerJs.solvers.equilateralSide(bounds[0].width / 2), bounds[0].center, 'solved as circular');\r\n            }\r\n            var perimeters = bounds.map(function (b) { return b.top; }).concat(bounds.map(function (b) { return b.bottom; }));\r\n            perimeters.forEach(function (p, i) {\r\n                scratch.paths[i] = p;\r\n                //converge alternate lines to form two triangles\r\n                MakerJs.path.converge(perimeters[loopIndex(6, i + 2)], p, true);\r\n            });\r\n            bounds.forEach(function (b, i) {\r\n                scratch.paths['m' + i] = b.middle;\r\n            });\r\n            var boundCopy = bounds.slice();\r\n            var solution;\r\n            //solve a hexagon for every tip, keeping the smallest one\r\n            for (var i = 0; i < 6; i++) {\r\n                //rotate the scratch area so that we always reference the tip at polar 0\r\n                if (i > 0) {\r\n                    perimeters.push(perimeters.shift());\r\n                    boundCopy.push(boundCopy.shift());\r\n                    MakerJs.model.rotate(scratch, -60);\r\n                }\r\n                var s = hexSolution(perimeters, boundCopy);\r\n                if (s) {\r\n                    if (!solution || s.radius < solution.radius) {\r\n                        solution = s;\r\n                        solution.index = i;\r\n                    }\r\n                }\r\n            }\r\n            var p = MakerJs.point.rotate(solution.origin, solution.index * 60);\r\n            return result(solution.radius, p, 'solved by ' + solution.index + ' as ' + solution.type);\r\n        }\r\n        measure.boundingHexagon = boundingHexagon;\r\n        /**\r\n         * @private\r\n         */\r\n        function addUniquePoints(pointArray, pointsToAdd) {\r\n            var added = 0;\r\n            pointsToAdd.forEach(function (p) {\r\n                if (!measure.isPointDistinct(p, pointArray, .00000001))\r\n                    return;\r\n                pointArray.push(p);\r\n                added++;\r\n            });\r\n            return added;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getFarPoint(modelContext, farPoint, measureAtlas) {\r\n            if (farPoint)\r\n                return farPoint;\r\n            var high = modelExtents(modelContext).high;\r\n            if (high) {\r\n                return MakerJs.point.add(high, [1, 1]);\r\n            }\r\n            return [7654321, 1234567];\r\n        }\r\n        /**\r\n         * Check to see if a point is inside of a model.\r\n         *\r\n         * @param pointToCheck The point to check.\r\n         * @param modelContext The model to check against.\r\n         * @param options Optional IMeasurePointInsideOptions object.\r\n         * @returns Boolean true if the path is inside of the modelContext.\r\n         */\r\n        function isPointInsideModel(pointToCheck, modelContext, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (!options.farPoint) {\r\n                options.farPoint = getFarPoint(modelContext, options.farPoint, options.measureAtlas);\r\n            }\r\n            options.out_intersectionPoints = [];\r\n            var isInside;\r\n            var lineToFarPoint = new MakerJs.paths.Line(pointToCheck, options.farPoint);\r\n            var measureFarPoint = pathExtents(lineToFarPoint);\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    if (options.measureAtlas && !isMeasurementOverlapping(measureFarPoint, options.measureAtlas.pathMap[walkedPath.routeKey])) {\r\n                        return;\r\n                    }\r\n                    var intersectOptions = { path2Offset: walkedPath.offset };\r\n                    var farInt = MakerJs.path.intersection(lineToFarPoint, walkedPath.pathContext, intersectOptions);\r\n                    if (farInt) {\r\n                        var added = addUniquePoints(options.out_intersectionPoints, farInt.intersectionPoints);\r\n                        //if number of intersections is an odd number, flip the flag.\r\n                        if (added % 2 == 1) {\r\n                            isInside = !!!isInside;\r\n                        }\r\n                    }\r\n                },\r\n                beforeChildWalk: function (innerWalkedModel) {\r\n                    if (!options.measureAtlas) {\r\n                        return true;\r\n                    }\r\n                    //see if there is a model measurement. if not, it is because the model does not contain paths.\r\n                    var innerModelMeasurement = options.measureAtlas.modelMap[innerWalkedModel.routeKey];\r\n                    return innerModelMeasurement && isMeasurementOverlapping(measureFarPoint, innerModelMeasurement);\r\n                }\r\n            };\r\n            MakerJs.model.walk(modelContext, walkOptions);\r\n            return !!isInside;\r\n        }\r\n        measure.isPointInsideModel = isPointInsideModel;\r\n    })(measure = MakerJs.measure || (MakerJs.measure = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Renders an item in JSON.\r\n         *\r\n         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n         * @param options Rendering options object.\r\n         * @param options.accuracy Optional exemplar of number of decimal places.\r\n         * @param options.indentation Optional number of characters to indent after a newline.\r\n         * @returns String of DXF content.\r\n         */\r\n        function toJson(itemToExport, options) {\r\n            if (options === void 0) { options = {}; }\r\n            function replacer(key, value) {\r\n                if (MakerJs.isNumber(value)) {\r\n                    var newValue = MakerJs.round(value, options.accuracy);\r\n                    return newValue;\r\n                }\r\n                if (MakerJs.isPoint(value)) {\r\n                    var newPoint = MakerJs.point.rounded(value, options.accuracy);\r\n                    return newPoint;\r\n                }\r\n                return value;\r\n            }\r\n            return JSON.stringify(itemToExport, options.accuracy && replacer, options.indentation);\r\n        }\r\n        exporter.toJson = toJson;\r\n        /**\r\n         * Try to get the unit system from a model\r\n         * @private\r\n         */\r\n        function tryGetModelUnits(itemToExport) {\r\n            if (MakerJs.isModel(itemToExport)) {\r\n                return itemToExport.units;\r\n            }\r\n        }\r\n        exporter.tryGetModelUnits = tryGetModelUnits;\r\n        /**\r\n         * Named colors, safe for CSS and DXF\r\n         * 17 colors from https://www.w3.org/TR/CSS21/syndata.html#value-def-color mapped to DXF equivalent AutoDesk Color Index\r\n         */\r\n        exporter.colors = {\r\n            black: 0,\r\n            red: 1,\r\n            yellow: 2,\r\n            lime: 3,\r\n            aqua: 4,\r\n            blue: 5,\r\n            fuchsia: 6,\r\n            white: 7,\r\n            gray: 9,\r\n            maroon: 14,\r\n            orange: 30,\r\n            olive: 58,\r\n            green: 94,\r\n            teal: 134,\r\n            navy: 174,\r\n            purple: 214,\r\n            silver: 254\r\n        };\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var importer;\r\n    (function (importer) {\r\n        /**\r\n         * Create a numeric array from a string of numbers. The numbers may be delimited by anything non-numeric.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * var n = makerjs.importer.parseNumericList('5, 10, 15.20 25-30-35 4e1 .5');\r\n         * ```\r\n         *\r\n         * @param s The string of numbers.\r\n         * @returns Array of numbers.\r\n         */\r\n        function parseNumericList(s) {\r\n            var result = [];\r\n            //http://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly\r\n            var re = /-?(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\n            var matches;\r\n            while ((matches = re.exec(s)) !== null) {\r\n                if (matches.index === re.lastIndex) {\r\n                    re.lastIndex++;\r\n                }\r\n                if (matches[0] !== \"\")\r\n                    result.push(parseFloat(matches[0]));\r\n            }\r\n            return result;\r\n        }\r\n        importer.parseNumericList = parseNumericList;\r\n    })(importer = MakerJs.importer || (MakerJs.importer = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Renders an item in AutoDesk DFX file format.\r\n         *\r\n         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n         * @param options Rendering options object.\r\n         * @param options.units String of the unit system. May be omitted. See makerjs.unitType for possible values.\r\n         * @returns String of DXF content.\r\n         */\r\n        function toDXF(itemToExport, options) {\r\n            //DXF format documentation:\r\n            //http://images.autodesk.com/adsk/files/acad_dxf0.pdf\r\n            if (options === void 0) { options = {}; }\r\n            var opts = {\r\n                fontSize: 9\r\n            };\r\n            var layerIds = [];\r\n            var doc = {\r\n                entities: [],\r\n                header: {},\r\n                tables: {}\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            if (MakerJs.isModel(itemToExport)) {\r\n                var modelToExport = itemToExport;\r\n                if (modelToExport.exporterOptions) {\r\n                    MakerJs.extendObject(opts, modelToExport.exporterOptions['toDXF']);\r\n                }\r\n            }\r\n            function colorLayerOptions(layer) {\r\n                if (opts.layerOptions && opts.layerOptions[layer])\r\n                    return opts.layerOptions[layer];\r\n                if (layer in exporter.colors) {\r\n                    return {\r\n                        color: exporter.colors[layer]\r\n                    };\r\n                }\r\n            }\r\n            function defaultLayer(pathContext, parentLayer) {\r\n                var layerId = (pathContext && pathContext.layer) || parentLayer || '0';\r\n                if (layerIds.indexOf(layerId) < 0) {\r\n                    layerIds.push(layerId);\r\n                }\r\n                return layerId;\r\n            }\r\n            var map = {};\r\n            map[MakerJs.pathType.Line] = function (line, offset, layer) {\r\n                var lineEntity = {\r\n                    type: \"LINE\",\r\n                    layer: defaultLayer(line, layer),\r\n                    vertices: [\r\n                        {\r\n                            x: MakerJs.round(line.origin[0] + offset[0], opts.accuracy),\r\n                            y: MakerJs.round(line.origin[1] + offset[1], opts.accuracy)\r\n                        },\r\n                        {\r\n                            x: MakerJs.round(line.end[0] + offset[0], opts.accuracy),\r\n                            y: MakerJs.round(line.end[1] + offset[1], opts.accuracy)\r\n                        }\r\n                    ]\r\n                };\r\n                return lineEntity;\r\n            };\r\n            map[MakerJs.pathType.Circle] = function (circle, offset, layer) {\r\n                var circleEntity = {\r\n                    type: \"CIRCLE\",\r\n                    layer: defaultLayer(circle, layer),\r\n                    center: {\r\n                        x: MakerJs.round(circle.origin[0] + offset[0], opts.accuracy),\r\n                        y: MakerJs.round(circle.origin[1] + offset[1], opts.accuracy)\r\n                    },\r\n                    radius: MakerJs.round(circle.radius, opts.accuracy)\r\n                };\r\n                return circleEntity;\r\n            };\r\n            map[MakerJs.pathType.Arc] = function (arc, offset, layer) {\r\n                var arcEntity = {\r\n                    type: \"ARC\",\r\n                    layer: defaultLayer(arc, layer),\r\n                    center: {\r\n                        x: MakerJs.round(arc.origin[0] + offset[0], opts.accuracy),\r\n                        y: MakerJs.round(arc.origin[1] + offset[1], opts.accuracy)\r\n                    },\r\n                    radius: MakerJs.round(arc.radius, opts.accuracy),\r\n                    startAngle: MakerJs.round(arc.startAngle, opts.accuracy),\r\n                    endAngle: MakerJs.round(arc.endAngle, opts.accuracy)\r\n                };\r\n                return arcEntity;\r\n            };\r\n            //TODO - handle scenario if any bezier seeds get passed\r\n            //map[pathType.BezierSeed]\r\n            function appendVertex(v, layer, bulge) {\r\n                var vertex = {\r\n                    type: \"VERTEX\",\r\n                    layer: defaultLayer(null, layer),\r\n                    x: MakerJs.round(v[0], opts.accuracy),\r\n                    y: MakerJs.round(v[1], opts.accuracy),\r\n                    bulge: bulge\r\n                };\r\n                return vertex;\r\n            }\r\n            function polyline(c) {\r\n                var polylineEntity = {\r\n                    type: \"POLYLINE\",\r\n                    layer: defaultLayer(null, c.layer),\r\n                    shape: c.chain.endless,\r\n                    vertices: []\r\n                };\r\n                c.chain.links.forEach(function (link, i) {\r\n                    var bulge;\r\n                    if (link.walkedPath.pathContext.type === MakerJs.pathType.Arc) {\r\n                        var arc = link.walkedPath.pathContext;\r\n                        bulge = MakerJs.round(Math.tan(MakerJs.angle.toRadians(MakerJs.angle.ofArcSpan(arc)) / 4), opts.accuracy);\r\n                        if (link.reversed) {\r\n                            bulge *= -1;\r\n                        }\r\n                    }\r\n                    var vertex = link.endPoints[link.reversed ? 1 : 0];\r\n                    polylineEntity.vertices.push(appendVertex(vertex, c.layer, bulge));\r\n                });\r\n                if (!c.chain.endless) {\r\n                    var lastLink = c.chain.links[c.chain.links.length - 1];\r\n                    var endPoint = lastLink.endPoints[lastLink.reversed ? 0 : 1];\r\n                    polylineEntity.vertices.push(appendVertex(endPoint, c.layer));\r\n                }\r\n                return polylineEntity;\r\n            }\r\n            function text(caption) {\r\n                var layerId = defaultLayer(null, caption.layer);\r\n                var layerOptions = colorLayerOptions(layerId);\r\n                var center = MakerJs.point.middle(caption.anchor);\r\n                var textEntity = {\r\n                    type: \"TEXT\",\r\n                    startPoint: appendVertex(center, null),\r\n                    endPoint: appendVertex(center, null),\r\n                    layer: layerId,\r\n                    textHeight: (layerOptions && layerOptions.fontSize) || opts.fontSize,\r\n                    text: caption.text,\r\n                    halign: 4,\r\n                    valign: 0,\r\n                    rotation: MakerJs.angle.ofPointInDegrees(caption.anchor.origin, caption.anchor.end)\r\n                };\r\n                return textEntity;\r\n            }\r\n            function layerOut(layerId, layerColor) {\r\n                var layerEntity = {\r\n                    name: layerId,\r\n                    color: layerColor\r\n                };\r\n                return layerEntity;\r\n            }\r\n            function lineTypesOut() {\r\n                var lineStyleTable = {\r\n                    lineTypes: {\r\n                        \"CONTINUOUS\": {\r\n                            name: \"CONTINUOUS\",\r\n                            description: \"______\",\r\n                            patternLength: 0\r\n                        }\r\n                    }\r\n                };\r\n                var tableName = 'lineType';\r\n                doc.tables[tableName] = lineStyleTable;\r\n            }\r\n            function layersOut() {\r\n                var layerTable = {\r\n                    layers: {}\r\n                };\r\n                layerIds.forEach(function (layerId) {\r\n                    var layerOptions = colorLayerOptions(layerId);\r\n                    if (layerOptions) {\r\n                        layerTable.layers[layerId] = layerOut(layerId, layerOptions.color);\r\n                    }\r\n                });\r\n                var tableName = 'layer';\r\n                doc.tables[tableName] = layerTable;\r\n            }\r\n            function header() {\r\n                if (opts.units) {\r\n                    var units = dxfUnit[opts.units];\r\n                    doc.header[\"$INSUNITS\"] = units;\r\n                }\r\n            }\r\n            function entities(walkedPaths, chains, captions) {\r\n                var entityArray = doc.entities;\r\n                entityArray.push.apply(entityArray, chains.map(polyline));\r\n                walkedPaths.forEach(function (walkedPath) {\r\n                    var fn = map[walkedPath.pathContext.type];\r\n                    if (fn) {\r\n                        var entity = fn(walkedPath.pathContext, walkedPath.offset, walkedPath.layer);\r\n                        entityArray.push(entity);\r\n                    }\r\n                });\r\n                entityArray.push.apply(entityArray, captions.map(text));\r\n            }\r\n            //fixup options\r\n            if (!opts.units) {\r\n                var units = exporter.tryGetModelUnits(itemToExport);\r\n                if (units) {\r\n                    opts.units = units;\r\n                }\r\n            }\r\n            //also pass back to options parameter\r\n            MakerJs.extendObject(options, opts);\r\n            //begin dxf output\r\n            var chainsOnLayers = [];\r\n            var walkedPaths = [];\r\n            if (opts.usePOLYLINE) {\r\n                var cb = function (chains, loose, layer) {\r\n                    chains.forEach(function (c) {\r\n                        if (c.endless && c.links.length === 1 && c.links[0].walkedPath.pathContext.type === MakerJs.pathType.Circle) {\r\n                            //don't treat circles as lwpolylines\r\n                            walkedPaths.push(c.links[0].walkedPath);\r\n                            return;\r\n                        }\r\n                        var chainOnLayer = { chain: c, layer: layer };\r\n                        chainsOnLayers.push(chainOnLayer);\r\n                    });\r\n                    walkedPaths.push.apply(walkedPaths, loose);\r\n                };\r\n                MakerJs.model.findChains(modelToExport, cb, { byLayers: true, pointMatchingDistance: opts.pointMatchingDistance });\r\n            }\r\n            else {\r\n                var walkOptions = {\r\n                    onPath: function (walkedPath) {\r\n                        walkedPaths.push(walkedPath);\r\n                    }\r\n                };\r\n                MakerJs.model.walk(modelToExport, walkOptions);\r\n            }\r\n            entities(walkedPaths, chainsOnLayers, MakerJs.model.getAllCaptionsOffset(modelToExport));\r\n            header();\r\n            lineTypesOut();\r\n            layersOut();\r\n            return outputDocument(doc);\r\n        }\r\n        exporter.toDXF = toDXF;\r\n        /**\r\n         * @private\r\n         */\r\n        function outputDocument(doc) {\r\n            var dxf = [];\r\n            function append() {\r\n                var values = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    values[_i] = arguments[_i];\r\n                }\r\n                dxf.push.apply(dxf, values);\r\n            }\r\n            var map = {};\r\n            map[\"LINE\"] = function (line) {\r\n                append(\"0\", \"LINE\", \"8\", line.layer, \"10\", line.vertices[0].x, \"20\", line.vertices[0].y, \"11\", line.vertices[1].x, \"21\", line.vertices[1].y);\r\n            };\r\n            map[\"CIRCLE\"] = function (circle) {\r\n                append(\"0\", \"CIRCLE\", \"8\", circle.layer, \"10\", circle.center.x, \"20\", circle.center.y, \"40\", circle.radius);\r\n            };\r\n            map[\"ARC\"] = function (arc) {\r\n                append(\"0\", \"ARC\", \"8\", arc.layer, \"10\", arc.center.x, \"20\", arc.center.y, \"40\", arc.radius, \"50\", arc.startAngle, \"51\", arc.endAngle);\r\n            };\r\n            //TODO - handle scenario if any bezier seeds get passed\r\n            //map[pathType.BezierSeed]\r\n            map[\"VERTEX\"] = function (vertex) {\r\n                append(\"0\", \"VERTEX\", \"8\", vertex.layer, \"10\", vertex.x, \"20\", vertex.y);\r\n                if (vertex.bulge !== undefined) {\r\n                    append(\"42\", vertex.bulge);\r\n                }\r\n            };\r\n            map[\"POLYLINE\"] = function (polyline) {\r\n                append(\"0\", \"POLYLINE\", \"8\", polyline.layer, \"66\", 1, \"70\", polyline.shape ? 1 : 0);\r\n                polyline.vertices.forEach(function (vertex) { return map[\"VERTEX\"](vertex); });\r\n                append(\"0\", \"SEQEND\");\r\n            };\r\n            map[\"TEXT\"] = function (text) {\r\n                append(\"0\", \"TEXT\", \"10\", text.startPoint.x, \"20\", text.startPoint.y, \"11\", text.endPoint.x, \"21\", text.endPoint.y, \"40\", text.textHeight, \"1\", text.text, \"50\", text.rotation, \"8\", text.layer, \"72\", text.halign, \"73\", text.valign);\r\n            };\r\n            function section(sectionFn) {\r\n                append(\"0\", \"SECTION\");\r\n                sectionFn();\r\n                append(\"0\", \"ENDSEC\");\r\n            }\r\n            function table(fn) {\r\n                append(\"0\", \"TABLE\");\r\n                fn();\r\n                append(\"0\", \"ENDTAB\");\r\n            }\r\n            function tables() {\r\n                append(\"2\", \"TABLES\");\r\n                table(lineTypesOut);\r\n                table(layersOut);\r\n            }\r\n            function layerOut(layer) {\r\n                append(\"0\", \"LAYER\", \"2\", layer.name, \"70\", \"0\", \"62\", layer.color, \"6\", \"CONTINUOUS\");\r\n            }\r\n            function lineTypeOut(lineType) {\r\n                append(\"0\", \"LTYPE\", \"72\", //72 Alignment code; value is always 65, the ASCII code for A\r\n                \"65\", \"70\", \"64\", \"2\", lineType.name, \"3\", lineType.description, \"73\", \"0\", \"40\", lineType.patternLength);\r\n            }\r\n            function lineTypesOut() {\r\n                var lineTypeTableName = 'lineType';\r\n                var lineTypeTable = doc.tables[lineTypeTableName];\r\n                append(\"2\", \"LTYPE\");\r\n                for (var lineTypeId in lineTypeTable.lineTypes) {\r\n                    var lineType = lineTypeTable.lineTypes[lineTypeId];\r\n                    lineTypeOut(lineType);\r\n                }\r\n            }\r\n            function layersOut() {\r\n                var layerTableName = 'layer';\r\n                var layerTable = doc.tables[layerTableName];\r\n                append(\"2\", \"LAYER\");\r\n                for (var layerId in layerTable.layers) {\r\n                    var layer = layerTable.layers[layerId];\r\n                    layerOut(layer);\r\n                }\r\n            }\r\n            function header() {\r\n                append(\"2\", \"HEADER\");\r\n                for (var key in doc.header) {\r\n                    var value = doc.header[key];\r\n                    append(\"9\", key, \"70\", value);\r\n                }\r\n            }\r\n            function entities(entityArray) {\r\n                append(\"2\", \"ENTITIES\");\r\n                entityArray.forEach(function (entity) {\r\n                    var fn = map[entity.type];\r\n                    if (fn) {\r\n                        fn(entity);\r\n                    }\r\n                });\r\n            }\r\n            //begin dxf output\r\n            section(header);\r\n            section(tables);\r\n            section(function () { return entities(doc.entities); });\r\n            append(\"0\", \"EOF\");\r\n            return dxf.join('\\n');\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var dxfUnit = {};\r\n        //DXF format documentation:\r\n        //http://images.autodesk.com/adsk/files/acad_dxf0.pdf\r\n        //Default drawing units for AutoCAD DesignCenter blocks:\r\n        //0 = Unitless; 1 = Inches; 2 = Feet; 3 = Miles; 4 = Millimeters; 5 = Centimeters; 6 = Meters; 7 = Kilometers; 8 = Microinches;\r\n        dxfUnit[''] = 0;\r\n        dxfUnit[MakerJs.unitType.Inch] = 1;\r\n        dxfUnit[MakerJs.unitType.Foot] = 2;\r\n        dxfUnit[MakerJs.unitType.Millimeter] = 4;\r\n        dxfUnit[MakerJs.unitType.Centimeter] = 5;\r\n        dxfUnit[MakerJs.unitType.Meter] = 6;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var solvers;\r\n    (function (solvers) {\r\n        /**\r\n         * @private\r\n         */\r\n        var equilateral = Math.sqrt(3) / 2;\r\n        /**\r\n         * Solves for the altitude of an equilateral triangle when you know its side length.\r\n         *\r\n         * @param sideLength Length of a side of the equilateral triangle (all 3 sides are equal).\r\n         * @returns Altitude of the equilateral triangle.\r\n         */\r\n        function equilateralAltitude(sideLength) {\r\n            return sideLength * equilateral;\r\n        }\r\n        solvers.equilateralAltitude = equilateralAltitude;\r\n        /**\r\n         * Solves for the side length of an equilateral triangle when you know its altitude.\r\n         *\r\n         * @param altitude Altitude of the equilateral triangle.\r\n         * @returns Length of the side of the equilateral triangle (all 3 sides are equal).\r\n         */\r\n        function equilateralSide(altitude) {\r\n            return altitude / equilateral;\r\n        }\r\n        solvers.equilateralSide = equilateralSide;\r\n        /**\r\n         * Solves for the angle of a triangle when you know lengths of 3 sides.\r\n         *\r\n         * @param lengthA Length of side of triangle, opposite of the angle you are trying to find.\r\n         * @param lengthB Length of any other side of the triangle.\r\n         * @param lengthC Length of the remaining side of the triangle.\r\n         * @returns Angle opposite of the side represented by the first parameter.\r\n         */\r\n        function solveTriangleSSS(lengthA, lengthB, lengthC) {\r\n            return MakerJs.angle.toDegrees(Math.acos((lengthB * lengthB + lengthC * lengthC - lengthA * lengthA) / (2 * lengthB * lengthC)));\r\n        }\r\n        solvers.solveTriangleSSS = solveTriangleSSS;\r\n        /**\r\n         * Solves for the length of a side of a triangle when you know length of one side and 2 angles.\r\n         *\r\n         * @param oppositeAngleInDegrees Angle which is opposite of the side you are trying to find.\r\n         * @param lengthOfSideBetweenAngles Length of one side of the triangle which is between the provided angles.\r\n         * @param otherAngleInDegrees An other angle of the triangle.\r\n         * @returns Length of the side of the triangle which is opposite of the first angle parameter.\r\n         */\r\n        function solveTriangleASA(oppositeAngleInDegrees, lengthOfSideBetweenAngles, otherAngleInDegrees) {\r\n            var angleOppositeSide = 180 - oppositeAngleInDegrees - otherAngleInDegrees;\r\n            return (lengthOfSideBetweenAngles * Math.sin(MakerJs.angle.toRadians(oppositeAngleInDegrees))) / Math.sin(MakerJs.angle.toRadians(angleOppositeSide));\r\n        }\r\n        solvers.solveTriangleASA = solveTriangleASA;\r\n        /**\r\n         * Solves for the angles of the tangent lines between 2 circles.\r\n         *\r\n         * @param a First circle.\r\n         * @param b Second circle.\r\n         * @param inner Boolean to use inner tangents instead of outer tangents.\r\n         * @returns Array of angles in degrees where 2 lines between the circles will be tangent to both circles.\r\n         */\r\n        function circleTangentAngles(a, b, inner) {\r\n            if (inner === void 0) { inner = false; }\r\n            var connect = new MakerJs.paths.Line(a.origin, b.origin);\r\n            var distance = MakerJs.measure.pointDistance(a.origin, b.origin);\r\n            //no tangents if either circle encompasses the other\r\n            if (a.radius >= distance + b.radius || b.radius >= distance + a.radius)\r\n                return null;\r\n            //no inner tangents when circles touch or overlap\r\n            if (inner && (a.radius + b.radius >= distance))\r\n                return null;\r\n            var tangentAngles;\r\n            if (!inner && MakerJs.round(a.radius - b.radius) == 0) {\r\n                tangentAngles = [90, 270];\r\n            }\r\n            else {\r\n                //solve for circles on the x axis at the distance\r\n                var d2 = distance / 2;\r\n                var between = new MakerJs.paths.Circle([d2, 0], d2);\r\n                var diff = new MakerJs.paths.Circle(a.radius > b.radius ? [0, 0] : [distance, 0], inner ? (a.radius + b.radius) : Math.abs(a.radius - b.radius));\r\n                var int = MakerJs.path.intersection(diff, between);\r\n                if (!int || !int.path1Angles)\r\n                    return null;\r\n                tangentAngles = int.path1Angles;\r\n            }\r\n            var connectAngle = MakerJs.angle.ofLineInDegrees(connect);\r\n            //add the line's angle to the result\r\n            return tangentAngles.map(function (a) { return MakerJs.angle.noRevolutions(a + connectAngle); });\r\n        }\r\n        solvers.circleTangentAngles = circleTangentAngles;\r\n    })(solvers = MakerJs.solvers || (MakerJs.solvers = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        var map = {};\r\n        map[MakerJs.pathType.Arc] = {};\r\n        map[MakerJs.pathType.Circle] = {};\r\n        map[MakerJs.pathType.Line] = {};\r\n        map[MakerJs.pathType.Arc][MakerJs.pathType.Arc] = function (arc1, arc2, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([arc1, arc2], options, swapOffsets, function () {\r\n                var angles = circleToCircle(arc1, arc2, options);\r\n                if (angles) {\r\n                    var arc1Angles = getAnglesWithinArc(angles[0], arc1, options);\r\n                    var arc2Angles = getAnglesWithinArc(angles[1], arc2, options);\r\n                    if (arc1Angles && arc2Angles) {\r\n                        //must correspond to the same angle indexes\r\n                        if (arc1Angles.length === 1 || arc2Angles.length === 1) {\r\n                            for (var i1 = 0; i1 < arc1Angles.length; i1++) {\r\n                                for (var i2 = 0; i2 < arc2Angles.length; i2++) {\r\n                                    var p1 = MakerJs.point.fromAngleOnCircle(arc1Angles[i1], arc1);\r\n                                    var p2 = MakerJs.point.fromAngleOnCircle(arc2Angles[i2], arc2);\r\n                                    //if they do not correspond then they don't intersect\r\n                                    if (MakerJs.measure.isPointEqual(p1, p2, .0001)) {\r\n                                        result = {\r\n                                            intersectionPoints: [p1],\r\n                                            path1Angles: [arc1Angles[i1]],\r\n                                            path2Angles: [arc2Angles[i2]]\r\n                                        };\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            result = {\r\n                                intersectionPoints: pointsFromAnglesOnCircle(arc1Angles, arc1),\r\n                                path1Angles: arc1Angles,\r\n                                path2Angles: arc2Angles\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (options.out_AreOverlapped) {\r\n                        //overlapped for circle, reset and see if arcs actually overlap.\r\n                        options.out_AreOverlapped = MakerJs.measure.isArcOverlapping(arc1, arc2, options.excludeTangents);\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Arc][MakerJs.pathType.Circle] = function (arc, circle, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([arc, circle], options, swapOffsets, function () {\r\n                var angles = circleToCircle(arc, circle, options);\r\n                if (angles) {\r\n                    var arcAngles = getAnglesWithinArc(angles[0], arc, options);\r\n                    if (arcAngles) {\r\n                        var circleAngles;\r\n                        //if both points are on arc, use both on circle\r\n                        if (arcAngles.length == 2) {\r\n                            circleAngles = angles[1];\r\n                        }\r\n                        else {\r\n                            //use the corresponding point on circle \r\n                            var index = findCorrespondingAngleIndex(angles[0], arcAngles[0]);\r\n                            circleAngles = [angles[1][index]];\r\n                        }\r\n                        result = {\r\n                            intersectionPoints: pointsFromAnglesOnCircle(arcAngles, arc),\r\n                            path1Angles: arcAngles,\r\n                            path2Angles: circleAngles\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Arc][MakerJs.pathType.Line] = function (arc, line, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([arc, line], options, swapOffsets, function () {\r\n                var angles = lineToCircle(line, arc, options);\r\n                if (angles) {\r\n                    var arcAngles = getAnglesWithinArc(angles, arc, options);\r\n                    if (arcAngles) {\r\n                        result = {\r\n                            intersectionPoints: pointsFromAnglesOnCircle(arcAngles, arc),\r\n                            path1Angles: arcAngles\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Circle][MakerJs.pathType.Arc] = function (circle, arc, options) {\r\n            var result = map[MakerJs.pathType.Arc][MakerJs.pathType.Circle](arc, circle, options, true);\r\n            if (result) {\r\n                return swapAngles(result);\r\n            }\r\n            return null;\r\n        };\r\n        map[MakerJs.pathType.Circle][MakerJs.pathType.Circle] = function (circle1, circle2, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([circle1, circle2], options, swapOffsets, function () {\r\n                var angles = circleToCircle(circle1, circle2, options);\r\n                if (angles) {\r\n                    result = {\r\n                        intersectionPoints: pointsFromAnglesOnCircle(angles[0], circle1),\r\n                        path1Angles: angles[0],\r\n                        path2Angles: angles[1]\r\n                    };\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Circle][MakerJs.pathType.Line] = function (circle, line, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([circle, line], options, swapOffsets, function () {\r\n                var angles = lineToCircle(line, circle, options);\r\n                if (angles) {\r\n                    result = {\r\n                        intersectionPoints: pointsFromAnglesOnCircle(angles, circle),\r\n                        path1Angles: angles\r\n                    };\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Line][MakerJs.pathType.Arc] = function (line, arc, options) {\r\n            var result = map[MakerJs.pathType.Arc][MakerJs.pathType.Line](arc, line, options, true);\r\n            if (result) {\r\n                return swapAngles(result);\r\n            }\r\n            return null;\r\n        };\r\n        map[MakerJs.pathType.Line][MakerJs.pathType.Circle] = function (line, circle, options) {\r\n            var result = map[MakerJs.pathType.Circle][MakerJs.pathType.Line](circle, line, options, true);\r\n            if (result) {\r\n                return swapAngles(result);\r\n            }\r\n            return null;\r\n        };\r\n        map[MakerJs.pathType.Line][MakerJs.pathType.Line] = function (line1, line2, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([line1, line2], options, swapOffsets, function () {\r\n                var intersectionPoint = MakerJs.point.fromSlopeIntersection(line1, line2, options);\r\n                if (intersectionPoint) {\r\n                    //we have the point of intersection of endless lines, now check to see if the point is between both segemnts\r\n                    if (MakerJs.measure.isBetweenPoints(intersectionPoint, line1, options.excludeTangents) && MakerJs.measure.isBetweenPoints(intersectionPoint, line2, options.excludeTangents)) {\r\n                        result = {\r\n                            intersectionPoints: [intersectionPoint]\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function moveTemp(pathsToOffset, options, swapOffsets, task) {\r\n            var offsets = swapOffsets ? [options.path2Offset, options.path1Offset] : [options.path1Offset, options.path2Offset];\r\n            path.moveTemporary(pathsToOffset, offsets, task);\r\n        }\r\n        ;\r\n        /**\r\n         * @private\r\n         */\r\n        function swapAngles(result) {\r\n            var temp = result.path1Angles;\r\n            if (result.path2Angles) {\r\n                result.path1Angles = result.path2Angles;\r\n            }\r\n            else {\r\n                delete result.path1Angles;\r\n            }\r\n            if (temp) {\r\n                result.path2Angles = temp;\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Find the point(s) where 2 paths intersect.\r\n         *\r\n         * @param path1 First path to find intersection.\r\n         * @param path2 Second path to find intersection.\r\n         * @param options Optional IPathIntersectionOptions.\r\n         * @returns IPathIntersection object, with points(s) of intersection (and angles, when a path is an arc or circle); or null if the paths did not intersect.\r\n         */\r\n        function intersection(path1, path2, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (path1 && path2) {\r\n                var fn = map[path1.type][path2.type];\r\n                if (fn) {\r\n                    return fn(path1, path2, options);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path.intersection = intersection;\r\n        /**\r\n         * @private\r\n         */\r\n        function findCorrespondingAngleIndex(circleAngles, arcAngle) {\r\n            for (var i = 2; i--;) {\r\n                if (circleAngles[i] === arcAngle)\r\n                    return i;\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function pointsFromAnglesOnCircle(anglesInDegrees, circle) {\r\n            var result = [];\r\n            for (var i = 0; i < anglesInDegrees.length; i++) {\r\n                result.push(MakerJs.point.fromAngleOnCircle(anglesInDegrees[i], circle));\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getAnglesWithinArc(angles, arc, options) {\r\n            if (!angles)\r\n                return null;\r\n            var anglesWithinArc = [];\r\n            for (var i = 0; i < angles.length; i++) {\r\n                if (MakerJs.measure.isBetweenArcAngles(angles[i], arc, options.excludeTangents)) {\r\n                    anglesWithinArc.push(angles[i]);\r\n                }\r\n            }\r\n            if (anglesWithinArc.length == 0)\r\n                return null;\r\n            return anglesWithinArc;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function lineToCircle(line, circle, options) {\r\n            var radius = MakerJs.round(circle.radius);\r\n            //no-op for degenerate circle\r\n            if (circle.radius <= 0) {\r\n                return null;\r\n            }\r\n            //clone the line\r\n            var clonedLine = new MakerJs.paths.Line(MakerJs.point.subtract(line.origin, circle.origin), MakerJs.point.subtract(line.end, circle.origin));\r\n            //get angle of line\r\n            var lineAngleNormal = MakerJs.angle.ofLineInDegrees(line);\r\n            //use the positive horizontal angle\r\n            var lineAngle = (lineAngleNormal >= 180) ? lineAngleNormal - 360 : lineAngleNormal;\r\n            //rotate the line to horizontal\r\n            path.rotate(clonedLine, -lineAngle, MakerJs.point.zero());\r\n            //remember how to undo the rotation we just did\r\n            function unRotate(resultAngle) {\r\n                var unrotated = resultAngle + lineAngle;\r\n                return MakerJs.round(MakerJs.angle.noRevolutions(unrotated));\r\n            }\r\n            //line is horizontal, get the y value from any point\r\n            var lineY = MakerJs.round(clonedLine.origin[1]);\r\n            var lineYabs = Math.abs(lineY);\r\n            //if y is greater than radius, there is no intersection\r\n            if (lineYabs > radius) {\r\n                return null;\r\n            }\r\n            var anglesOfIntersection = [];\r\n            //if horizontal Y is the same as the radius, we know it's 90 degrees\r\n            if (lineYabs == radius) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                anglesOfIntersection.push(unRotate(lineY > 0 ? 90 : 270));\r\n            }\r\n            else {\r\n                function intersectionBetweenEndpoints(x, angleOfX) {\r\n                    if (MakerJs.measure.isBetween(MakerJs.round(x), MakerJs.round(clonedLine.origin[0]), MakerJs.round(clonedLine.end[0]), options.excludeTangents)) {\r\n                        anglesOfIntersection.push(unRotate(angleOfX));\r\n                    }\r\n                }\r\n                //find angle where line intersects\r\n                var intersectRadians = Math.asin(lineY / radius);\r\n                var intersectDegrees = MakerJs.angle.toDegrees(intersectRadians);\r\n                //line may intersect in 2 places\r\n                var intersectX = Math.cos(intersectRadians) * radius;\r\n                intersectionBetweenEndpoints(-intersectX, 180 - intersectDegrees);\r\n                intersectionBetweenEndpoints(intersectX, intersectDegrees);\r\n            }\r\n            if (anglesOfIntersection.length > 0) {\r\n                return anglesOfIntersection;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function circleToCircle(circle1, circle2, options) {\r\n            //no-op if either circle is degenerate\r\n            if (circle1.radius <= 0 || circle2.radius <= 0) {\r\n                return null;\r\n            }\r\n            //see if circles are the same\r\n            if (circle1.radius == circle2.radius && MakerJs.measure.isPointEqual(circle1.origin, circle2.origin, .0001)) {\r\n                options.out_AreOverlapped = true;\r\n                return null;\r\n            }\r\n            //get offset from origin\r\n            var offset = MakerJs.point.subtract(MakerJs.point.zero(), circle1.origin);\r\n            //clone circle1 and move to origin\r\n            var c1 = new MakerJs.paths.Circle(MakerJs.point.zero(), circle1.radius);\r\n            //clone circle2 and move relative to circle1\r\n            var c2 = new MakerJs.paths.Circle(MakerJs.point.subtract(circle2.origin, circle1.origin), circle2.radius);\r\n            //rotate circle2 to horizontal, c2 will be to the right of the origin.\r\n            var c2Angle = MakerJs.angle.ofPointInDegrees(MakerJs.point.zero(), c2.origin);\r\n            path.rotate(c2, -c2Angle, MakerJs.point.zero());\r\n            function unRotate(resultAngle) {\r\n                var unrotated = resultAngle + c2Angle;\r\n                return MakerJs.angle.noRevolutions(unrotated);\r\n            }\r\n            //get X of c2 origin\r\n            var x = c2.origin[0];\r\n            //see if circles are tangent interior on left side\r\n            if (MakerJs.round(c2.radius - x - c1.radius) == 0) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                return [[unRotate(180)], [unRotate(180)]];\r\n            }\r\n            //see if circles are tangent interior on right side\r\n            if (MakerJs.round(c2.radius + x - c1.radius) == 0) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                return [[unRotate(0)], [unRotate(0)]];\r\n            }\r\n            //see if circles are tangent exterior\r\n            if (MakerJs.round(x - c2.radius - c1.radius) == 0) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                return [[unRotate(0)], [unRotate(180)]];\r\n            }\r\n            //see if c2 is outside of c1\r\n            if (MakerJs.round(x - c2.radius) > c1.radius) {\r\n                return null;\r\n            }\r\n            //see if c2 is within c1\r\n            if (MakerJs.round(x + c2.radius) < c1.radius) {\r\n                return null;\r\n            }\r\n            //see if c1 is within c2\r\n            if (MakerJs.round(x - c2.radius) < -c1.radius) {\r\n                return null;\r\n            }\r\n            function bothAngles(oneAngle) {\r\n                return [unRotate(oneAngle), unRotate(MakerJs.angle.mirror(oneAngle, false, true))];\r\n            }\r\n            var c1IntersectionAngle = MakerJs.solvers.solveTriangleSSS(c2.radius, c1.radius, x);\r\n            var c2IntersectionAngle = MakerJs.solvers.solveTriangleSSS(c1.radius, x, c2.radius);\r\n            return [bothAngles(c1IntersectionAngle), bothAngles(180 - c2IntersectionAngle)];\r\n        }\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        var propertyNamesMap = {};\r\n        propertyNamesMap[MakerJs.pathType.Arc] = function (arc) {\r\n            return ['startAngle', 'endAngle'];\r\n        };\r\n        propertyNamesMap[MakerJs.pathType.Line] = function (line) {\r\n            return ['origin', 'end'];\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getPointProperties(pathToInspect) {\r\n            var points = MakerJs.point.fromPathEnds(pathToInspect);\r\n            if (points) {\r\n                function pointProperty(index) {\r\n                    return { point: points[index], propertyName: propertyNames[index] };\r\n                }\r\n                var propertyNames = null;\r\n                var fn = propertyNamesMap[pathToInspect.type];\r\n                if (fn) {\r\n                    propertyNames = fn(pathToInspect);\r\n                    return [pointProperty(0), pointProperty(1)];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getMatchingPointProperties(pathA, pathB, options) {\r\n            var pathAProperties = getPointProperties(pathA);\r\n            var pathBProperties = getPointProperties(pathB);\r\n            var result = null;\r\n            function makeMatch(pathContext, pointProperties, index) {\r\n                return {\r\n                    path: pathContext,\r\n                    isStart: index == 0,\r\n                    propertyName: pointProperties[index].propertyName,\r\n                    point: pointProperties[index].point,\r\n                    oppositePoint: pointProperties[1 - index].point\r\n                };\r\n            }\r\n            function check(iA, iB) {\r\n                if (MakerJs.measure.isPointEqual(pathAProperties[iA].point, pathBProperties[iB].point, .0001)) {\r\n                    result = [\r\n                        makeMatch(pathA, pathAProperties, iA),\r\n                        makeMatch(pathB, pathBProperties, iB)\r\n                    ];\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            check(0, 0) || check(0, 1) || check(1, 0) || check(1, 1);\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function populateShardPointsFromReferenceCircle(filletRadius, center, properties, options) {\r\n            var referenceCircle = new MakerJs.paths.Circle(center, filletRadius);\r\n            //get reference circle intersection points\r\n            for (var i = 0; i < 2; i++) {\r\n                var circleIntersection = path.intersection(referenceCircle, properties[i].path);\r\n                if (!circleIntersection) {\r\n                    return false;\r\n                }\r\n                properties[i].shardPoint = circleIntersection.intersectionPoints[0];\r\n                if (MakerJs.measure.isPointEqual(properties[i].point, circleIntersection.intersectionPoints[0], .0001)) {\r\n                    if (circleIntersection.intersectionPoints.length > 1) {\r\n                        properties[i].shardPoint = circleIntersection.intersectionPoints[1];\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneAndBreakPath(pathToShard, shardPoint) {\r\n            var shardStart = path.clone(pathToShard);\r\n            var shardEnd = path.breakAtPoint(shardStart, shardPoint);\r\n            return [shardStart, shardEnd];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var guidePathMap = {};\r\n        guidePathMap[MakerJs.pathType.Arc] = function (arc, filletRadius, nearPoint, shardPoint, isStart) {\r\n            var guideRadius = arc.radius;\r\n            //see if the guideline should be external or internal to the context arc.\r\n            var guideArcShard = cloneAndBreakPath(arc, shardPoint)[isStart ? 0 : 1];\r\n            if (guideArcShard) {\r\n                if (MakerJs.measure.isArcConcaveTowardsPoint(guideArcShard, nearPoint)) {\r\n                    guideRadius -= filletRadius;\r\n                }\r\n                else {\r\n                    guideRadius += filletRadius;\r\n                }\r\n                if (MakerJs.round(guideRadius) <= 0)\r\n                    return null;\r\n                return new MakerJs.paths.Arc(arc.origin, guideRadius, arc.startAngle, arc.endAngle);\r\n            }\r\n            return null;\r\n        };\r\n        guidePathMap[MakerJs.pathType.Line] = function (line, filletRadius, nearPoint, shardPoint, isStart) {\r\n            return new MakerJs.paths.Parallel(line, filletRadius, nearPoint);\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getGuidePath(context, filletRadius, nearPoint) {\r\n            var result = null;\r\n            var fn = guidePathMap[context.path.type];\r\n            if (fn) {\r\n                result = fn(context.path, filletRadius, nearPoint, context.shardPoint, context.isStart);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var filletResultMap = {};\r\n        filletResultMap[MakerJs.pathType.Arc] = function (arc, propertyName, filletRadius, filletCenter) {\r\n            var guideLine = new MakerJs.paths.Line(arc.origin, filletCenter);\r\n            var guideLineAngle = MakerJs.angle.ofLineInDegrees(guideLine);\r\n            var filletAngle = guideLineAngle;\r\n            //the context is an arc and the fillet is an arc so they will be tangent. If the fillet is external to the arc then the tangent is opposite.\r\n            if (!MakerJs.measure.isArcConcaveTowardsPoint(arc, filletCenter)) {\r\n                filletAngle += 180;\r\n            }\r\n            return {\r\n                filletAngle: MakerJs.angle.noRevolutions(filletAngle),\r\n                clipPath: function () {\r\n                    arc[propertyName] = guideLineAngle;\r\n                }\r\n            };\r\n        };\r\n        filletResultMap[MakerJs.pathType.Line] = function (line, propertyName, filletRadius, filletCenter) {\r\n            //make a small vertical line\r\n            var guideLine = new MakerJs.paths.Line([0, 0], [0, 1]);\r\n            //rotate this vertical line the same angle as the line context. It will be perpendicular.\r\n            var lineAngle = MakerJs.angle.ofLineInDegrees(line);\r\n            path.rotate(guideLine, lineAngle, [0, 0]);\r\n            path.moveRelative(guideLine, filletCenter);\r\n            //get the intersection point of the slopes of the context line and the perpendicular line. This is where the fillet meets the line.\r\n            var intersectionPoint = MakerJs.point.fromSlopeIntersection(line, guideLine);\r\n            if (intersectionPoint) {\r\n                return {\r\n                    filletAngle: MakerJs.angle.ofPointInDegrees(filletCenter, intersectionPoint),\r\n                    clipPath: function () {\r\n                        line[propertyName] = intersectionPoint;\r\n                    }\r\n                };\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getFilletResult(context, filletRadius, filletCenter) {\r\n            var result = null;\r\n            var fn = filletResultMap[context.path.type];\r\n            if (fn) {\r\n                result = fn(context.path, context.propertyName, filletRadius, filletCenter);\r\n            }\r\n            if (!testFilletResult(context, result)) {\r\n                result = null;\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getDogboneResult(context, filletCenter) {\r\n            var result = {\r\n                filletAngle: MakerJs.angle.ofPointInDegrees(filletCenter, context.shardPoint),\r\n                clipPath: function () {\r\n                    context.path[context.propertyName] = context.shardPoint;\r\n                }\r\n            };\r\n            if (!testFilletResult(context, result)) {\r\n                result = null;\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function testFilletResult(context, result) {\r\n            var test = false;\r\n            if (result) {\r\n                //temporarily clip the path.\r\n                var originalValue = context.path[context.propertyName];\r\n                result.clipPath();\r\n                //don't allow a fillet which effectivly eliminates the path.\r\n                if (MakerJs.measure.pathLength(context.path) > 0) {\r\n                    test = true;\r\n                }\r\n                //revert the clipping we just did.\r\n                context.path[context.propertyName] = originalValue;\r\n            }\r\n            return test;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getLineRatio(lines) {\r\n            var totalLength = 0;\r\n            var lengths = [];\r\n            for (var i = 0; i < lines.length; i++) {\r\n                var length = MakerJs.measure.pathLength(lines[i]);\r\n                lengths.push(length);\r\n                totalLength += length;\r\n            }\r\n            return lengths[0] / totalLength;\r\n        }\r\n        /**\r\n         * Adds a round corner to the outside angle between 2 lines. The lines must meet at one point.\r\n         *\r\n         * @param lineA First line to fillet, which will be modified to fit the fillet.\r\n         * @param lineB Second line to fillet, which will be modified to fit the fillet.\r\n         * @returns Arc path object of the new fillet.\r\n         */\r\n        function dogbone(lineA, lineB, filletRadius, options) {\r\n            //TODO: allow arcs in dogbone\r\n            if (MakerJs.isPathLine(lineA) && MakerJs.isPathLine(lineB) && filletRadius && filletRadius > 0) {\r\n                var opts = {\r\n                    pointMatchingDistance: .005\r\n                };\r\n                MakerJs.extendObject(opts, options);\r\n                //first find the common point\r\n                var commonProperty = getMatchingPointProperties(lineA, lineB, options);\r\n                if (commonProperty) {\r\n                    //get the ratio comparison of the two lines\r\n                    var ratio = getLineRatio([lineA, lineB]);\r\n                    //draw a line between the two endpoints, and get the bisection point at the ratio\r\n                    var span = new MakerJs.paths.Line(commonProperty[0].oppositePoint, commonProperty[1].oppositePoint);\r\n                    var midRatioPoint = MakerJs.point.middle(span, ratio);\r\n                    //use the bisection theorem to get the angle bisecting the lines\r\n                    var bisectionAngle = MakerJs.angle.ofPointInDegrees(commonProperty[0].point, midRatioPoint);\r\n                    var center = MakerJs.point.add(commonProperty[0].point, MakerJs.point.fromPolar(MakerJs.angle.toRadians(bisectionAngle), filletRadius));\r\n                    if (!populateShardPointsFromReferenceCircle(filletRadius, center, commonProperty, opts)) {\r\n                        return null;\r\n                    }\r\n                    //get the angles of the fillet and a function which clips the path to the fillet.\r\n                    var results = [];\r\n                    for (var i = 0; i < 2; i++) {\r\n                        var result = getDogboneResult(commonProperty[i], center);\r\n                        if (!result) {\r\n                            return null;\r\n                        }\r\n                        results.push(result);\r\n                    }\r\n                    var filletArc = new MakerJs.paths.Arc(center, filletRadius, results[0].filletAngle, results[1].filletAngle);\r\n                    //make sure midpoint of fillet is outside of the angle\r\n                    if (MakerJs.round(MakerJs.angle.noRevolutions(MakerJs.angle.ofArcMiddle(filletArc))) == MakerJs.round(bisectionAngle)) {\r\n                        filletArc.startAngle = results[1].filletAngle;\r\n                        filletArc.endAngle = results[0].filletAngle;\r\n                    }\r\n                    //clip the paths and return the fillet arc.\r\n                    results[0].clipPath();\r\n                    results[1].clipPath();\r\n                    return filletArc;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path.dogbone = dogbone;\r\n        /**\r\n         * Adds a round corner to the inside angle between 2 paths. The paths must meet at one point.\r\n         *\r\n         * @param pathA First path to fillet, which will be modified to fit the fillet.\r\n         * @param pathB Second path to fillet, which will be modified to fit the fillet.\r\n         * @param filletRadius Radius of the fillet.\r\n         * @param options Optional IPointMatchOptions object to specify pointMatchingDistance.\r\n         * @returns Arc path object of the new fillet.\r\n         */\r\n        function fillet(pathA, pathB, filletRadius, options) {\r\n            if (pathA && pathB && filletRadius && filletRadius > 0) {\r\n                var opts = {\r\n                    pointMatchingDistance: .005\r\n                };\r\n                MakerJs.extendObject(opts, options);\r\n                //first find the common point\r\n                var commonProperty = getMatchingPointProperties(pathA, pathB, options);\r\n                if (commonProperty) {\r\n                    //since arcs can curl beyond, we need a local reference point. \r\n                    //An intersection with a circle of the same radius as the desired fillet should suffice.\r\n                    if (!populateShardPointsFromReferenceCircle(filletRadius, commonProperty[0].point, commonProperty, opts)) {\r\n                        return null;\r\n                    }\r\n                    //get \"parallel\" guidelines\r\n                    var guidePaths = [];\r\n                    for (var i = 0; i < 2; i++) {\r\n                        var otherPathShardPoint = commonProperty[1 - i].shardPoint;\r\n                        if (!otherPathShardPoint) {\r\n                            return null;\r\n                        }\r\n                        var guidePath = getGuidePath(commonProperty[i], filletRadius, otherPathShardPoint);\r\n                        guidePaths.push(guidePath);\r\n                    }\r\n                    //the center of the fillet is the point where the guidelines intersect.\r\n                    var intersectionPoint = path.intersection(guidePaths[0], guidePaths[1]);\r\n                    if (intersectionPoint) {\r\n                        var center;\r\n                        //if guidelines intersect in more than one place, choose the closest one.\r\n                        if (intersectionPoint.intersectionPoints.length == 1) {\r\n                            center = intersectionPoint.intersectionPoints[0];\r\n                        }\r\n                        else {\r\n                            center = MakerJs.point.closest(commonProperty[0].point, intersectionPoint.intersectionPoints);\r\n                        }\r\n                        //get the angles of the fillet and a function which clips the path to the fillet.\r\n                        var results = [];\r\n                        for (var i = 0; i < 2; i++) {\r\n                            var result = getFilletResult(commonProperty[i], filletRadius, center);\r\n                            if (!result) {\r\n                                return null;\r\n                            }\r\n                            results.push(result);\r\n                        }\r\n                        //the two paths may actually be on the same line\r\n                        if (MakerJs.round(results[0].filletAngle - results[1].filletAngle) == 0)\r\n                            return null;\r\n                        var filletArc = new MakerJs.paths.Arc(center, filletRadius, results[0].filletAngle, results[1].filletAngle);\r\n                        var filletSpan = MakerJs.angle.ofArcSpan(filletArc);\r\n                        //the algorithm is only valid for fillet less than 180 degrees\r\n                        if (filletSpan == 180) {\r\n                            return null;\r\n                        }\r\n                        if (filletSpan > 180) {\r\n                            //swap to make smallest angle\r\n                            filletArc.startAngle = results[1].filletAngle;\r\n                            filletArc.endAngle = results[0].filletAngle;\r\n                        }\r\n                        //clip the paths and return the fillet arc.\r\n                        results[0].clipPath();\r\n                        results[1].clipPath();\r\n                        return filletArc;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path.fillet = fillet;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var chain;\r\n    (function (chain) {\r\n        function dogbone(chainToFillet, filletSpec) {\r\n            return chainFillet(false, chainToFillet, filletSpec);\r\n        }\r\n        chain.dogbone = dogbone;\r\n        function fillet(chainToFillet, filletSpec) {\r\n            return chainFillet(true, chainToFillet, filletSpec);\r\n        }\r\n        chain.fillet = fillet;\r\n        function chainFillet(traditional, chainToFillet, filletSpec) {\r\n            var result = { paths: {} };\r\n            var added = 0;\r\n            var links = chainToFillet.links;\r\n            function add(i1, i2) {\r\n                var p1 = links[i1].walkedPath, p2 = links[i2].walkedPath;\r\n                if (p1.modelContext === p2.modelContext && p1.modelContext.type == MakerJs.models.BezierCurve.typeName)\r\n                    return;\r\n                MakerJs.path.moveTemporary([p1.pathContext, p2.pathContext], [p1.offset, p2.offset], function () {\r\n                    var filletRadius;\r\n                    if (MakerJs.isObject(filletSpec)) {\r\n                        var a = MakerJs.angle.ofChainLinkJoint(links[i1], links[i2]);\r\n                        if (MakerJs.round(a) === 0)\r\n                            return;\r\n                        filletRadius = (a > 0) ? filletSpec.left : filletSpec.right;\r\n                    }\r\n                    else {\r\n                        filletRadius = filletSpec;\r\n                    }\r\n                    if (!filletRadius || filletRadius < 0)\r\n                        return;\r\n                    var filletArc;\r\n                    if (traditional) {\r\n                        filletArc = MakerJs.path.fillet(p1.pathContext, p2.pathContext, filletRadius);\r\n                    }\r\n                    else {\r\n                        filletArc = MakerJs.path.dogbone(p1.pathContext, p2.pathContext, filletRadius);\r\n                    }\r\n                    if (filletArc) {\r\n                        result.paths['fillet' + added] = filletArc;\r\n                        added++;\r\n                    }\r\n                });\r\n            }\r\n            for (var i = 1; i < links.length; i++) {\r\n                add(i - 1, i);\r\n            }\r\n            if (chainToFillet.endless) {\r\n                add(i - 1, 0);\r\n            }\r\n            if (!added)\r\n                return null;\r\n            return result;\r\n        }\r\n    })(chain = MakerJs.chain || (MakerJs.chain = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var kit;\r\n    (function (kit) {\r\n        //construct a model\r\n        /**\r\n         * Helper function to use the JavaScript \"apply\" function in conjunction with the \"new\" keyword.\r\n         *\r\n         * @param ctor The constructor for the class which is an IKit.\r\n         * @param args The array of parameters passed to the constructor.\r\n         * @returns A new instance of the class, which implements the IModel interface.\r\n         */\r\n        function construct(ctor, args) {\r\n            function F() {\r\n                return ctor.apply(this, args);\r\n            }\r\n            F.prototype = ctor.prototype;\r\n            return new F();\r\n        }\r\n        kit.construct = construct;\r\n        /**\r\n         * Extract just the initial sample values from a kit.\r\n         *\r\n         * @param ctor The constructor for the class which is an IKit.\r\n         * @returns Array of the inital sample values provided in the metaParameters array.\r\n         */\r\n        function getParameterValues(ctor) {\r\n            var parameters = [];\r\n            var metaParams = ctor.metaParameters;\r\n            if (metaParams) {\r\n                for (var i = 0; i < metaParams.length; i++) {\r\n                    var value = metaParams[i].value;\r\n                    if (Array.isArray(value)) {\r\n                        value = value[0];\r\n                    }\r\n                    parameters.push(value);\r\n                }\r\n            }\r\n            return parameters;\r\n        }\r\n        kit.getParameterValues = getParameterValues;\r\n    })(kit = MakerJs.kit || (MakerJs.kit = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getOpposedLink(linkedPaths, pathContext) {\r\n            if (linkedPaths[0].walkedPath.pathContext === pathContext) {\r\n                return linkedPaths[1];\r\n            }\r\n            return linkedPaths[0];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function followLinks(pointGraph, chainFound, chainNotFound) {\r\n            function followLink(currLink, chain, firstLink) {\r\n                while (currLink) {\r\n                    chain.links.push(currLink);\r\n                    chain.pathLength += currLink.pathLength;\r\n                    var next = currLink.reversed ? 0 : 1;\r\n                    var nextPoint = currLink.endPoints[next];\r\n                    var nextEl = pointGraph.getElementAtPoint(nextPoint);\r\n                    if (!nextEl || nextEl.valueIds.length === 0) {\r\n                        break;\r\n                    }\r\n                    var items = nextEl.valueIds.map(function (valueIndex) { return pointGraph.values[valueIndex]; });\r\n                    var nextLink = getOpposedLink(items, currLink.walkedPath.pathContext);\r\n                    //remove the first 2 items, which should be currlink and nextlink\r\n                    nextEl.valueIds.splice(0, 2);\r\n                    if (!nextLink) {\r\n                        break;\r\n                    }\r\n                    if (nextLink.walkedPath.pathContext === firstLink.walkedPath.pathContext) {\r\n                        if (chain.links.length > 1) {\r\n                            chain.endless = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                    currLink = nextLink;\r\n                }\r\n            }\r\n            pointGraph.forEachPoint(function (p, values, pointId, el) {\r\n                if (el.valueIds.length > 0) {\r\n                    var chain = {\r\n                        links: [],\r\n                        pathLength: 0\r\n                    };\r\n                    followLink(values[0], chain, values[0]);\r\n                    if (chain.endless) {\r\n                        chainFound(chain, false);\r\n                    }\r\n                    else {\r\n                        //need to go in reverse\r\n                        chain.links.reverse();\r\n                        var firstLink = chain.links[0];\r\n                        chain.links.map(function (link) { link.reversed = !link.reversed; });\r\n                        //remove the last link, it will be added in the call\r\n                        chain.pathLength -= chain.links[chain.links.length - 1].pathLength;\r\n                        var currLink = chain.links.pop();\r\n                        followLink(currLink, chain, firstLink);\r\n                        if (chain.links.length > 1) {\r\n                            chainFound(chain, true);\r\n                        }\r\n                        else {\r\n                            chainNotFound(chain.links[0].walkedPath);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * Find a single chain within a model, across all layers. Shorthand of findChains; useful when you know there is only one chain to find in your model.\r\n         *\r\n         * @param modelContext The model to search for a chain.\r\n         * @returns A chain object or null if chains were not found.\r\n         */\r\n        function findSingleChain(modelContext) {\r\n            var singleChain = null;\r\n            findChains(modelContext, function (chains, loose, layer) {\r\n                singleChain = chains[0];\r\n            }, { byLayers: false });\r\n            return singleChain;\r\n        }\r\n        model.findSingleChain = findSingleChain;\r\n        /**\r\n         * @private\r\n         */\r\n        function linkEndpoint(link, beginning) {\r\n            var index = (beginning === link.reversed) ? 1 : 0;\r\n            return link.endPoints[index];\r\n        }\r\n        function findChains(modelContext) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            var options;\r\n            var callback;\r\n            switch (args.length) {\r\n                case 1:\r\n                    if (typeof args[0] === 'function') {\r\n                        callback = args[0];\r\n                    }\r\n                    else {\r\n                        options = args[0];\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    callback = args[0];\r\n                    options = args[1];\r\n                    break;\r\n            }\r\n            var opts = {\r\n                pointMatchingDistance: .005\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            var pointGraphsByLayer = {};\r\n            var chainsByLayer = {};\r\n            var ignored = {};\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    var layer = opts.byLayers ? walkedPath.layer : '';\r\n                    if (!pointGraphsByLayer[layer]) {\r\n                        pointGraphsByLayer[layer] = new MakerJs.PointGraph();\r\n                    }\r\n                    var pointGraph = pointGraphsByLayer[layer];\r\n                    var pathLength = MakerJs.measure.pathLength(walkedPath.pathContext);\r\n                    //circles are loops by nature\r\n                    if (walkedPath.pathContext.type === MakerJs.pathType.Circle ||\r\n                        (walkedPath.pathContext.type === MakerJs.pathType.Arc && MakerJs.round(MakerJs.angle.ofArcSpan(walkedPath.pathContext) - 360) === 0) ||\r\n                        (walkedPath.pathContext.type === MakerJs.pathType.BezierSeed && MakerJs.measure.isPointEqual(walkedPath.pathContext.origin, walkedPath.pathContext.end, opts.pointMatchingDistance))) {\r\n                        var chain = {\r\n                            links: [{\r\n                                    walkedPath: walkedPath,\r\n                                    reversed: null,\r\n                                    endPoints: null,\r\n                                    pathLength: pathLength\r\n                                }],\r\n                            endless: true,\r\n                            pathLength: pathLength\r\n                        };\r\n                        //store circles so that layers fire grouped\r\n                        if (!chainsByLayer[layer]) {\r\n                            chainsByLayer[layer] = [];\r\n                        }\r\n                        chainsByLayer[layer].push(chain);\r\n                    }\r\n                    else {\r\n                        //don't add lines which are 5x shorter than the tolerance\r\n                        if (pathLength < opts.pointMatchingDistance / 5) {\r\n                            if (!ignored[layer]) {\r\n                                ignored[layer] = [];\r\n                            }\r\n                            ignored[layer].push(walkedPath);\r\n                            return;\r\n                        }\r\n                        //gather both endpoints from all non-circle segments\r\n                        var endPoints = MakerJs.point.fromPathEnds(walkedPath.pathContext, walkedPath.offset);\r\n                        for (var i = 0; i < 2; i++) {\r\n                            var link = {\r\n                                walkedPath: walkedPath,\r\n                                endPoints: endPoints,\r\n                                reversed: i != 0,\r\n                                pathLength: pathLength\r\n                            };\r\n                            var valueId = pointGraph.insertValue(link);\r\n                            pointGraph.insertValueIdAtPoint(valueId, endPoints[i]);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            if (opts.shallow) {\r\n                walkOptions.beforeChildWalk = function () { return false; };\r\n            }\r\n            var beziers;\r\n            if (opts.unifyBeziers) {\r\n                beziers = getBezierModels(modelContext);\r\n                swapBezierPathsWithSeeds(beziers, true);\r\n            }\r\n            model.walk(modelContext, walkOptions);\r\n            var _loop_3 = function (layer_2) {\r\n                var pointGraph = pointGraphsByLayer[layer_2];\r\n                pointGraph.mergeNearestSinglePoints(opts.pointMatchingDistance);\r\n                loose = [];\r\n                if (!chainsByLayer[layer_2]) {\r\n                    chainsByLayer[layer_2] = [];\r\n                }\r\n                //follow paths to find endless chains\r\n                followLinks(pointGraph, function (chain, checkEndless) {\r\n                    if (checkEndless) {\r\n                        chain.endless = MakerJs.measure.isPointEqual(linkEndpoint(chain.links[0], true), linkEndpoint(chain.links[chain.links.length - 1], false), opts.pointMatchingDistance);\r\n                    }\r\n                    else {\r\n                        chain.endless = !!chain.endless;\r\n                    }\r\n                    chainsByLayer[layer_2].push(chain);\r\n                }, function (walkedPath) {\r\n                    loose.push(walkedPath);\r\n                });\r\n                //sort to return largest chains first\r\n                chainsByLayer[layer_2].sort(function (a, b) { return b.pathLength - a.pathLength; });\r\n                if (opts.contain) {\r\n                    containChainsOptions = MakerJs.isObject(opts.contain) ? opts.contain : { alternateDirection: false };\r\n                    containedChains = getContainment(chainsByLayer[layer_2], containChainsOptions);\r\n                    chainsByLayer[layer_2] = containedChains;\r\n                }\r\n                if (callback)\r\n                    callback(chainsByLayer[layer_2], loose, layer_2, ignored[layer_2]);\r\n            };\r\n            var loose, containChainsOptions, containedChains;\r\n            for (var layer_2 in pointGraphsByLayer) {\r\n                _loop_3(layer_2);\r\n            }\r\n            if (beziers) {\r\n                swapBezierPathsWithSeeds(beziers, false);\r\n            }\r\n            if (opts.byLayers) {\r\n                return chainsByLayer;\r\n            }\r\n            else {\r\n                return chainsByLayer[''];\r\n            }\r\n        }\r\n        model.findChains = findChains;\r\n        /**\r\n         * @private\r\n         */\r\n        function getContainment(allChains, opts) {\r\n            var chainsAsModels = allChains.map(function (c) { return MakerJs.chain.toNewModel(c); });\r\n            var parents = [];\r\n            //see which are inside of each other\r\n            allChains.forEach(function (chainContext, i1) {\r\n                if (!chainContext.endless)\r\n                    return;\r\n                var wp = chainContext.links[0].walkedPath;\r\n                var firstPath = MakerJs.path.clone(wp.pathContext, wp.offset);\r\n                allChains.forEach(function (otherChain, i2) {\r\n                    if (chainContext === otherChain)\r\n                        return;\r\n                    if (!otherChain.endless)\r\n                        return;\r\n                    if (MakerJs.measure.isPointInsideModel(MakerJs.point.middle(firstPath), chainsAsModels[i2])) {\r\n                        //since chains were sorted by pathLength, the smallest pathLength parent will be the parent if contained in multiple chains.\r\n                        parents[i1] = otherChain;\r\n                    }\r\n                });\r\n            });\r\n            //convert parent to children\r\n            var result = [];\r\n            allChains.forEach(function (chainContext, i) {\r\n                var parent = parents[i];\r\n                if (!parent) {\r\n                    result.push(chainContext);\r\n                }\r\n                else {\r\n                    if (!parent.contains) {\r\n                        parent.contains = [];\r\n                    }\r\n                    parent.contains.push(chainContext);\r\n                }\r\n            });\r\n            if (opts.alternateDirection) {\r\n                function alternate(chains, shouldBeClockwise) {\r\n                    chains.forEach(function (chainContext, i) {\r\n                        var isClockwise = MakerJs.measure.isChainClockwise(chainContext);\r\n                        if (isClockwise !== null) {\r\n                            if (!isClockwise && shouldBeClockwise || isClockwise && !shouldBeClockwise) {\r\n                                MakerJs.chain.reverse(chainContext);\r\n                            }\r\n                        }\r\n                        if (chainContext.contains) {\r\n                            alternate(chainContext.contains, !shouldBeClockwise);\r\n                        }\r\n                    });\r\n                }\r\n                alternate(result, true);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getBezierModels(modelContext) {\r\n            var beziers = [];\r\n            function checkIsBezier(wm) {\r\n                if (wm.childModel.type === MakerJs.models.BezierCurve.typeName) {\r\n                    beziers.push(wm);\r\n                }\r\n            }\r\n            var options = {\r\n                beforeChildWalk: function (walkedModel) {\r\n                    checkIsBezier(walkedModel);\r\n                    return true;\r\n                }\r\n            };\r\n            var rootModel = {\r\n                childId: '',\r\n                childModel: modelContext,\r\n                layer: modelContext.layer,\r\n                offset: modelContext.origin,\r\n                parentModel: null,\r\n                route: [],\r\n                routeKey: ''\r\n            };\r\n            checkIsBezier(rootModel);\r\n            model.walk(modelContext, options);\r\n            return beziers;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function swapBezierPathsWithSeeds(beziers, swap) {\r\n            var tempKey = 'tempPaths';\r\n            var tempLayerKey = 'tempLayer';\r\n            beziers.forEach(function (wm) {\r\n                var b = wm.childModel;\r\n                if (swap) {\r\n                    //set layer prior to looking for seeds by layer\r\n                    if (wm.layer != undefined && wm.layer !== '') {\r\n                        b[tempLayerKey] = b.layer;\r\n                        b.layer = wm.layer;\r\n                    }\r\n                    //use seeds as path, hide the arc paths from findChains()\r\n                    var bezierPartsByLayer = MakerJs.models.BezierCurve.getBezierSeeds(b, { byLayers: true });\r\n                    for (var layer in bezierPartsByLayer) {\r\n                        var bezierSeeds = bezierPartsByLayer[layer];\r\n                        if (bezierSeeds.length > 0) {\r\n                            b[tempKey] = b.paths;\r\n                            var newPaths = {};\r\n                            bezierSeeds.forEach(function (seed, i) {\r\n                                seed.layer = layer;\r\n                                newPaths['seed_' + i] = seed;\r\n                            });\r\n                            b.paths = newPaths;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    //revert the above\r\n                    if (tempKey in b) {\r\n                        b.paths = b[tempKey];\r\n                        delete b[tempKey];\r\n                    }\r\n                    if (tempLayerKey in b) {\r\n                        if (b[tempLayerKey] == undefined) {\r\n                            delete b.layer;\r\n                        }\r\n                        else {\r\n                            b.layer = b[tempLayerKey];\r\n                        }\r\n                        delete b[tempLayerKey];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var chain;\r\n    (function (chain) {\r\n        /**\r\n         * Shift the links of an endless chain.\r\n         *\r\n         * @param chainContext Chain to cycle through. Must be endless.\r\n         * @param amount Optional number of links to shift. May be negative to cycle backwards.\r\n         * @returns The chainContext for cascading.\r\n         */\r\n        function cycle(chainContext, amount) {\r\n            if (amount === void 0) { amount = 1; }\r\n            if (!chainContext.endless)\r\n                return;\r\n            var n = Math.abs(amount);\r\n            for (var i = 0; i < n; i++) {\r\n                if (amount < 0) {\r\n                    //remove from beginning, add to end\r\n                    chainContext.links.push(chainContext.links.shift());\r\n                }\r\n                else {\r\n                    //remove from end, add to beginning\r\n                    chainContext.links.unshift(chainContext.links.pop());\r\n                }\r\n            }\r\n            return chainContext;\r\n        }\r\n        chain.cycle = cycle;\r\n        /**\r\n         * Reverse the links of a chain.\r\n         *\r\n         * @param chainContext Chain to reverse.\r\n         * @returns The chainContext for cascading.\r\n         */\r\n        function reverse(chainContext) {\r\n            chainContext.links.reverse();\r\n            chainContext.links.forEach(function (link) { return link.reversed = !link.reversed; });\r\n            return chainContext;\r\n        }\r\n        chain.reverse = reverse;\r\n        /**\r\n         * Set the beginning of an endless chain to a known routeKey of a path.\r\n         *\r\n         * @param chainContext Chain to cycle through. Must be endless.\r\n         * @param routeKey RouteKey of the desired path to start the chain with.\r\n         * @returns The chainContext for cascading.\r\n         */\r\n        function startAt(chainContext, routeKey) {\r\n            if (!chainContext.endless)\r\n                return;\r\n            var index = -1;\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                if (chainContext.links[i].walkedPath.routeKey == routeKey) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (index > 0) {\r\n                cycle(chainContext, index);\r\n            }\r\n            return chainContext;\r\n        }\r\n        chain.startAt = startAt;\r\n        /**\r\n         * Convert a chain to a new model, independent of any model from where the chain was found.\r\n         *\r\n         * @param chainContext Chain to convert to a model.\r\n         * @param detachFromOldModel Flag to remove the chain's paths from their current parent model. If false, each path will be cloned. If true, the original path will be re-parented into the resulting new model. Default is false.\r\n         * @returns A new model containing paths from the chain.\r\n         */\r\n        function toNewModel(chainContext, detachFromOldModel) {\r\n            if (detachFromOldModel === void 0) { detachFromOldModel = false; }\r\n            var result = { paths: {} };\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var wp = chainContext.links[i].walkedPath;\r\n                if (wp.pathContext.type === MakerJs.pathType.BezierSeed) {\r\n                    if (detachFromOldModel) {\r\n                        delete wp.modelContext.paths[wp.pathId];\r\n                    }\r\n                    if (!result.models) {\r\n                        result.models = {};\r\n                    }\r\n                    var modelId = MakerJs.model.getSimilarModelId(result, wp.pathId);\r\n                    result.models[modelId] = MakerJs.model.moveRelative(new MakerJs.models.BezierCurve(wp.pathContext), wp.offset);\r\n                }\r\n                else {\r\n                    var newPath;\r\n                    if (detachFromOldModel) {\r\n                        newPath = wp.pathContext;\r\n                        delete wp.modelContext.paths[wp.pathId];\r\n                    }\r\n                    else {\r\n                        newPath = MakerJs.path.clone(wp.pathContext);\r\n                    }\r\n                    var pathId = MakerJs.model.getSimilarPathId(result, wp.pathId);\r\n                    result.paths[pathId] = MakerJs.path.moveRelative(newPath, wp.offset);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        chain.toNewModel = toNewModel;\r\n        /**\r\n         * @private\r\n         */\r\n        function removeDuplicateEnds(endless, points) {\r\n            if (!endless || points.length < 2)\r\n                return;\r\n            if (MakerJs.measure.isPointEqual(points[0], points[points.length - 1], .00001)) {\r\n                points.pop();\r\n            }\r\n        }\r\n        /**\r\n         * Get points along a chain of paths.\r\n         *\r\n         * @param chainContext Chain of paths to get points from.\r\n         * @param distance Numeric distance along the chain between points, or numeric array of distances along the chain between each point.\r\n         * @param maxPoints Maximum number of points to retrieve.\r\n         * @returns Array of points which are on the chain spread at a uniform interval.\r\n         */\r\n        function toPoints(chainContext, distanceOrDistances, maxPoints) {\r\n            var result = [];\r\n            var di = 0;\r\n            var t = 0;\r\n            var distanceArray;\r\n            if (Array.isArray(distanceOrDistances)) {\r\n                distanceArray = distanceOrDistances;\r\n            }\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var link = chainContext.links[i];\r\n                var wp = link.walkedPath;\r\n                var len = link.pathLength;\r\n                while (MakerJs.round(len - t) > 0) {\r\n                    var r = t / len;\r\n                    if (link.reversed) {\r\n                        r = 1 - r;\r\n                    }\r\n                    result.push(MakerJs.point.add(MakerJs.point.middle(wp.pathContext, r), wp.offset));\r\n                    if (maxPoints && result.length >= maxPoints)\r\n                        return result;\r\n                    var distance;\r\n                    if (distanceArray) {\r\n                        distance = distanceArray[di];\r\n                        di++;\r\n                        if (di > distanceArray.length) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                    else {\r\n                        distance = distanceOrDistances;\r\n                    }\r\n                    t += distance;\r\n                }\r\n                t -= len;\r\n            }\r\n            removeDuplicateEnds(chainContext.endless, result);\r\n            return result;\r\n        }\r\n        chain.toPoints = toPoints;\r\n        /**\r\n         * Get key points (a minimal a number of points) along a chain of paths.\r\n         *\r\n         * @param chainContext Chain of paths to get points from.\r\n         * @param maxArcFacet The maximum length between points on an arc or circle.\r\n         * @returns Array of points which are on the chain.\r\n         */\r\n        function toKeyPoints(chainContext, maxArcFacet) {\r\n            var result = [];\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var link = chainContext.links[i];\r\n                var wp = link.walkedPath;\r\n                var keyPoints = MakerJs.path.toKeyPoints(wp.pathContext, maxArcFacet);\r\n                if (keyPoints.length > 0) {\r\n                    if (link.reversed) {\r\n                        keyPoints.reverse();\r\n                    }\r\n                    if (i > 0) {\r\n                        keyPoints.shift();\r\n                    }\r\n                    var offsetPathPoints = keyPoints.map(function (p) { return MakerJs.point.add(p, wp.offset); });\r\n                    result.push.apply(result, offsetPathPoints);\r\n                }\r\n            }\r\n            removeDuplicateEnds(chainContext.endless, result);\r\n            return result;\r\n        }\r\n        chain.toKeyPoints = toKeyPoints;\r\n    })(chain = MakerJs.chain || (MakerJs.chain = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        var DeadEndFinder = /** @class */ (function () {\r\n            function DeadEndFinder(modelContext, options) {\r\n                this.modelContext = modelContext;\r\n                this.options = options;\r\n                this.pointMap = new MakerJs.PointGraph();\r\n                this.list = [];\r\n                this.removed = [];\r\n                this.ordinals = {};\r\n                this.load();\r\n            }\r\n            DeadEndFinder.prototype.load = function () {\r\n                var _this = this;\r\n                var walkOptions = {\r\n                    onPath: function (walkedPath) {\r\n                        var endPoints = MakerJs.point.fromPathEnds(walkedPath.pathContext, walkedPath.offset);\r\n                        if (!endPoints)\r\n                            return;\r\n                        var pathRef = walkedPath;\r\n                        pathRef.endPoints = endPoints;\r\n                        var valueId = _this.pointMap.insertValue(pathRef);\r\n                        for (var i = 2; i--;) {\r\n                            _this.pointMap.insertValueIdAtPoint(valueId, endPoints[i]);\r\n                        }\r\n                    }\r\n                };\r\n                model.walk(this.modelContext, walkOptions);\r\n                if (this.options.pointMatchingDistance) {\r\n                    this.pointMap.mergePoints(this.options.pointMatchingDistance);\r\n                }\r\n            };\r\n            DeadEndFinder.prototype.findDeadEnds = function () {\r\n                var _this = this;\r\n                var i = 0;\r\n                this.pointMap.forEachPoint(function (p, values, pointId, el) {\r\n                    _this.ordinals[pointId] = i++;\r\n                    _this.list.push(el);\r\n                });\r\n                i = 0;\r\n                var _loop_4 = function () {\r\n                    var el = this_2.list[i];\r\n                    if (el.valueIds.length === 1) {\r\n                        this_2.removePath(el, el.valueIds[0], i);\r\n                    }\r\n                    else if (this_2.options.keep && el.valueIds.length % 2) {\r\n                        el.valueIds.forEach(function (valueId) {\r\n                            var value = _this.pointMap.values[valueId];\r\n                            if (!_this.options.keep(value)) {\r\n                                _this.removePath(el, valueId, i);\r\n                            }\r\n                        });\r\n                    }\r\n                    i++;\r\n                };\r\n                var this_2 = this;\r\n                while (i < this.list.length) {\r\n                    _loop_4();\r\n                }\r\n                return this.removed;\r\n            };\r\n            DeadEndFinder.prototype.removePath = function (el, valueId, current) {\r\n                var value = this.pointMap.values[valueId];\r\n                var otherPointId = this.getOtherPointId(value.endPoints, el.pointId);\r\n                var otherElement = this.pointMap.index[otherPointId];\r\n                this.removed.push(value);\r\n                this.removeValue(el, valueId);\r\n                this.removeValue(otherElement, valueId);\r\n                if (otherElement.valueIds.length > 0) {\r\n                    this.appendQueue(otherElement, current);\r\n                }\r\n            };\r\n            DeadEndFinder.prototype.removeValue = function (el, valueId) {\r\n                var pos = el.valueIds.indexOf(valueId);\r\n                if (pos >= 0) {\r\n                    el.valueIds.splice(pos, 1);\r\n                }\r\n            };\r\n            DeadEndFinder.prototype.appendQueue = function (el, current) {\r\n                var otherOrdinal = this.ordinals[el.pointId];\r\n                if (otherOrdinal < current) {\r\n                    this.list[otherOrdinal] = null;\r\n                    this.list.push(el);\r\n                    this.ordinals[el.pointId] = this.list.length;\r\n                }\r\n            };\r\n            DeadEndFinder.prototype.getOtherPointId = function (endPoints, pointId) {\r\n                for (var i = 0; i < endPoints.length; i++) {\r\n                    var id = this.pointMap.getIdOfPoint(endPoints[i]);\r\n                    if (pointId !== id) {\r\n                        return id;\r\n                    }\r\n                }\r\n            };\r\n            return DeadEndFinder;\r\n        }());\r\n        /**\r\n         * Remove paths from a model which have endpoints that do not connect to other paths.\r\n         *\r\n         * @param modelContext The model to search for dead ends.\r\n         * @param pointMatchingDistance Optional max distance to consider two points as the same.\r\n         * @param keep Optional callback function (which should return a boolean) to decide if a dead end path should be kept instead.\r\n         * @param trackDeleted Optional callback function which will log discarded paths and the reason they were discarded.\r\n         * @returns The input model (for cascading).\r\n         */\r\n        function removeDeadEnds(modelContext, pointMatchingDistance, keep, trackDeleted) {\r\n            var options = {\r\n                pointMatchingDistance: pointMatchingDistance || .005,\r\n                keep: keep\r\n            };\r\n            var deadEndFinder = new DeadEndFinder(modelContext, options);\r\n            var removed = deadEndFinder.findDeadEnds();\r\n            //do not leave an empty model\r\n            if (removed.length < deadEndFinder.pointMap.values.length) {\r\n                removed.forEach(function (wp) {\r\n                    trackDeleted(wp, 'dead end');\r\n                    delete wp.modelContext.paths[wp.pathId];\r\n                });\r\n            }\r\n            return modelContext;\r\n        }\r\n        model.removeDeadEnds = removeDeadEnds;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Class for an XML tag.\r\n         * @private\r\n         */\r\n        var XmlTag = /** @class */ (function () {\r\n            /**\r\n             * @param name Name of the XML tag.\r\n             * @param attrs Optional attributes for the tag.\r\n             */\r\n            function XmlTag(name, attrs) {\r\n                this.name = name;\r\n                this.attrs = attrs;\r\n                /**\r\n                 * Text between the opening and closing tags.\r\n                 */\r\n                this.innerText = '';\r\n            }\r\n            /**\r\n             * Escapes certain characters within a string so that it can appear in a tag or its attribute.\r\n             *\r\n             * @returns Escaped string.\r\n             */\r\n            XmlTag.escapeString = function (value) {\r\n                var escape = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;'\r\n                };\r\n                for (var code in escape) {\r\n                    //.split then .join is a 'replace'\r\n                    value = value.split(code).join(escape[code]);\r\n                }\r\n                return value;\r\n            };\r\n            /**\r\n             * Get the opening tag.\r\n             *\r\n             * @param selfClose Flag to determine if opening tag should be self closing.\r\n             */\r\n            XmlTag.prototype.getOpeningTag = function (selfClose) {\r\n                var attrs = '';\r\n                function outputAttr(attrName, attrValue) {\r\n                    if (attrValue == null || typeof attrValue === 'undefined')\r\n                        return;\r\n                    if (Array.isArray(attrValue) || typeof attrValue === 'object') {\r\n                        attrValue = JSON.stringify(attrValue);\r\n                    }\r\n                    if (typeof attrValue === 'string') {\r\n                        attrValue = XmlTag.escapeString(attrValue);\r\n                    }\r\n                    attrs += ' ' + attrName + '=\"' + attrValue + '\"';\r\n                }\r\n                for (var name in this.attrs) {\r\n                    outputAttr(name, this.attrs[name]);\r\n                }\r\n                return '<' + this.name + attrs + (selfClose ? '/' : '') + '>';\r\n            };\r\n            /**\r\n             * Get the inner text.\r\n             */\r\n            XmlTag.prototype.getInnerText = function () {\r\n                if (this.innerTextEscaped) {\r\n                    return this.innerText;\r\n                }\r\n                else {\r\n                    return XmlTag.escapeString(this.innerText);\r\n                }\r\n            };\r\n            /**\r\n             * Get the closing tag.\r\n             */\r\n            XmlTag.prototype.getClosingTag = function () {\r\n                return '</' + this.name + '>';\r\n            };\r\n            /**\r\n             * Output the entire tag as a string.\r\n             */\r\n            XmlTag.prototype.toString = function () {\r\n                var selfClose = !this.innerText;\r\n                if (selfClose && !this.closingTags) {\r\n                    return this.getOpeningTag(true);\r\n                }\r\n                else {\r\n                    return this.getOpeningTag(false) + this.getInnerText() + this.getClosingTag();\r\n                }\r\n            };\r\n            return XmlTag;\r\n        }());\r\n        exporter.XmlTag = XmlTag;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * @private\r\n         */\r\n        function wrap(prefix, content, condition) {\r\n            if (condition) {\r\n                return prefix + '(' + content + ')';\r\n            }\r\n            else {\r\n                return content;\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function facetSizeToResolution(arcOrCircle, facetSize) {\r\n            if (!facetSize)\r\n                return;\r\n            var circle = new MakerJs.paths.Circle([0, 0], arcOrCircle.radius);\r\n            var length = MakerJs.measure.pathLength(circle);\r\n            if (!length)\r\n                return;\r\n            return Math.ceil(length / facetSize);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function chainToJscadScript(chainContext, facetSize, accuracy) {\r\n            var head = '';\r\n            var tail = '';\r\n            var first = true;\r\n            var exit = false;\r\n            var reverseTail = false;\r\n            var beginMap = {};\r\n            beginMap[MakerJs.pathType.Circle] = function (circle, link) {\r\n                var circleOptions = {\r\n                    center: MakerJs.point.rounded(MakerJs.point.add(circle.origin, link.walkedPath.offset), accuracy),\r\n                    radius: MakerJs.round(circle.radius, accuracy),\r\n                    resolution: facetSizeToResolution(circle, facetSize)\r\n                };\r\n                head = wrap('CAG.circle', JSON.stringify(circleOptions), true);\r\n                exit = true;\r\n            };\r\n            beginMap[MakerJs.pathType.Line] = function (line, link) {\r\n                var points = link.endPoints.map(function (p) { return MakerJs.point.rounded(p, accuracy); });\r\n                if (link.reversed) {\r\n                    points.reverse();\r\n                }\r\n                head = wrap('new CSG.Path2D', JSON.stringify(points), true);\r\n            };\r\n            beginMap[MakerJs.pathType.Arc] = function (arc, link) {\r\n                var endAngle = MakerJs.angle.ofArcEnd(arc);\r\n                if (link.reversed) {\r\n                    reverseTail = true;\r\n                }\r\n                var arcOptions = {\r\n                    center: MakerJs.point.rounded(MakerJs.point.add(arc.origin, link.walkedPath.offset), accuracy),\r\n                    radius: MakerJs.round(arc.radius, accuracy),\r\n                    startangle: MakerJs.round(arc.startAngle, accuracy),\r\n                    endangle: MakerJs.round(endAngle, accuracy),\r\n                    resolution: facetSizeToResolution(arc, facetSize)\r\n                };\r\n                head = wrap('new CSG.Path2D.arc', JSON.stringify(arcOptions), true);\r\n            };\r\n            var appendMap = {};\r\n            appendMap[MakerJs.pathType.Line] = function (line, link) {\r\n                var reverse = (reverseTail != link.reversed);\r\n                var endPoint = MakerJs.point.rounded(link.endPoints[reverse ? 0 : 1], accuracy);\r\n                append(wrap('.appendPoint', JSON.stringify(endPoint), true));\r\n            };\r\n            appendMap[MakerJs.pathType.Arc] = function (arc, link) {\r\n                var reverse = (reverseTail != link.reversed);\r\n                var endAngle = MakerJs.angle.ofArcEnd(arc);\r\n                var arcOptions = {\r\n                    radius: MakerJs.round(arc.radius, accuracy),\r\n                    clockwise: reverse,\r\n                    large: Math.abs(endAngle - arc.startAngle) > 180,\r\n                    resolution: facetSizeToResolution(arc, facetSize)\r\n                };\r\n                var endPoint = MakerJs.point.rounded(link.endPoints[reverse ? 0 : 1], accuracy);\r\n                append(wrap('.appendArc', JSON.stringify(endPoint) + ',' + JSON.stringify(arcOptions), true));\r\n            };\r\n            function append(s) {\r\n                if (reverseTail) {\r\n                    tail = s + tail;\r\n                }\r\n                else {\r\n                    tail += s;\r\n                }\r\n            }\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var link = chainContext.links[i];\r\n                var pathContext = link.walkedPath.pathContext;\r\n                var fn = first ? beginMap[pathContext.type] : appendMap[pathContext.type];\r\n                if (fn) {\r\n                    fn(pathContext, link);\r\n                }\r\n                if (exit) {\r\n                    return head;\r\n                }\r\n                first = false;\r\n            }\r\n            return head + tail + '.close().innerToCAG()';\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function makePhasedCallback(originalCb, phaseStart, phaseSpan) {\r\n            return function statusCallback(status) {\r\n                originalCb && originalCb({ progress: phaseStart + status.progress * phaseSpan / 100 });\r\n            };\r\n        }\r\n        /**\r\n         * Converts a model to a @jscad/csg CAG object - 2D to 2D. See https://en.wikibooks.org/wiki/OpenJSCAD_User_Guide#2D_Paths\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //First, use npm install @jscad/csg from the command line in your jscad project\r\n         * //Create a CAG instance from a model.\r\n         * var { CAG } = require('@jscad/csg');\r\n         * var model = new makerjs.models.Ellipse(70, 40);\r\n         * var cag = makerjs.exporter.toJscadCAG(CAG, model, {maxArcFacet: 1});\r\n         * ```\r\n         *\r\n         * @param jscadCAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg\r\n         * @param modelToExport Model object to export.\r\n         * @param options Optional options object.\r\n         * @param options.byLayers Optional flag to separate chains by layers.\r\n         * @param options.pointMatchingDistance Optional max distance to consider two points as the same.\r\n         * @param options.maxArcFacet The maximum length between points on an arc or circle.\r\n         * @param options.statusCallback Optional callback function to get the percentage complete.\r\n         * @returns jscad CAG object in 2D, or a map (keyed by layer id) of jscad CAG objects - if options.byLayers is true.\r\n         */\r\n        function toJscadCAG(jscadCAG, modelToExport, jsCadCagOptions) {\r\n            function chainToJscadCag(c, maxArcFacet) {\r\n                var keyPoints = MakerJs.chain.toKeyPoints(c, maxArcFacet);\r\n                keyPoints.push(keyPoints[0]);\r\n                return jscadCAG.fromPoints(keyPoints);\r\n            }\r\n            function jscadCagUnion(augend, addend) {\r\n                return augend.union(addend);\r\n            }\r\n            function jscadCagSubtraction(minuend, subtrahend) {\r\n                return minuend.subtract(subtrahend);\r\n            }\r\n            return convertChainsTo2D(chainToJscadCag, jscadCagUnion, jscadCagSubtraction, modelToExport, jsCadCagOptions);\r\n        }\r\n        exporter.toJscadCAG = toJscadCAG;\r\n        /**\r\n         * @private\r\n         */\r\n        function convertChainsTo2D(convertToT, union, subtraction, modelToExport, jsCadCagOptions) {\r\n            if (jsCadCagOptions === void 0) { jsCadCagOptions = {}; }\r\n            var adds = {};\r\n            var status = { total: 0, complete: 0 };\r\n            function unionize(phaseStart, phaseSpan, arr) {\r\n                var result = arr.shift();\r\n                arr.forEach(function (el) { return result = union(result, el); });\r\n                status.complete++;\r\n                jsCadCagOptions.statusCallback && jsCadCagOptions.statusCallback({ progress: phaseStart + phaseSpan * status.complete / status.total });\r\n                return result;\r\n            }\r\n            function subtractChains(layerId, cs) {\r\n                var subtracts = [];\r\n                cs.forEach(function (c) {\r\n                    if (!c.endless)\r\n                        return;\r\n                    if (c.contains) {\r\n                        addChains(layerId, c.contains);\r\n                    }\r\n                    status.total++;\r\n                    subtracts.unshift(convertToT(c, jsCadCagOptions.maxArcFacet));\r\n                });\r\n                return subtracts;\r\n            }\r\n            function addChains(layerId, cs) {\r\n                cs.forEach(function (c) {\r\n                    if (!c.endless)\r\n                        return;\r\n                    var add = { cag: convertToT(c, jsCadCagOptions.maxArcFacet), subtracts: [] };\r\n                    if (c.contains) {\r\n                        var subtracts = subtractChains(layerId, c.contains);\r\n                        if (subtracts.length > 0) {\r\n                            add.subtracts.push(subtracts);\r\n                        }\r\n                    }\r\n                    status.total++;\r\n                    if (!(layerId in adds)) {\r\n                        adds[layerId] = [];\r\n                    }\r\n                    adds[layerId].unshift(add);\r\n                });\r\n            }\r\n            var options = {\r\n                pointMatchingDistance: jsCadCagOptions.pointMatchingDistance,\r\n                byLayers: jsCadCagOptions.byLayers,\r\n                contain: true\r\n            };\r\n            jsCadCagOptions.statusCallback && jsCadCagOptions.statusCallback({ progress: 25 });\r\n            var chainsResult = MakerJs.model.findChains(modelToExport, options);\r\n            if (Array.isArray(chainsResult)) {\r\n                addChains('', chainsResult);\r\n            }\r\n            else {\r\n                for (var layerId in chainsResult) {\r\n                    addChains(layerId, chainsResult[layerId]);\r\n                }\r\n            }\r\n            jsCadCagOptions.statusCallback && jsCadCagOptions.statusCallback({ progress: 50 });\r\n            var closedCount = 0;\r\n            for (var layerId in adds) {\r\n                closedCount += adds[layerId].length;\r\n            }\r\n            if (closedCount === 0) {\r\n                jsCadCagOptions.statusCallback && jsCadCagOptions.statusCallback({ progress: 100 });\r\n                throw ('No closed geometries found.');\r\n            }\r\n            var resultMap = {};\r\n            for (var layerId in adds) {\r\n                var flatAdds = adds[layerId].map(function (add) {\r\n                    var result = add.cag;\r\n                    add.subtracts.forEach(function (subtract) {\r\n                        var union = unionize(50, 50, subtract);\r\n                        result = subtraction(result, union);\r\n                    });\r\n                    return result;\r\n                });\r\n                resultMap[layerId] = unionize(50, 50, flatAdds);\r\n            }\r\n            jsCadCagOptions.statusCallback && jsCadCagOptions.statusCallback({ progress: 100 });\r\n            return options.byLayers ? resultMap : resultMap[''];\r\n        }\r\n        /**\r\n         * Converts a model to a @jscad/csg CSG object - 2D to 3D.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //First, use npm install @jscad/csg from the command line in your jscad project\r\n         * //Create a CSG instance from a model.\r\n         * var { CAG } = require('@jscad/csg');\r\n         * var model = new makerjs.models.Ellipse(70, 40);\r\n         * var csg = makerjs.exporter.toJscadCSG(CAG, model, {maxArcFacet: 1, extrude: 10});\r\n         * ```\r\n         *\r\n         * @param jscadCAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg\r\n         * @param modelToExport Model object to export.\r\n         * @param options Optional options object.\r\n         * @param options.byLayers Optional flag to separate chains by layers.\r\n         * @param options.pointMatchingDistance Optional max distance to consider two points as the same.\r\n         * @param options.maxArcFacet The maximum length between points on an arc or circle.\r\n         * @param options.statusCallback Optional callback function to get the percentage complete.\r\n         * @param options.extrude Optional default extrusion distance.\r\n         * @param options.layerOptions Optional object map of options per layer, keyed by layer name. Each value for a key is an object with 'extrude' and 'z' properties.\r\n         * @returns jscad CAG object in 2D, or a map (keyed by layer id) of jscad CAG objects - if options.byLayers is true.\r\n         */\r\n        function toJscadCSG(jscadCAG, modelToExport, options) {\r\n            function to2D(opts) {\r\n                return toJscadCAG(jscadCAG, modelToExport, opts);\r\n            }\r\n            function to3D(cag, extrude, z) {\r\n                var csg = cag.extrude({ offset: [0, 0, extrude] });\r\n                if (z) {\r\n                    csg = csg.translate([0, 0, z]);\r\n                }\r\n                return csg;\r\n            }\r\n            function union3D(augend, addend) {\r\n                return augend.union(addend);\r\n            }\r\n            return convert2Dto3D(to2D, to3D, union3D, modelToExport, options);\r\n        }\r\n        exporter.toJscadCSG = toJscadCSG;\r\n        /**\r\n         * @private\r\n         */\r\n        function convert2Dto3D(to2D, to3D, union3D, modelToExport, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var originalCb = options.statusCallback;\r\n            function getDefinedNumber(a, b) {\r\n                if (MakerJs.isNumber(a))\r\n                    return a;\r\n                return b;\r\n            }\r\n            if (modelToExport.exporterOptions) {\r\n                MakerJs.extendObject(options, modelToExport.exporterOptions['toJscadCSG']);\r\n            }\r\n            options.byLayers = options.byLayers || (options.layerOptions && true);\r\n            options.statusCallback = makePhasedCallback(originalCb, 0, 50);\r\n            var result2D = to2D(options);\r\n            var csgs = [];\r\n            if (options.byLayers) {\r\n                for (var layerId in result2D) {\r\n                    var layerOptions = options.layerOptions[layerId];\r\n                    var csg = to3D(result2D[layerId], layerOptions.extrude || options.extrude, getDefinedNumber(layerOptions.z, options.z));\r\n                    csgs.push(csg);\r\n                }\r\n            }\r\n            else {\r\n                var csg = to3D(result2D, options.extrude, options.z);\r\n                csgs.push(csg);\r\n            }\r\n            options.statusCallback = makePhasedCallback(originalCb, 50, 100);\r\n            var status = { total: csgs.length - 1, complete: 0 };\r\n            var result = csgs.shift();\r\n            csgs.forEach(function (el, i) {\r\n                result = union3D(result, el);\r\n                status.complete++;\r\n                options.statusCallback({ progress: status.complete / status.total });\r\n            });\r\n            return result;\r\n        }\r\n        /**\r\n         * Creates a string of JavaScript code for execution with a Jscad environment.\r\n         *\r\n         * @param modelToExport Model object to export.\r\n         * @param options Export options object.\r\n         * @param options.byLayers Optional flag to separate chains by layers.\r\n         * @param options.pointMatchingDistance Optional max distance to consider two points as the same.\r\n         * @param options.maxArcFacet The maximum length between points on an arc or circle.\r\n         * @param options.statusCallback Optional callback function to get the percentage complete.\r\n         * @param options.extrude Optional default extrusion distance.\r\n         * @param options.layerOptions Optional object map of options per layer, keyed by layer name. Each value for a key is an object with 'extrude' and 'z' properties.\r\n         * @returns String of JavaScript containing a main() function for Jscad.\r\n         */\r\n        function toJscadScript(modelToExport, options) {\r\n            if (options === void 0) { options = {}; }\r\n            function _chainToJscadScript(c, maxArcFacet) {\r\n                return wrap(chainToJscadScript(c, maxArcFacet, options.accuracy));\r\n            }\r\n            function scriptUnion(augend, addend) {\r\n                return augend + \".union(\".concat(addend, \")\");\r\n            }\r\n            function scriptSubtraction(minuend, subtrahend) {\r\n                return minuend + \".subtract(\".concat(subtrahend, \")\");\r\n            }\r\n            function to2D(opts) {\r\n                return convertChainsTo2D(_chainToJscadScript, scriptUnion, scriptSubtraction, modelToExport, options);\r\n            }\r\n            function to3D(cag, extrude, z) {\r\n                var csg = cag + \".extrude({ offset: [0, 0, \".concat(extrude, \"] })\");\r\n                if (z) {\r\n                    csg = csg + \".translate([0, 0, \".concat(z, \"])\");\r\n                }\r\n                return csg;\r\n            }\r\n            function wrap(s) {\r\n                return \"\".concat(nl).concat(indent).concat(s).concat(nl);\r\n            }\r\n            var indent = new Array((options.indent || 0) + 1).join(' ');\r\n            var nl = options.indent ? '\\n' : '';\r\n            var result = convert2Dto3D(to2D, to3D, scriptUnion, modelToExport, options).trim();\r\n            return \"function \".concat(options.functionName || 'main', \"(){\").concat(wrap(\"return \".concat(result, \";\")), \"}\").concat(nl);\r\n        }\r\n        exporter.toJscadScript = toJscadScript;\r\n        /**\r\n         * Exports a model in STL format - 2D to 3D.\r\n         *\r\n         * @param jscadCAG @jscad/csg CAG engine, see https://www.npmjs.com/package/@jscad/csg\r\n         * @param stlSerializer @jscad/stl-serializer, see https://www.npmjs.com/package/@jscad/stl-serializer\r\n         * @param modelToExport Model object to export.\r\n         * @param options Optional options object.\r\n         * @param options.byLayers Optional flag to separate chains by layers.\r\n         * @param options.pointMatchingDistance Optional max distance to consider two points as the same.\r\n         * @param options.maxArcFacet The maximum length between points on an arc or circle.\r\n         * @param options.statusCallback Optional callback function to get the percentage complete.\r\n         * @param options.extrude Optional default extrusion distance.\r\n         * @param options.layerOptions Optional object map of options per layer, keyed by layer name. Each value for a key is an object with 'extrude' and 'z' properties.\r\n         * @returns String in STL ASCII format.\r\n         */\r\n        function toJscadSTL(CAG, stlSerializer, modelToExport, options) {\r\n            var originalCb = options.statusCallback;\r\n            options.statusCallback = makePhasedCallback(originalCb, 0, 50);\r\n            var csg = toJscadCSG(CAG, modelToExport, options);\r\n            return stlSerializer.serialize(csg, { binary: false, statusCallback: makePhasedCallback(originalCb, 50, 50) });\r\n        }\r\n        exporter.toJscadSTL = toJscadSTL;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Injects drawing into a PDFKit document.\r\n         *\r\n         * @param doc PDFKit.PDFDocument object. See https://pdfkit.org/\r\n         * @param modelToExport Model object to export.\r\n         * @param options Export options object.\r\n         * @returns String of PDF file contents.\r\n         */\r\n        function toPDF(doc, modelToExport, options) {\r\n            if (!modelToExport)\r\n                return;\r\n            //fixup options\r\n            var opts = {\r\n                fontName: 'Courier',\r\n                fontSize: 9,\r\n                origin: [0, 0],\r\n                stroke: \"#000\"\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            //try to get the unit system from the itemToExport\r\n            var scale = 1;\r\n            var exportUnits = opts.units || modelToExport.units;\r\n            if (exportUnits) {\r\n                //convert to inch\r\n                scale = MakerJs.units.conversionScale(exportUnits, MakerJs.unitType.Inch);\r\n            }\r\n            else {\r\n                //assume pixels, convert to inch\r\n                scale = 1 / 100;\r\n            }\r\n            //from inch to PDF PPI\r\n            scale *= 72;\r\n            //TODO scale each element without a whole clone\r\n            var scaledModel = MakerJs.model.scale(MakerJs.cloneObject(modelToExport), scale);\r\n            var size = MakerJs.measure.modelExtents(scaledModel);\r\n            var left = -size.low[0];\r\n            var offset = [left, size.high[1]];\r\n            offset = MakerJs.point.add(offset, opts.origin);\r\n            MakerJs.model.findChains(scaledModel, function (chains, loose, layer) {\r\n                function single(walkedPath) {\r\n                    var pathData = exporter.pathToSVGPathData(walkedPath.pathContext, walkedPath.offset, offset);\r\n                    doc.path(pathData).stroke(opts.stroke);\r\n                }\r\n                chains.map(function (chain) {\r\n                    if (chain.links.length > 1) {\r\n                        var pathData = exporter.chainToSVGPathData(chain, offset);\r\n                        doc.path(pathData).stroke(opts.stroke);\r\n                    }\r\n                    else {\r\n                        var walkedPath = chain.links[0].walkedPath;\r\n                        if (walkedPath.pathContext.type === MakerJs.pathType.Circle) {\r\n                            var fixedPath;\r\n                            MakerJs.path.moveTemporary([walkedPath.pathContext], [walkedPath.offset], function () {\r\n                                fixedPath = MakerJs.path.mirror(walkedPath.pathContext, false, true);\r\n                            });\r\n                            MakerJs.path.moveRelative(fixedPath, offset);\r\n                            //TODO use only chainToSVGPathData instead of circle, so that we can use fill\r\n                            doc.circle(fixedPath.origin[0], fixedPath.origin[1], walkedPath.pathContext.radius).stroke(opts.stroke);\r\n                        }\r\n                        else {\r\n                            single(walkedPath);\r\n                        }\r\n                    }\r\n                });\r\n                loose.map(single);\r\n            }, { byLayers: false });\r\n            doc.font(opts.fontName).fontSize(opts.fontSize);\r\n            MakerJs.model.getAllCaptionsOffset(scaledModel).forEach(function (caption) {\r\n                //measure the angle of the line, prior to mirroring\r\n                var a = MakerJs.angle.ofLineInDegrees(caption.anchor);\r\n                //mirror into pdf y coords\r\n                var anchor = MakerJs.path.mirror(caption.anchor, false, true);\r\n                //move mirrored line by document offset\r\n                MakerJs.path.moveRelative(anchor, offset);\r\n                //measure center point of text\r\n                var text = caption.text;\r\n                var textCenter = [doc.widthOfString(text) / 2, doc.heightOfString(text) / 2];\r\n                //get center point on line\r\n                var center = MakerJs.point.middle(anchor);\r\n                var textOffset = MakerJs.point.subtract(center, textCenter);\r\n                doc.rotate(-a, { origin: center });\r\n                doc.text(text, textOffset[0], textOffset[1]);\r\n                doc.rotate(a, { origin: center });\r\n            });\r\n        }\r\n        exporter.toPDF = toPDF;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * @private\r\n         */\r\n        var chainLinkToPathDataMap = {};\r\n        chainLinkToPathDataMap[MakerJs.pathType.Arc] = function (arc, endPoint, reversed, d, accuracy) {\r\n            d.push('A');\r\n            svgArcData(d, arc.radius, endPoint, accuracy, MakerJs.angle.ofArcSpan(arc) > 180, reversed ? (arc.startAngle > arc.endAngle) : (arc.startAngle < arc.endAngle));\r\n        };\r\n        chainLinkToPathDataMap[MakerJs.pathType.Line] = function (line, endPoint, reversed, d, accuracy) {\r\n            d.push('L', MakerJs.round(endPoint[0], accuracy), MakerJs.round(endPoint[1], accuracy));\r\n        };\r\n        chainLinkToPathDataMap[MakerJs.pathType.BezierSeed] = function (seed, endPoint, reversed, d, accuracy) {\r\n            svgBezierData(d, seed, accuracy, reversed);\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function svgCoords(p) {\r\n            return MakerJs.point.mirror(p, false, true);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function correctArc(arc) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            arc.startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n            arc.endAngle = arc.startAngle + arcSpan;\r\n        }\r\n        /**\r\n         * Convert a chain to SVG path data.\r\n         *\r\n         * @param chain Chain to convert.\r\n         * @param offset IPoint relative offset point.\r\n         * @param accuracy Optional accuracy of SVG path data.\r\n         * @returns String of SVG path data.\r\n         */\r\n        function chainToSVGPathData(chain, offset, accuracy) {\r\n            function offsetPoint(p) {\r\n                return MakerJs.point.add(p, offset);\r\n            }\r\n            var first = chain.links[0];\r\n            var firstPoint = offsetPoint(svgCoords(first.endPoints[first.reversed ? 1 : 0]));\r\n            var d = ['M', MakerJs.round(firstPoint[0], accuracy), MakerJs.round(firstPoint[1], accuracy)];\r\n            for (var i = 0; i < chain.links.length; i++) {\r\n                var link = chain.links[i];\r\n                var pathContext = link.walkedPath.pathContext;\r\n                var fn = chainLinkToPathDataMap[pathContext.type];\r\n                if (fn) {\r\n                    var fixedPath;\r\n                    MakerJs.path.moveTemporary([pathContext], [link.walkedPath.offset], function () {\r\n                        fixedPath = MakerJs.path.mirror(pathContext, false, true);\r\n                    });\r\n                    MakerJs.path.moveRelative(fixedPath, offset);\r\n                    fn(fixedPath, offsetPoint(svgCoords(link.endPoints[link.reversed ? 0 : 1])), link.reversed, d, accuracy);\r\n                }\r\n            }\r\n            if (chain.endless) {\r\n                d.push('Z');\r\n            }\r\n            return d.join(' ');\r\n        }\r\n        exporter.chainToSVGPathData = chainToSVGPathData;\r\n        /**\r\n         * @private\r\n         */\r\n        function startSvgPathData(start, d, accuracy) {\r\n            return [\"M\", MakerJs.round(start[0], accuracy), MakerJs.round(start[1], accuracy)].concat(d);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var svgPathDataMap = {};\r\n        svgPathDataMap[MakerJs.pathType.Line] = function (line, accuracy) {\r\n            return startSvgPathData(line.origin, MakerJs.point.rounded(line.end, accuracy), accuracy);\r\n        };\r\n        svgPathDataMap[MakerJs.pathType.Circle] = function (circle, accuracy, clockwiseCircle) {\r\n            return startSvgPathData(circle.origin, svgCircleData(circle.radius, accuracy, clockwiseCircle), accuracy);\r\n        };\r\n        svgPathDataMap[MakerJs.pathType.Arc] = function (arc, accuracy) {\r\n            correctArc(arc);\r\n            var arcPoints = MakerJs.point.fromArc(arc);\r\n            if (MakerJs.measure.isPointEqual(arcPoints[0], arcPoints[1])) {\r\n                return svgPathDataMap[MakerJs.pathType.Circle](arc, accuracy);\r\n            }\r\n            else {\r\n                var d = ['A'];\r\n                svgArcData(d, arc.radius, arcPoints[1], accuracy, MakerJs.angle.ofArcSpan(arc) > 180, arc.startAngle > arc.endAngle);\r\n                return startSvgPathData(arcPoints[0], d, accuracy);\r\n            }\r\n        };\r\n        svgPathDataMap[MakerJs.pathType.BezierSeed] = function (seed, accuracy) {\r\n            var d = [];\r\n            svgBezierData(d, seed, accuracy);\r\n            return startSvgPathData(seed.origin, d, accuracy);\r\n        };\r\n        /**\r\n         * Export a path to SVG path data.\r\n         *\r\n         * @param pathToExport IPath to export.\r\n         * @param pathOffset IPoint relative offset of the path object.\r\n         * @param exportOffset IPoint relative offset point of the export.\r\n         * @param accuracy Optional accuracy of SVG path data.\r\n         * @param clockwiseCircle Optional flag to use clockwise winding for circles.\r\n         * @returns String of SVG path data.\r\n         */\r\n        function pathToSVGPathData(pathToExport, pathOffset, exportOffset, accuracy, clockwiseCircle) {\r\n            var fn = svgPathDataMap[pathToExport.type];\r\n            if (fn) {\r\n                var fixedPath;\r\n                MakerJs.path.moveTemporary([pathToExport], [pathOffset], function () {\r\n                    fixedPath = MakerJs.path.mirror(pathToExport, false, true);\r\n                });\r\n                MakerJs.path.moveRelative(fixedPath, exportOffset);\r\n                var d = fn(fixedPath, accuracy, clockwiseCircle);\r\n                return d.join(' ');\r\n            }\r\n            return '';\r\n        }\r\n        exporter.pathToSVGPathData = pathToSVGPathData;\r\n        /**\r\n         * @private\r\n         */\r\n        function getPathDataByLayer(modelToExport, offset, options, accuracy) {\r\n            var pathDataByLayer = {};\r\n            options.unifyBeziers = true;\r\n            MakerJs.model.findChains(modelToExport, function (chains, loose, layer) {\r\n                function single(walkedPath, clockwise) {\r\n                    var pathData = pathToSVGPathData(walkedPath.pathContext, walkedPath.offset, offset, accuracy, clockwise);\r\n                    pathDataByLayer[layer].push(pathData);\r\n                }\r\n                pathDataByLayer[layer] = [];\r\n                function doChains(cs, clockwise) {\r\n                    cs.forEach(function (chain) {\r\n                        if (chain.links.length > 1) {\r\n                            var pathData = chainToSVGPathData(chain, offset, accuracy);\r\n                            pathDataByLayer[layer].push(pathData);\r\n                        }\r\n                        else {\r\n                            single(chain.links[0].walkedPath, clockwise);\r\n                        }\r\n                        if (chain.contains) {\r\n                            doChains(chain.contains, !clockwise);\r\n                        }\r\n                    });\r\n                }\r\n                doChains(chains, true);\r\n                loose.forEach(function (wp) { return single(wp); });\r\n            }, options);\r\n            return pathDataByLayer;\r\n        }\r\n        function toSVGPathData(modelToExport) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            var options = {\r\n                fillRule: 'evenodd'\r\n            };\r\n            if (typeof args[0] === 'boolean') {\r\n                options.byLayers = args[0];\r\n                options.origin = args[1];\r\n                options.accuracy = args[2];\r\n            }\r\n            else if (MakerJs.isObject(args[0])) {\r\n                MakerJs.extendObject(options, args[0]);\r\n            }\r\n            var findChainsOptions = {\r\n                byLayers: options.byLayers,\r\n                contain: false\r\n            };\r\n            if (options.fillRule === 'nonzero') {\r\n                findChainsOptions.contain = {\r\n                    alternateDirection: true\r\n                };\r\n            }\r\n            var size = MakerJs.measure.modelExtents(modelToExport);\r\n            if (!options.origin) {\r\n                options.origin = [-size.low[0], size.high[1]];\r\n            }\r\n            var pathDataArrayByLayer = getPathDataByLayer(modelToExport, options.origin, findChainsOptions, options.accuracy);\r\n            var pathDataStringByLayer = {};\r\n            for (var layer in pathDataArrayByLayer) {\r\n                pathDataStringByLayer[layer] = pathDataArrayByLayer[layer].join(' ');\r\n            }\r\n            return findChainsOptions.byLayers ? pathDataStringByLayer : pathDataStringByLayer[''];\r\n        }\r\n        exporter.toSVGPathData = toSVGPathData;\r\n        /**\r\n         * Renders an item in SVG markup.\r\n         *\r\n         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n         * @param options Rendering options object.\r\n         * @param options.annotate Boolean to indicate that the id's of paths should be rendered as SVG text elements.\r\n         * @param options.origin point object for the rendered reference origin.\r\n         * @param options.scale Number to scale the SVG rendering.\r\n         * @param options.stroke String color of the rendered paths.\r\n         * @param options.strokeWidth String numeric width and optional units of the rendered paths.\r\n         * @param options.units String of the unit system. May be omitted. See makerjs.unitType for possible values.\r\n         * @param options.useSvgPathOnly Boolean to use SVG path elements instead of line, circle etc.\r\n         * @returns String of XML / SVG content.\r\n         */\r\n        function toSVG(itemToExport, options) {\r\n            function append(value, layer, forcePush) {\r\n                if (forcePush === void 0) { forcePush = false; }\r\n                if (!forcePush && typeof layer == \"string\" && layer.length > 0) {\r\n                    if (!(layer in layers)) {\r\n                        layers[layer] = [];\r\n                    }\r\n                    layers[layer].push(value);\r\n                }\r\n                else {\r\n                    elements.push(value);\r\n                }\r\n            }\r\n            function cssStyle(elOpts) {\r\n                var a = [];\r\n                function push(name, val) {\r\n                    if (val === undefined)\r\n                        return;\r\n                    a.push(name + ':' + val);\r\n                }\r\n                push('stroke', elOpts.stroke);\r\n                push('stroke-width', elOpts.strokeWidth);\r\n                push('fill', elOpts.fill);\r\n                return a.join(';');\r\n            }\r\n            function addSvgAttrs(attrs, elOpts) {\r\n                if (!elOpts)\r\n                    return;\r\n                MakerJs.extendObject(attrs, {\r\n                    \"stroke\": elOpts.stroke,\r\n                    \"stroke-width\": elOpts.strokeWidth,\r\n                    \"fill\": elOpts.fill,\r\n                    \"style\": elOpts.cssStyle || cssStyle(elOpts),\r\n                    \"class\": elOpts.className\r\n                });\r\n            }\r\n            function colorLayerOptions(layer) {\r\n                if (opts.layerOptions && opts.layerOptions[layer])\r\n                    return opts.layerOptions[layer];\r\n                if (layer in exporter.colors) {\r\n                    return {\r\n                        stroke: layer\r\n                    };\r\n                }\r\n            }\r\n            function createElement(tagname, attrs, layer, innerText, forcePush) {\r\n                if (innerText === void 0) { innerText = null; }\r\n                if (forcePush === void 0) { forcePush = false; }\r\n                if (tagname !== 'text') {\r\n                    addSvgAttrs(attrs, colorLayerOptions(layer));\r\n                }\r\n                if (!opts.scalingStroke) {\r\n                    attrs['vector-effect'] = 'non-scaling-stroke';\r\n                }\r\n                var tag = new exporter.XmlTag(tagname, attrs);\r\n                tag.closingTags = opts.closingTags;\r\n                if (innerText) {\r\n                    tag.innerText = innerText;\r\n                }\r\n                append(tag.toString(), layer, forcePush);\r\n            }\r\n            function fixPoint(pointToFix) {\r\n                //in DXF Y increases upward. in SVG, Y increases downward\r\n                var pointMirroredY = svgCoords(pointToFix);\r\n                return MakerJs.point.scale(pointMirroredY, opts.scale);\r\n            }\r\n            function fixPath(pathToFix, origin) {\r\n                //mirror creates a copy, so we don't modify the original\r\n                var mirrorY = MakerJs.path.mirror(pathToFix, false, true);\r\n                return MakerJs.path.moveRelative(MakerJs.path.scale(mirrorY, opts.scale), origin);\r\n            }\r\n            //fixup options\r\n            var opts = {\r\n                accuracy: .001,\r\n                annotate: false,\r\n                origin: null,\r\n                scale: 1,\r\n                stroke: \"#000\",\r\n                strokeLineCap: \"round\",\r\n                strokeWidth: '0.25mm',\r\n                fill: \"none\",\r\n                fillRule: \"evenodd\",\r\n                fontSize: '9pt',\r\n                useSvgPathOnly: true,\r\n                viewBox: true\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            var modelToExport;\r\n            var itemToExportIsModel = MakerJs.isModel(itemToExport);\r\n            if (itemToExportIsModel) {\r\n                modelToExport = itemToExport;\r\n                if (modelToExport.exporterOptions) {\r\n                    MakerJs.extendObject(opts, modelToExport.exporterOptions['toSVG']);\r\n                }\r\n            }\r\n            var elements = [];\r\n            var layers = {};\r\n            //measure the item to move it into svg area\r\n            if (itemToExportIsModel) {\r\n                modelToExport = itemToExport;\r\n            }\r\n            else if (Array.isArray(itemToExport)) {\r\n                //issue: this won't handle an array of models\r\n                var pathMap = {};\r\n                itemToExport.forEach(function (p, i) { pathMap[i] = p; });\r\n                modelToExport = { paths: pathMap };\r\n            }\r\n            else if (MakerJs.isPath(itemToExport)) {\r\n                modelToExport = { paths: { modelToMeasure: itemToExport } };\r\n            }\r\n            var size = MakerJs.measure.modelExtents(modelToExport);\r\n            //increase size to fit caption text\r\n            var captions = MakerJs.model.getAllCaptionsOffset(modelToExport);\r\n            captions.forEach(function (caption) {\r\n                MakerJs.measure.increase(size, MakerJs.measure.pathExtents(caption.anchor), true);\r\n            });\r\n            //try to get the unit system from the itemToExport\r\n            if (!opts.units) {\r\n                var unitSystem = exporter.tryGetModelUnits(itemToExport);\r\n                if (unitSystem) {\r\n                    opts.units = unitSystem;\r\n                }\r\n            }\r\n            //convert unit system (if it exists) into SVG's units. scale if necessary.\r\n            var useSvgUnit = exporter.svgUnit[opts.units];\r\n            if (useSvgUnit && opts.viewBox) {\r\n                opts.scale *= useSvgUnit.scaleConversion;\r\n            }\r\n            if (size && !opts.origin) {\r\n                var left = -size.low[0] * opts.scale;\r\n                opts.origin = [left, size.high[1] * opts.scale];\r\n            }\r\n            //also pass back to options parameter\r\n            MakerJs.extendObject(options, opts);\r\n            //begin svg output\r\n            var svgAttrs = {};\r\n            if (size && opts.viewBox) {\r\n                var width = MakerJs.round(size.width * opts.scale, opts.accuracy);\r\n                var height = MakerJs.round(size.height * opts.scale, opts.accuracy);\r\n                var viewBox = [0, 0, width, height];\r\n                var unit = useSvgUnit ? useSvgUnit.svgUnitType : '';\r\n                svgAttrs = {\r\n                    width: width + unit,\r\n                    height: height + unit,\r\n                    viewBox: viewBox.join(' ')\r\n                };\r\n            }\r\n            svgAttrs[\"xmlns\"] = \"http://www.w3.org/2000/svg\";\r\n            var svgTag = new exporter.XmlTag('svg', MakerJs.extendObject(svgAttrs, opts.svgAttrs));\r\n            append(svgTag.getOpeningTag(false));\r\n            var groupAttrs = {\r\n                id: 'svgGroup',\r\n                \"stroke-linecap\": opts.strokeLineCap,\r\n                \"fill-rule\": opts.fillRule,\r\n                \"font-size\": opts.fontSize\r\n            };\r\n            addSvgAttrs(groupAttrs, opts);\r\n            var svgGroup = new exporter.XmlTag('g', groupAttrs);\r\n            append(svgGroup.getOpeningTag(false));\r\n            if (opts.useSvgPathOnly) {\r\n                var findChainsOptions = {\r\n                    byLayers: true\r\n                };\r\n                if (opts.fillRule === 'nonzero') {\r\n                    findChainsOptions.contain = {\r\n                        alternateDirection: true\r\n                    };\r\n                }\r\n                var pathDataByLayer = getPathDataByLayer(modelToExport, opts.origin, findChainsOptions, opts.accuracy);\r\n                for (var layerId1 in pathDataByLayer) {\r\n                    var pathData = pathDataByLayer[layerId1].join(' ');\r\n                    var attrs = { \"d\": pathData };\r\n                    if (layerId1.length > 0) {\r\n                        attrs[\"id\"] = layerId1;\r\n                    }\r\n                    createElement(\"path\", attrs, layerId1, null, true);\r\n                }\r\n            }\r\n            else {\r\n                function drawText(id, textPoint, layer) {\r\n                    createElement(\"text\", {\r\n                        \"id\": id + \"_text\",\r\n                        \"x\": MakerJs.round(textPoint[0], opts.accuracy),\r\n                        \"y\": MakerJs.round(textPoint[1], opts.accuracy)\r\n                    }, layer, id);\r\n                }\r\n                function drawPath(id, x, y, d, layer, route, textPoint, annotate, flow) {\r\n                    createElement(\"path\", {\r\n                        \"id\": id,\r\n                        \"data-route\": route,\r\n                        \"d\": [\"M\", MakerJs.round(x, opts.accuracy), MakerJs.round(y, opts.accuracy)].concat(d).join(\" \")\r\n                    }, layer);\r\n                    if (annotate) {\r\n                        drawText(id, textPoint, layer);\r\n                    }\r\n                }\r\n                function circleInPaths(id, center, radius, layer, route, annotate, flow) {\r\n                    var d = svgCircleData(radius, opts.accuracy);\r\n                    drawPath(id, center[0], center[1], d, layer, route, center, annotate, flow);\r\n                }\r\n                var map = {};\r\n                map[MakerJs.pathType.Line] = function (id, line, layer, className, route, annotate, flow) {\r\n                    var start = line.origin;\r\n                    var end = line.end;\r\n                    createElement(\"line\", {\r\n                        \"id\": id,\r\n                        \"class\": className,\r\n                        \"data-route\": route,\r\n                        \"x1\": MakerJs.round(start[0], opts.accuracy),\r\n                        \"y1\": MakerJs.round(start[1], opts.accuracy),\r\n                        \"x2\": MakerJs.round(end[0], opts.accuracy),\r\n                        \"y2\": MakerJs.round(end[1], opts.accuracy)\r\n                    }, layer);\r\n                    if (annotate) {\r\n                        drawText(id, MakerJs.point.middle(line), layer);\r\n                    }\r\n                    if (flow) {\r\n                        addFlowMarks(flow, layer, line.origin, line.end, MakerJs.angle.ofLineInDegrees(line));\r\n                    }\r\n                };\r\n                map[MakerJs.pathType.Circle] = function (id, circle, layer, className, route, annotate, flow) {\r\n                    var center = circle.origin;\r\n                    createElement(\"circle\", {\r\n                        \"id\": id,\r\n                        \"class\": className,\r\n                        \"data-route\": route,\r\n                        \"r\": circle.radius,\r\n                        \"cx\": MakerJs.round(center[0], opts.accuracy),\r\n                        \"cy\": MakerJs.round(center[1], opts.accuracy)\r\n                    }, layer);\r\n                    if (annotate) {\r\n                        drawText(id, center, layer);\r\n                    }\r\n                };\r\n                map[MakerJs.pathType.Arc] = function (id, arc, layer, className, route, annotate, flow) {\r\n                    correctArc(arc);\r\n                    var arcPoints = MakerJs.point.fromArc(arc);\r\n                    if (MakerJs.measure.isPointEqual(arcPoints[0], arcPoints[1])) {\r\n                        circleInPaths(id, arc.origin, arc.radius, layer, route, annotate, flow);\r\n                    }\r\n                    else {\r\n                        var d = ['A'];\r\n                        svgArcData(d, arc.radius, arcPoints[1], opts.accuracy, MakerJs.angle.ofArcSpan(arc) > 180, arc.startAngle > arc.endAngle);\r\n                        drawPath(id, arcPoints[0][0], arcPoints[0][1], d, layer, route, MakerJs.point.middle(arc), annotate, flow);\r\n                        if (flow) {\r\n                            addFlowMarks(flow, layer, arcPoints[1], arcPoints[0], MakerJs.angle.noRevolutions(arc.startAngle - 90));\r\n                        }\r\n                    }\r\n                };\r\n                map[MakerJs.pathType.BezierSeed] = function (id, seed, layer, className, route, annotate, flow) {\r\n                    var d = [];\r\n                    svgBezierData(d, seed, opts.accuracy);\r\n                    drawPath(id, seed.origin[0], seed.origin[1], d, layer, route, MakerJs.point.middle(seed), annotate, flow);\r\n                };\r\n                function addFlowMarks(flow, layer, origin, end, endAngle) {\r\n                    var className = 'flow';\r\n                    //origin: add a circle\r\n                    map[MakerJs.pathType.Circle]('', new MakerJs.paths.Circle(origin, flow.size / 2), layer, className, null, false, null);\r\n                    //end: add an arrow\r\n                    var arrowEnd = [-1 * flow.size, flow.size / 2];\r\n                    var arrowLines = [arrowEnd, MakerJs.point.mirror(arrowEnd, false, true)].map(function (p) { return new MakerJs.paths.Line(MakerJs.point.add(MakerJs.point.rotate(p, endAngle), end), end); });\r\n                    arrowLines.forEach(function (a) { return map[MakerJs.pathType.Line]('', a, layer, className, null, false, null); });\r\n                }\r\n                function beginModel(id, modelContext) {\r\n                    modelGroup.attrs = { id: id };\r\n                    append(modelGroup.getOpeningTag(false), modelContext.layer);\r\n                }\r\n                function endModel(modelContext) {\r\n                    append(modelGroup.getClosingTag(), modelContext.layer);\r\n                }\r\n                var modelGroup = new exporter.XmlTag('g');\r\n                var walkOptions = {\r\n                    beforeChildWalk: function (walkedModel) {\r\n                        beginModel(walkedModel.childId, walkedModel.childModel);\r\n                        return true;\r\n                    },\r\n                    onPath: function (walkedPath) {\r\n                        var fn = map[walkedPath.pathContext.type];\r\n                        if (fn) {\r\n                            var offset = MakerJs.point.add(fixPoint(walkedPath.offset), opts.origin);\r\n                            fn(walkedPath.pathId, fixPath(walkedPath.pathContext, offset), walkedPath.layer, null, walkedPath.route, opts.annotate, opts.flow);\r\n                        }\r\n                    },\r\n                    afterChildWalk: function (walkedModel) {\r\n                        endModel(walkedModel.childModel);\r\n                    }\r\n                };\r\n                beginModel('0', modelToExport);\r\n                MakerJs.model.walk(modelToExport, walkOptions);\r\n                //export layers as groups\r\n                for (var layerId2 in layers) {\r\n                    var layerGroup = new exporter.XmlTag('g', { id: layerId2 });\r\n                    addSvgAttrs(layerGroup.attrs, colorLayerOptions(layerId2));\r\n                    for (var i = 0; i < layers[layerId2].length; i++) {\r\n                        layerGroup.innerText += layers[layerId2][i];\r\n                    }\r\n                    layerGroup.innerTextEscaped = true;\r\n                    append(layerGroup.toString());\r\n                }\r\n                endModel(modelToExport);\r\n            }\r\n            var captionTags = captions.map(function (caption) {\r\n                var anchor = fixPath(caption.anchor, opts.origin);\r\n                var center = MakerJs.point.rounded(MakerJs.point.middle(anchor), opts.accuracy);\r\n                var tag = new exporter.XmlTag('text', {\r\n                    \"alignment-baseline\": \"middle\",\r\n                    \"text-anchor\": \"middle\",\r\n                    \"transform\": \"rotate(\".concat(MakerJs.angle.ofLineInDegrees(anchor), \",\").concat(center[0], \",\").concat(center[1], \")\"),\r\n                    \"x\": center[0],\r\n                    \"y\": center[1]\r\n                });\r\n                addSvgAttrs(tag.attrs, colorLayerOptions(caption.layer));\r\n                tag.innerText = caption.text;\r\n                return tag.toString();\r\n            });\r\n            if (captionTags.length) {\r\n                var captionGroup = new exporter.XmlTag('g', { \"id\": \"captions\" });\r\n                addSvgAttrs(captionGroup.attrs, colorLayerOptions(captionGroup.attrs.id));\r\n                captionGroup.innerText = captionTags.join('');\r\n                captionGroup.innerTextEscaped = true;\r\n                append(captionGroup.toString());\r\n            }\r\n            append(svgGroup.getClosingTag());\r\n            append(svgTag.getClosingTag());\r\n            return elements.join('');\r\n        }\r\n        exporter.toSVG = toSVG;\r\n        /**\r\n         * @private\r\n         */\r\n        function svgCircleData(radius, accuracy, clockwiseCircle) {\r\n            var r = MakerJs.round(radius, accuracy);\r\n            var d = ['m', -r, 0];\r\n            function halfCircle(sign) {\r\n                d.push('a');\r\n                svgArcData(d, r, [2 * r * sign, 0], accuracy, false, !clockwiseCircle);\r\n            }\r\n            halfCircle(1);\r\n            halfCircle(-1);\r\n            d.push('z');\r\n            return d;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function svgBezierData(d, seed, accuracy, reversed) {\r\n            if (seed.controls.length === 1) {\r\n                d.push('Q', MakerJs.round(seed.controls[0][0], accuracy), MakerJs.round(seed.controls[0][1], accuracy));\r\n            }\r\n            else {\r\n                var controls = reversed ? [seed.controls[1], seed.controls[0]] : seed.controls;\r\n                d.push('C', MakerJs.round(controls[0][0], accuracy), MakerJs.round(controls[0][1], accuracy), MakerJs.round(controls[1][0], accuracy), MakerJs.round(controls[1][1], accuracy));\r\n            }\r\n            var final = reversed ? seed.origin : seed.end;\r\n            d.push(MakerJs.round(final[0], accuracy), MakerJs.round(final[1], accuracy));\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function svgArcData(d, radius, endPoint, accuracy, largeArc, increasing) {\r\n            var r = MakerJs.round(radius, accuracy);\r\n            var end = endPoint;\r\n            d.push(r, r);\r\n            d.push(0); //0 = x-axis rotation\r\n            d.push(largeArc ? 1 : 0); //large arc=1, small arc=0\r\n            d.push(increasing ? 0 : 1); //sweep-flag 0=increasing, 1=decreasing\r\n            d.push(MakerJs.round(end[0], accuracy), MakerJs.round(end[1], accuracy));\r\n        }\r\n        /**\r\n         * Map of MakerJs unit system to SVG unit system\r\n         */\r\n        exporter.svgUnit = {};\r\n        //SVG Coordinate Systems, Transformations and Units documentation:\r\n        //http://www.w3.org/TR/SVG/coords.html\r\n        //The supported length unit identifiers are: em, ex, px, pt, pc, cm, mm, in, and percentages.\r\n        exporter.svgUnit[MakerJs.unitType.Inch] = { svgUnitType: \"in\", scaleConversion: 1 };\r\n        exporter.svgUnit[MakerJs.unitType.Millimeter] = { svgUnitType: \"mm\", scaleConversion: 1 };\r\n        exporter.svgUnit[MakerJs.unitType.Centimeter] = { svgUnitType: \"cm\", scaleConversion: 1 };\r\n        //Add conversions for all unitTypes\r\n        exporter.svgUnit[MakerJs.unitType.Foot] = { svgUnitType: \"in\", scaleConversion: 12 };\r\n        exporter.svgUnit[MakerJs.unitType.Meter] = { svgUnitType: \"cm\", scaleConversion: 100 };\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var importer;\r\n    (function (importer) {\r\n        /**\r\n         * Create a model from SVG path data.\r\n         *\r\n         * @param pathData SVG path data.\r\n         * @param options ISVGImportOptions object.\r\n         * @param options.bezierAccuracy Optional accuracy of Bezier curves.\r\n         * @returns An IModel object.\r\n         */\r\n        function fromSVGPathData(pathData, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var result = {};\r\n            function addPath(p) {\r\n                if (!result.paths) {\r\n                    result.paths = {};\r\n                }\r\n                result.paths['p_' + ++pathCount] = p;\r\n            }\r\n            function addModel(m) {\r\n                if (!result.models) {\r\n                    result.models = {};\r\n                }\r\n                result.models['p_' + ++pathCount] = m;\r\n            }\r\n            function getPoint(cmd, offset, from) {\r\n                if (offset === void 0) { offset = 0; }\r\n                if (from === void 0) { from = cmd.from; }\r\n                if (offset < 0) { // get point from end of list (negative index)\r\n                    offset = offset + cmd.data.length;\r\n                }\r\n                var p = MakerJs.point.mirror([cmd.data[0 + offset], cmd.data[1 + offset]], false, true);\r\n                if (cmd.absolute) {\r\n                    return p;\r\n                }\r\n                else {\r\n                    return MakerJs.point.add(p, from);\r\n                }\r\n            }\r\n            function lineTo(cmd, end) {\r\n                if (!MakerJs.measure.isPointEqual(cmd.from, end)) {\r\n                    addPath(new MakerJs.paths.Line(cmd.from, end));\r\n                }\r\n                return end;\r\n            }\r\n            var map = {};\r\n            map['M'] = function (cmd) {\r\n                firstPoint = getPoint(cmd);\r\n                if (cmd.data.length > 2) { // implicit lineTo\r\n                    cmd.from = firstPoint;\r\n                    for (var a = 2; a < cmd.data.length; a = a + 2) {\r\n                        cmd.from = lineTo(cmd, getPoint(cmd, a));\r\n                    }\r\n                    return cmd.from;\r\n                }\r\n                else\r\n                    return firstPoint;\r\n            };\r\n            map['Z'] = function (cmd) {\r\n                return lineTo(cmd, firstPoint);\r\n            };\r\n            map['H'] = function (cmd) {\r\n                var end = MakerJs.point.clone(cmd.from);\r\n                if (cmd.absolute) {\r\n                    end[0] = cmd.data[0];\r\n                }\r\n                else {\r\n                    end[0] += cmd.data[0];\r\n                }\r\n                return lineTo(cmd, end);\r\n            };\r\n            map['V'] = function (cmd) {\r\n                var end = MakerJs.point.clone(cmd.from);\r\n                //subtract to mirror on y axis: SVG coords\r\n                if (cmd.absolute) {\r\n                    end[1] = -cmd.data[0];\r\n                }\r\n                else {\r\n                    end[1] -= cmd.data[0];\r\n                }\r\n                return lineTo(cmd, end);\r\n            };\r\n            map['L'] = function (cmd) {\r\n                var end;\r\n                for (var a = 0; a < cmd.data.length; a = a + 2) {\r\n                    end = getPoint(cmd, a);\r\n                    cmd.from = lineTo(cmd, end);\r\n                }\r\n                return cmd.from;\r\n            };\r\n            map['A'] = function (cmd) {\r\n                var rx;\r\n                var ry;\r\n                var rotation;\r\n                var large;\r\n                var decreasing;\r\n                var end;\r\n                var elliptic;\r\n                var xAxis;\r\n                var arc;\r\n                var scaleUp;\r\n                var e;\r\n                for (var a = 0; a < cmd.data.length; a = a + 7) {\r\n                    rx = cmd.data[0 + a];\r\n                    ry = cmd.data[1 + a];\r\n                    rotation = cmd.data[2 + a];\r\n                    large = cmd.data[3 + a] === 1;\r\n                    decreasing = cmd.data[4 + a] === 1;\r\n                    end = getPoint(cmd, 5 + a);\r\n                    elliptic = rx !== ry;\r\n                    //first, rotate so we are dealing with a zero angle x-axis\r\n                    xAxis = new MakerJs.paths.Line(cmd.from, MakerJs.point.rotate(end, rotation, cmd.from));\r\n                    //next, un-distort any ellipse back into a circle in terms of x axis\r\n                    if (elliptic) {\r\n                        xAxis = MakerJs.path.distort(xAxis, 1, rx / ry);\r\n                    }\r\n                    //now create an arc, making sure we use the large and decreasing flags\r\n                    arc = new MakerJs.paths.Arc(xAxis.origin, xAxis.end, rx, large, decreasing);\r\n                    if (elliptic) {\r\n                        //scale up if radius was insufficient.\r\n                        if (rx < arc.radius) {\r\n                            scaleUp = arc.radius / rx;\r\n                            rx *= scaleUp;\r\n                            ry *= scaleUp;\r\n                        }\r\n                        //create an elliptical arc, this will re-distort\r\n                        e = new MakerJs.models.EllipticArc(arc, 1, ry / rx, options.bezierAccuracy);\r\n                        //un-rotate back to where it should be.\r\n                        MakerJs.model.rotate(e, -rotation, cmd.from);\r\n                        addModel(e);\r\n                    }\r\n                    else {\r\n                        //just use the arc\r\n                        //un-rotate back to where it should be.\r\n                        MakerJs.path.rotate(arc, -rotation, cmd.from);\r\n                        addPath(arc);\r\n                    }\r\n                    cmd.from = end;\r\n                }\r\n                return end;\r\n            };\r\n            map['C'] = function (cmd) {\r\n                var control1;\r\n                var control2;\r\n                var start = cmd.from;\r\n                var end;\r\n                for (var a = 0; a < cmd.data.length; a = a + 6) {\r\n                    cmd.from = start;\r\n                    control1 = getPoint(cmd, 0 + a, start);\r\n                    control2 = getPoint(cmd, 2 + a, start);\r\n                    end = getPoint(cmd, 4 + a, start);\r\n                    addModel(new MakerJs.models.BezierCurve(start, control1, control2, end, options.bezierAccuracy));\r\n                    start = end;\r\n                }\r\n                return end;\r\n            };\r\n            map['S'] = function (cmd) {\r\n                var control1;\r\n                var prevControl2;\r\n                var control2;\r\n                var start = cmd.from;\r\n                var end;\r\n                if (cmd.prev.command === 'C' || cmd.prev.command === 'S') {\r\n                    prevControl2 = getPoint(cmd.prev, -4);\r\n                }\r\n                else {\r\n                    prevControl2 = cmd.from;\r\n                }\r\n                for (var a = 0; a < cmd.data.length; a = a + 4) {\r\n                    cmd.from = start;\r\n                    control1 = MakerJs.point.rotate(prevControl2, 180, start);\r\n                    control2 = getPoint(cmd, 0 + a);\r\n                    end = getPoint(cmd, 2 + a);\r\n                    addModel(new MakerJs.models.BezierCurve(start, control1, control2, end, options.bezierAccuracy));\r\n                    start = end;\r\n                    prevControl2 = control2;\r\n                }\r\n                return end;\r\n            };\r\n            map['Q'] = function (cmd) {\r\n                var control;\r\n                var start = cmd.from;\r\n                var end;\r\n                for (var a = 0; a < cmd.data.length; a = a + 4) {\r\n                    cmd.from = start;\r\n                    control = getPoint(cmd, 0 + a);\r\n                    end = getPoint(cmd, 2 + a);\r\n                    addModel(new MakerJs.models.BezierCurve(start, control, end, options.bezierAccuracy));\r\n                    start = end;\r\n                }\r\n                return end;\r\n            };\r\n            map['T'] = function (cmd) {\r\n                var control;\r\n                var prevControl;\r\n                var end;\r\n                if (cmd.prev.command === 'Q') {\r\n                    prevControl = getPoint(cmd.prev, -4);\r\n                    control = MakerJs.point.rotate(prevControl, 180, cmd.from);\r\n                }\r\n                else if (cmd.prev.command === 'T') {\r\n                    cmd.prev.absolute = true;\r\n                    control = getPoint(cmd.prev, -2); //see below *\r\n                }\r\n                else {\r\n                    control = cmd.from;\r\n                }\r\n                for (var a = 0; a < cmd.data.length; a = a + 2) {\r\n                    end = getPoint(cmd, 0 + a);\r\n                    addModel(new MakerJs.models.BezierCurve(cmd.from, control, end, options.bezierAccuracy));\r\n                    cmd.from = end;\r\n                    control = MakerJs.point.rotate(control, 180, cmd.from);\r\n                }\r\n                //* save the control point in the data list, will be accessible from index 2\r\n                var p = MakerJs.point.mirror(control, false, true);\r\n                cmd.data.push.apply(cmd.data, p);\r\n                return end;\r\n            };\r\n            var firstPoint = [0, 0];\r\n            var currPoint = [0, 0];\r\n            var pathCount = 0;\r\n            var prevCommand;\r\n            var regexpCommands = /([achlmqstvz])([0-9e\\.,\\+-\\s]*)/ig;\r\n            var commandMatches;\r\n            while ((commandMatches = regexpCommands.exec(pathData)) !== null) {\r\n                if (commandMatches.index === regexpCommands.lastIndex) {\r\n                    regexpCommands.lastIndex++;\r\n                }\r\n                var command = commandMatches[1]; //0 = command and data, 1 = command, 2 = data\r\n                var dataString = commandMatches[2];\r\n                var currCmd = {\r\n                    command: command.toUpperCase(),\r\n                    data: [],\r\n                    from: currPoint,\r\n                    prev: prevCommand\r\n                };\r\n                if (command === currCmd.command) {\r\n                    currCmd.absolute = true;\r\n                }\r\n                currCmd.data = importer.parseNumericList(dataString);\r\n                var fn = map[currCmd.command];\r\n                if (fn) {\r\n                    currPoint = fn(currCmd);\r\n                }\r\n                prevCommand = currCmd;\r\n            }\r\n            return result;\r\n        }\r\n        importer.fromSVGPathData = fromSVGPathData;\r\n    })(importer = MakerJs.importer || (MakerJs.importer = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var layout;\r\n    (function (layout) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getChildPlacement(parentModel, baseline) {\r\n            //measure everything and cache the results\r\n            var atlas = new MakerJs.measure.Atlas(parentModel);\r\n            var measureParent = MakerJs.measure.modelExtents(parentModel, atlas);\r\n            //measure height of the model from the baseline 0\r\n            var parentTop = measureParent.high[1];\r\n            var cpa = [];\r\n            var xMap = {};\r\n            var walkOptions = {\r\n                beforeChildWalk: function (context) {\r\n                    var child = context.childModel;\r\n                    //get cached measurement of the child\r\n                    var m = atlas.modelMap[context.routeKey];\r\n                    if (!m)\r\n                        return;\r\n                    var childMeasure = MakerJs.measure.augment(m);\r\n                    //set a new origin at the x-center and y-baseline of the child\r\n                    MakerJs.model.originate(child, [childMeasure.center[0], parentTop * baseline]);\r\n                    //get the x-center of the child\r\n                    var x = child.origin[0] - measureParent.low[0];\r\n                    xMap[context.childId] = x;\r\n                    //get the x-center of the child as a percentage\r\n                    var xRatio = x / measureParent.width;\r\n                    cpa.push({ childId: context.childId, xRatio: xRatio });\r\n                    //do not walk the grandchildren. This is only for immediate children of the parentModel.\r\n                    return false;\r\n                }\r\n            };\r\n            MakerJs.model.walk(parentModel, walkOptions);\r\n            cpa.sort(function (a, b) { return a.xRatio - b.xRatio; });\r\n            var first = cpa[0];\r\n            var last = cpa[cpa.length - 1];\r\n            if (cpa.length > 1) {\r\n                var min = first.xRatio;\r\n                var max = last.xRatio;\r\n                var span = max - min;\r\n                cpa.forEach(function (cp) { return cp.xRatio = (cp.xRatio - min) / span; });\r\n            }\r\n            return {\r\n                cpa: cpa,\r\n                firstX: xMap[first.childId],\r\n                lastX: measureParent.width - xMap[last.childId]\r\n            };\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function moveAndRotate(parentModel, cpa, rotate) {\r\n            cpa.forEach(function (cp) {\r\n                var child = parentModel.models[cp.childId];\r\n                //move the child to the new location\r\n                child.origin = cp.origin;\r\n                //rotate the child\r\n                if (rotate)\r\n                    MakerJs.model.rotate(child, cp.angle, cp.origin);\r\n            });\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var onPathMap = {};\r\n        onPathMap[MakerJs.pathType.Arc] = function (arc, reversed, cpa) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            cpa.forEach(function (p) { return p.angle = reversed ? arc.endAngle - p.xRatio * arcSpan - 90 : arc.startAngle + p.xRatio * arcSpan + 90; });\r\n        };\r\n        onPathMap[MakerJs.pathType.Line] = function (line, reversed, cpa) {\r\n            var lineAngle = MakerJs.angle.ofLineInDegrees(line);\r\n            cpa.forEach(function (p) { return p.angle = lineAngle; });\r\n        };\r\n        /**\r\n         * Layout the children of a model along a path.\r\n         * The x-position of each child will be projected onto the path so that the proportion between children is maintained.\r\n         * Each child will be rotated such that it will be perpendicular to the path at the child's x-center.\r\n         *\r\n         * @param parentModel The model containing children to lay out.\r\n         * @param onPath The path on which to lay out.\r\n         * @param baseline Numeric percentage value of vertical displacement from the path. Default is zero.\r\n         * @param reversed Flag to travel along the path in reverse. Default is false.\r\n         * @param contain Flag to contain the children layout within the length of the path. Default is false.\r\n         * @param rotate Flag to rotate the child to perpendicular. Default is true.\r\n         * @returns The parentModel, for cascading.\r\n         */\r\n        function childrenOnPath(parentModel, onPath, baseline, reversed, contain, rotate) {\r\n            if (baseline === void 0) { baseline = 0; }\r\n            if (reversed === void 0) { reversed = false; }\r\n            if (contain === void 0) { contain = false; }\r\n            if (rotate === void 0) { rotate = true; }\r\n            var result = getChildPlacement(parentModel, baseline);\r\n            var cpa = result.cpa;\r\n            var chosenPath = onPath;\r\n            if (contain && cpa.length > 1) {\r\n                //see if we need to clip\r\n                var onPathLength = MakerJs.measure.pathLength(onPath);\r\n                if (result.firstX + result.lastX < onPathLength) {\r\n                    chosenPath = MakerJs.path.clone(onPath);\r\n                    MakerJs.path.alterLength(chosenPath, -result.firstX, true);\r\n                    MakerJs.path.alterLength(chosenPath, -result.lastX);\r\n                }\r\n            }\r\n            cpa.forEach(function (p) { return p.origin = MakerJs.point.middle(chosenPath, reversed ? 1 - p.xRatio : p.xRatio); });\r\n            var fn = onPathMap[chosenPath.type];\r\n            if (fn) {\r\n                fn(chosenPath, reversed, cpa);\r\n            }\r\n            moveAndRotate(parentModel, cpa, rotate);\r\n            return parentModel;\r\n        }\r\n        layout.childrenOnPath = childrenOnPath;\r\n        /**\r\n         * @private\r\n         */\r\n        function miterAngles(points, offsetAngle) {\r\n            var arc = new MakerJs.paths.Arc([0, 0], 0, 0, 0);\r\n            return points.map(function (p, i) {\r\n                var a;\r\n                if (i === 0) {\r\n                    a = MakerJs.angle.ofPointInDegrees(p, points[i + 1]) + 90;\r\n                }\r\n                else if (i === points.length - 1) {\r\n                    a = MakerJs.angle.ofPointInDegrees(points[i - 1], p) + 90;\r\n                }\r\n                else {\r\n                    arc.origin = p;\r\n                    arc.startAngle = MakerJs.angle.ofPointInDegrees(p, points[i + 1]);\r\n                    arc.endAngle = MakerJs.angle.ofPointInDegrees(p, points[i - 1]);\r\n                    a = MakerJs.angle.ofArcMiddle(arc);\r\n                }\r\n                return a + offsetAngle;\r\n            });\r\n        }\r\n        /**\r\n         * Layout the children of a model along a chain.\r\n         * The x-position of each child will be projected onto the chain so that the proportion between children is maintained.\r\n         * The projected positions of the children will become an array of points that approximate the chain.\r\n         * Each child will be rotated such that it will be mitered according to the vertex angles formed by this series of points.\r\n         *\r\n         * @param parentModel The model containing children to lay out.\r\n         * @param onChain The chain on which to lay out.\r\n         * @param baseline Numeric percentage value of vertical displacement from the chain. Default is zero.\r\n         * @param reversed Flag to travel along the chain in reverse. Default is false.\r\n         * @param contain Flag to contain the children layout within the length of the chain. Default is false.\r\n         * @param rotate Flag to rotate the child to mitered angle. Default is true.\r\n         * @returns The parentModel, for cascading.\r\n         */\r\n        function childrenOnChain(parentModel, onChain, baseline, reversed, contain, rotated) {\r\n            if (baseline === void 0) { baseline = 0; }\r\n            if (reversed === void 0) { reversed = false; }\r\n            if (contain === void 0) { contain = false; }\r\n            if (rotated === void 0) { rotated = true; }\r\n            var result = getChildPlacement(parentModel, baseline);\r\n            var cpa = result.cpa;\r\n            var chainLength = onChain.pathLength;\r\n            var points;\r\n            if (cpa.length > 1) {\r\n                if (contain)\r\n                    chainLength -= result.firstX + result.lastX;\r\n                var absolutes = cpa.map(function (cp) { return (reversed ? 1 - cp.xRatio : cp.xRatio) * chainLength; });\r\n                var relatives;\r\n                if (reversed)\r\n                    absolutes.reverse();\r\n                relatives = absolutes.map(function (ab, i) { return Math.abs(ab - (i == 0 ? 0 : absolutes[i - 1])); });\r\n                if (contain) {\r\n                    relatives[0] += reversed ? result.lastX : result.firstX;\r\n                }\r\n                else {\r\n                    relatives.shift();\r\n                }\r\n                //chain.toPoints always follows the chain in its order, from beginning to end. This is why we needed to contort the points input\r\n                points = MakerJs.chain.toPoints(onChain, relatives);\r\n                if (points.length < cpa.length) {\r\n                    //add last point of chain, since our distances exceeded the chain\r\n                    var endLink = onChain.links[onChain.links.length - 1];\r\n                    points.push(endLink.endPoints[endLink.reversed ? 0 : 1]);\r\n                }\r\n                if (contain)\r\n                    points.shift(); //delete the first point which is the beginning of the chain\r\n            }\r\n            else {\r\n                //get the first point and the middle point of the chain\r\n                points = MakerJs.chain.toPoints(onChain, 0.5 * chainLength);\r\n                points.length = 2;\r\n                //add the last point of the chain\r\n                points.push(onChain.links[onChain.links.length - 1].endPoints[onChain.links[onChain.links.length - 1].reversed ? 0 : 1]);\r\n            }\r\n            if (reversed)\r\n                points.reverse();\r\n            var angles = miterAngles(points, -90);\r\n            if (cpa.length > 1) {\r\n                cpa.forEach(function (cp, i) {\r\n                    cp.angle = angles[i];\r\n                    cp.origin = points[i];\r\n                });\r\n            }\r\n            else {\r\n                //use the middle point\r\n                cpa[0].angle = angles[1];\r\n                cpa[0].origin = points[1];\r\n            }\r\n            moveAndRotate(parentModel, cpa, rotated);\r\n            return parentModel;\r\n        }\r\n        layout.childrenOnChain = childrenOnChain;\r\n        /**\r\n         * Layout clones in a radial format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //daisy petals\r\n         * var makerjs = require('makerjs');\r\n         *\r\n         * var belt = new makerjs.models.Belt(5, 50, 20);\r\n         *\r\n         * makerjs.model.move(belt, [25, 0]);\r\n         *\r\n         * var petals = makerjs.layout.cloneToRadial(belt, 8, 45);\r\n         *\r\n         * document.write(makerjs.exporter.toSVG(petals));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param count Number of clones in the radial result.\r\n         * @param angleInDegrees angle of rotation between clones..\r\n         * @returns A new model with clones in a radial format.\r\n         */\r\n        function cloneToRadial(itemToClone, count, angleInDegrees, rotationOrigin) {\r\n            var result = {};\r\n            var add;\r\n            var rotateFn;\r\n            if (MakerJs.isModel(itemToClone)) {\r\n                add = result.models = {};\r\n                rotateFn = MakerJs.model.rotate;\r\n            }\r\n            else {\r\n                add = result.paths = {};\r\n                rotateFn = MakerJs.path.rotate;\r\n            }\r\n            for (var i = 0; i < count; i++) {\r\n                add[i] = rotateFn(MakerJs.cloneObject(itemToClone), i * angleInDegrees, rotationOrigin);\r\n            }\r\n            return result;\r\n        }\r\n        layout.cloneToRadial = cloneToRadial;\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneTo(dimension, itemToClone, count, margin) {\r\n            var result = {};\r\n            var add;\r\n            var measureFn;\r\n            var moveFn;\r\n            if (MakerJs.isModel(itemToClone)) {\r\n                measureFn = MakerJs.measure.modelExtents;\r\n                add = result.models = {};\r\n                moveFn = MakerJs.model.move;\r\n            }\r\n            else {\r\n                measureFn = MakerJs.measure.pathExtents;\r\n                add = result.paths = {};\r\n                moveFn = MakerJs.path.move;\r\n            }\r\n            var m = measureFn(itemToClone);\r\n            var size = m.high[dimension] - m.low[dimension];\r\n            for (var i = 0; i < count; i++) {\r\n                var origin = [0, 0];\r\n                origin[dimension] = i * (size + margin);\r\n                add[i] = moveFn(MakerJs.cloneObject(itemToClone), origin);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Layout clones in a column format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //Grooves for a finger joint\r\n         * var m = require('makerjs');\r\n         *\r\n         * var dogbone = new m.models.Dogbone(50, 20, 2, -1, false);\r\n         *\r\n         * var grooves = m.layout.cloneToColumn(dogbone, 5, 20);\r\n         *\r\n         * document.write(m.exporter.toSVG(grooves));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param count Number of clones in the column.\r\n         * @param margin Optional distance between each clone.\r\n         * @returns A new model with clones in a column.\r\n         */\r\n        function cloneToColumn(itemToClone, count, margin) {\r\n            if (margin === void 0) { margin = 0; }\r\n            return cloneTo(1, itemToClone, count, margin);\r\n        }\r\n        layout.cloneToColumn = cloneToColumn;\r\n        /**\r\n         * Layout clones in a row format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //Tongue and grooves for a box joint\r\n         * var m = require('makerjs');\r\n         * var tongueWidth = 60;\r\n         * var grooveWidth = 50;\r\n         * var grooveDepth = 30;\r\n         * var groove = new m.models.Dogbone(grooveWidth, grooveDepth, 5, 0, true);\r\n         *\r\n         * groove.paths['leftTongue'] = new m.paths.Line([-tongueWidth / 2, 0], [0, 0]);\r\n         * groove.paths['rightTongue'] = new m.paths.Line([grooveWidth, 0], [grooveWidth + tongueWidth / 2, 0]);\r\n         *\r\n         * var tongueAndGrooves = m.layout.cloneToRow(groove, 3);\r\n         *\r\n         * document.write(m.exporter.toSVG(tongueAndGrooves));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param count Number of clones in the row.\r\n         * @param margin Optional distance between each clone.\r\n         * @returns A new model with clones in a row.\r\n         */\r\n        function cloneToRow(itemToClone, count, margin) {\r\n            if (margin === void 0) { margin = 0; }\r\n            return cloneTo(0, itemToClone, count, margin);\r\n        }\r\n        layout.cloneToRow = cloneToRow;\r\n        /**\r\n         * Layout clones in a grid format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //Grid of squares\r\n         * var m = require('makerjs');\r\n         * var square = new m.models.Square(43);\r\n         * var grid = m.layout.cloneToGrid(square, 5, 5, 7);\r\n         * document.write(m.exporter.toSVG(grid));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param xCount Number of columns in the grid.\r\n         * @param yCount Number of rows in the grid.\r\n         * @param margin Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions.\r\n         * @returns A new model with clones in a grid layout.\r\n         */\r\n        function cloneToGrid(itemToClone, xCount, yCount, margin) {\r\n            var margins = getMargins(margin);\r\n            return cloneToColumn(cloneToRow(itemToClone, xCount, margins[0]), yCount, margins[1]);\r\n        }\r\n        layout.cloneToGrid = cloneToGrid;\r\n        /**\r\n         * @private\r\n         */\r\n        function getMargins(margin) {\r\n            if (Array.isArray(margin)) {\r\n                return margin;\r\n            }\r\n            else {\r\n                return [margin, margin];\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneToAlternatingRows(itemToClone, xCount, yCount, spacingFn) {\r\n            var modelToMeasure;\r\n            if (MakerJs.isModel(itemToClone)) {\r\n                modelToMeasure = itemToClone;\r\n            }\r\n            else {\r\n                modelToMeasure = { paths: { \"0\": itemToClone } };\r\n            }\r\n            var spacing = spacingFn(modelToMeasure);\r\n            var result = { models: {} };\r\n            for (var i = 0; i < yCount; i++) {\r\n                var i2 = i % 2;\r\n                result.models[i] = MakerJs.model.move(cloneToRow(itemToClone, xCount + i2, spacing.xMargin), [i2 * spacing.x, i * spacing.y]);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Layout clones in a brick format. Alternating rows will have an additional item in each row.\r\n         *\r\n         * Examples:\r\n         * ```\r\n         * //Brick wall\r\n         * var m = require('makerjs');\r\n         * var brick = new m.models.RoundRectangle(50, 30, 4);\r\n         * var wall = m.layout.cloneToBrick(brick, 8, 6, 3);\r\n         * document.write(m.exporter.toSVG(wall));\r\n         * ```\r\n         *\r\n         * ```\r\n         * //Fish scales\r\n         * var m = require('makerjs');\r\n         * var arc = new m.paths.Arc([0, 0], 50, 20, 160);\r\n         * var scales = m.layout.cloneToBrick(arc, 8, 20);\r\n         * document.write(m.exporter.toSVG(scales));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param xCount Number of columns in the brick grid.\r\n         * @param yCount Number of rows in the brick grid.\r\n         * @param margin Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions.\r\n         * @returns A new model with clones in a brick layout.\r\n         */\r\n        function cloneToBrick(itemToClone, xCount, yCount, margin) {\r\n            var margins = getMargins(margin);\r\n            function spacing(modelToMeasure) {\r\n                var m = MakerJs.measure.modelExtents(modelToMeasure);\r\n                var xMargin = margins[0] || 0;\r\n                var yMargin = margins[1] || 0;\r\n                return { x: (m.width + xMargin) / -2, y: m.height + yMargin, xMargin: xMargin };\r\n            }\r\n            return cloneToAlternatingRows(itemToClone, xCount, yCount, spacing);\r\n        }\r\n        layout.cloneToBrick = cloneToBrick;\r\n        /**\r\n         * Layout clones in a honeycomb format. Alternating rows will have an additional item in each row.\r\n         *\r\n         * Examples:\r\n         * ```\r\n         * //Honeycomb\r\n         * var m = require('makerjs');\r\n         * var hex = new m.models.Polygon(6, 50, 30);\r\n         * var pattern = m.layout.cloneToHoneycomb(hex, 8, 9, 10);\r\n         * document.write(m.exporter.toSVG(pattern));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param xCount Number of columns in the honeycomb grid.\r\n         * @param yCount Number of rows in the honeycomb grid.\r\n         * @param margin Optional distance between each clone.\r\n         * @returns A new model with clones in a honeycomb layout.\r\n         */\r\n        function cloneToHoneycomb(itemToClone, xCount, yCount, margin) {\r\n            if (margin === void 0) { margin = 0; }\r\n            function spacing(modelToMeasure) {\r\n                var hex = MakerJs.measure.boundingHexagon(modelToMeasure);\r\n                var width = 2 * MakerJs.solvers.equilateralAltitude(hex.radius);\r\n                var s = width + margin;\r\n                return { x: s / -2, y: MakerJs.solvers.equilateralAltitude(s), xMargin: margin };\r\n            }\r\n            return cloneToAlternatingRows(itemToClone, xCount, yCount, spacing);\r\n        }\r\n        layout.cloneToHoneycomb = cloneToHoneycomb;\r\n    })(layout = MakerJs.layout || (MakerJs.layout = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        /**\r\n         * @private\r\n         */\r\n        var hasLib = false;\r\n        /**\r\n         * @private\r\n         */\r\n        function ensureBezierLib() {\r\n            if (hasLib)\r\n                return;\r\n            try {\r\n                var lib = Bezier.prototype;\r\n                hasLib = true;\r\n            }\r\n            catch (e) {\r\n                throw \"Bezier library not found. If you are using Node, try running 'npm install' or if you are in the browser, download http://pomax.github.io/bezierjs/bezier.js to your website and add a script tag.\";\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var scratch;\r\n        /**\r\n         * @private\r\n         */\r\n        function getScratch(seed) {\r\n            var points = [seed.origin];\r\n            points.push.apply(points, seed.controls);\r\n            points.push(seed.end);\r\n            var bezierJsPoints = points.map(function (p) {\r\n                var bp = {\r\n                    x: p[0], y: p[1]\r\n                };\r\n                return bp;\r\n            });\r\n            if (!scratch) {\r\n                ensureBezierLib();\r\n                scratch = new Bezier(bezierJsPoints);\r\n            }\r\n            else {\r\n                //invoke the constructor on the same object\r\n                Bezier.apply(scratch, bezierJsPoints);\r\n            }\r\n            return scratch;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function BezierToSeed(b, range) {\r\n            var points = b.points.map(getIPoint);\r\n            var seed = new BezierSeed(points);\r\n            if (range) {\r\n                seed.parentRange = range;\r\n            }\r\n            return seed;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function seedToBezier(seed) {\r\n            var coords = [];\r\n            coords.push.apply(coords, seed.origin);\r\n            coords.push.apply(coords, seed.controls[0]);\r\n            if (seed.controls.length > 1) {\r\n                coords.push.apply(coords, seed.controls[1]);\r\n            }\r\n            coords.push.apply(coords, seed.end);\r\n            ensureBezierLib();\r\n            return new Bezier(coords);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getExtrema(b) {\r\n            var extrema = b.extrema().values\r\n                //round the numbers so we can compare them to each other\r\n                .map(function (m) { return MakerJs.round(m); })\r\n                //remove duplicates\r\n                .filter(function (value, index, self) { return self.indexOf(value) === index; })\r\n                //and put them in order\r\n                .sort();\r\n            if (extrema.length === 0)\r\n                return [0, 1];\r\n            //ensure leading zero\r\n            if (extrema[0] !== 0) {\r\n                extrema.unshift(0);\r\n            }\r\n            //ensure ending 1\r\n            if (extrema[extrema.length - 1] !== 1) {\r\n                extrema.push(1);\r\n            }\r\n            return extrema;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getIPoint(p) {\r\n            return [p.x, p.y];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var TPoint = /** @class */ (function () {\r\n            function TPoint(b, t, offset) {\r\n                this.t = t;\r\n                this.point = MakerJs.point.add(getIPoint(b.get(t)), offset);\r\n            }\r\n            return TPoint;\r\n        }());\r\n        /**\r\n         * @private\r\n         */\r\n        function getError(b, startT, endT, arc, arcReversed) {\r\n            var tSpan = endT - startT;\r\n            function m(ratio) {\r\n                var t = startT + tSpan * ratio;\r\n                var bp = getIPoint(b.get(t));\r\n                var ap = MakerJs.point.middle(arc, arcReversed ? 1 - ratio : ratio);\r\n                return MakerJs.measure.pointDistance(ap, bp);\r\n            }\r\n            return m(0.25) + m(0.75);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getLargestArc(b, startT, endT, accuracy) {\r\n            var arc, lastGoodArc;\r\n            var start = new TPoint(b, startT);\r\n            var end = new TPoint(b, endT);\r\n            var upper = end;\r\n            var lower = start;\r\n            var count = 0;\r\n            var test = upper;\r\n            var reversed;\r\n            while (count < 100) {\r\n                var middle = getIPoint(b.get((start.t + test.t) / 2));\r\n                //if the 3 points are linear, this may throw\r\n                try {\r\n                    arc = new MakerJs.paths.Arc(start.point, middle, test.point);\r\n                }\r\n                catch (e) {\r\n                    if (lastGoodArc) {\r\n                        return lastGoodArc;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                //only need to test once to see if this arc is polar / clockwise\r\n                if (reversed === undefined) {\r\n                    reversed = MakerJs.measure.isPointEqual(start.point, MakerJs.point.fromAngleOnCircle(arc.endAngle, arc));\r\n                }\r\n                //now we have a valid arc, measure the error.\r\n                var error = getError(b, startT, test.t, arc, reversed);\r\n                //if error is within accuracy, this becomes the lower\r\n                if (error <= accuracy) {\r\n                    arc.bezierData = {\r\n                        startT: startT,\r\n                        endT: test.t\r\n                    };\r\n                    lower = test;\r\n                    lastGoodArc = arc;\r\n                }\r\n                else {\r\n                    upper = test;\r\n                }\r\n                //exit if lower is the end\r\n                if (lower.t === upper.t || (lastGoodArc && (lastGoodArc !== arc) && (MakerJs.angle.ofArcSpan(arc) - MakerJs.angle.ofArcSpan(lastGoodArc)) < .5)) {\r\n                    return lastGoodArc;\r\n                }\r\n                count++;\r\n                test = new TPoint(b, (lower.t + upper.t) / 2);\r\n            }\r\n            //arc failed, so return a line\r\n            var line = new MakerJs.paths.Line(start.point, test.point);\r\n            line.bezierData = {\r\n                startT: startT,\r\n                endT: test.t\r\n            };\r\n            return line;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getArcs(bc, b, accuracy, startT, endT, base) {\r\n            var added = 0;\r\n            var arc;\r\n            while (startT < endT) {\r\n                arc = getLargestArc(b, startT, endT, accuracy);\r\n                //add an arc\r\n                startT = arc.bezierData.endT;\r\n                var len = MakerJs.measure.pathLength(arc);\r\n                if (len < .0001) {\r\n                    continue;\r\n                }\r\n                bc.paths[arc.type + '_' + (base + added)] = arc;\r\n                added++;\r\n            }\r\n            return added;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getActualBezierRange(curve, arc, endpoints, offset) {\r\n            var b = getScratch(curve.seed);\r\n            var tPoints = [arc.bezierData.startT, arc.bezierData.endT].map(function (t) { return new TPoint(b, t, offset); });\r\n            var ends = endpoints.slice();\r\n            //clipped arcs will still have endpoints closer to the original endpoints\r\n            var endpointDistancetoStart = ends.map(function (e) { return MakerJs.measure.pointDistance(e, tPoints[0].point); });\r\n            if (endpointDistancetoStart[0] > endpointDistancetoStart[1])\r\n                ends.reverse();\r\n            for (var i = 2; i--;) {\r\n                if (!MakerJs.measure.isPointEqual(ends[i], tPoints[i].point)) {\r\n                    return null;\r\n                }\r\n            }\r\n            return arc.bezierData;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getChainBezierRange(curve, c, layer, addToLayer) {\r\n            var endLinks = [c.links[0], c.links[c.links.length - 1]];\r\n            if (endLinks[0].walkedPath.pathContext.bezierData.startT > endLinks[1].walkedPath.pathContext.bezierData.startT) {\r\n                MakerJs.chain.reverse(c);\r\n                endLinks.reverse();\r\n            }\r\n            var actualBezierRanges = endLinks.map(function (endLink) { return getActualBezierRange(curve, endLink.walkedPath.pathContext, endLink.endPoints, endLink.walkedPath.offset); });\r\n            var result = {\r\n                startT: actualBezierRanges[0] ? actualBezierRanges[0].startT : null,\r\n                endT: actualBezierRanges[1] ? actualBezierRanges[1].endT : null\r\n            };\r\n            if (result.startT !== null && result.endT !== null) {\r\n                return result;\r\n            }\r\n            else if (c.links.length > 2) {\r\n                if (result.startT === null) {\r\n                    //exclude the first from the chain\r\n                    addToLayer(c.links[0].walkedPath.pathContext, layer, true);\r\n                    result.startT = c.links[1].walkedPath.pathContext.bezierData.startT;\r\n                }\r\n                if (result.endT === null) {\r\n                    //exclude the last from the chain\r\n                    addToLayer(c.links[c.links.length - 1].walkedPath.pathContext, layer, true);\r\n                    result.endT = c.links[c.links.length - 2].walkedPath.pathContext.bezierData.endT;\r\n                }\r\n                return result;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         * Class for bezier seed.\r\n         */\r\n        var BezierSeed = /** @class */ (function () {\r\n            function BezierSeed() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = MakerJs.pathType.BezierSeed;\r\n                switch (args.length) {\r\n                    case 1: //point array\r\n                        var points = args[0];\r\n                        this.origin = points[0];\r\n                        if (points.length === 3) {\r\n                            this.controls = [points[1]];\r\n                            this.end = points[2];\r\n                        }\r\n                        else if (points.length === 4) {\r\n                            this.controls = [points[1], points[2]];\r\n                            this.end = points[3];\r\n                        }\r\n                        else {\r\n                            this.end = points[1];\r\n                        }\r\n                        break;\r\n                    case 3: //quadratic or cubic\r\n                        if (Array.isArray(args[1])) {\r\n                            this.controls = args[1];\r\n                        }\r\n                        else {\r\n                            this.controls = [args[1]];\r\n                        }\r\n                        this.end = args[2];\r\n                        break;\r\n                    case 4: //cubic params\r\n                        this.controls = [args[1], args[2]];\r\n                        this.end = args[3];\r\n                        break;\r\n                }\r\n            }\r\n            return BezierSeed;\r\n        }());\r\n        var BezierCurve = /** @class */ (function () {\r\n            function BezierCurve() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = BezierCurve.typeName;\r\n                var isArrayArg0 = Array.isArray(args[0]);\r\n                switch (args.length) {\r\n                    case 2:\r\n                        if (isArrayArg0) {\r\n                            this.accuracy = args[1];\r\n                        }\r\n                        else {\r\n                            //seed\r\n                            this.seed = args[0];\r\n                            this.accuracy = args[1];\r\n                            break;\r\n                        }\r\n                    //fall through to point array\r\n                    case 1: //point array or seed\r\n                        if (isArrayArg0) {\r\n                            var points = args[0];\r\n                            this.seed = new BezierSeed(points);\r\n                        }\r\n                        else {\r\n                            this.seed = args[0];\r\n                        }\r\n                        break;\r\n                    default:\r\n                        switch (args.length) {\r\n                            case 4:\r\n                                if (MakerJs.isPoint(args[3])) {\r\n                                    this.seed = new BezierSeed(args);\r\n                                    break;\r\n                                }\r\n                                else {\r\n                                    this.accuracy = args[3];\r\n                                    //fall through\r\n                                }\r\n                            case 3:\r\n                                if (isArrayArg0) {\r\n                                    this.seed = new BezierSeed(args.slice(0, 3));\r\n                                }\r\n                                break;\r\n                            case 5:\r\n                                this.accuracy = args[4];\r\n                                this.seed = new BezierSeed(args.slice(0, 4));\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                this.paths = {};\r\n                if (MakerJs.measure.isBezierSeedLinear(this.seed)) {\r\n                    //use a line and exit\r\n                    var line = new MakerJs.paths.Line(MakerJs.point.clone(this.seed.origin), MakerJs.point.clone(this.seed.end));\r\n                    line.bezierData = {\r\n                        startT: 0,\r\n                        endT: 1\r\n                    };\r\n                    this.paths = {\r\n                        \"0\": line\r\n                    };\r\n                    return;\r\n                }\r\n                var b = seedToBezier(this.seed);\r\n                var extrema = getExtrema(b);\r\n                this.paths = {};\r\n                //use arcs\r\n                if (!this.accuracy) {\r\n                    //get a default accuracy relative to the size of the bezier\r\n                    var len = b.length();\r\n                    //set the default to be a combination of fast rendering and good smoothing.\r\n                    this.accuracy = len / 100;\r\n                }\r\n                var count = 0;\r\n                for (var i = 1; i < extrema.length; i++) {\r\n                    var extremaSpan = extrema[i] - extrema[i - 1];\r\n                    count += getArcs(this, b, this.accuracy * extremaSpan, extrema[i - 1], extrema[i], count);\r\n                }\r\n            }\r\n            BezierCurve.getBezierSeeds = function (curve, options) {\r\n                if (options === void 0) { options = {}; }\r\n                options.shallow = true;\r\n                options.unifyBeziers = false;\r\n                var seedsByLayer = {};\r\n                var addToLayer = function (pathToAdd, layer, clone) {\r\n                    if (clone === void 0) { clone = false; }\r\n                    if (!seedsByLayer[layer]) {\r\n                        seedsByLayer[layer] = [];\r\n                    }\r\n                    seedsByLayer[layer].push(clone ? MakerJs.path.clone(pathToAdd) : pathToAdd);\r\n                };\r\n                MakerJs.model.findChains(curve, function (chains, loose, layer) {\r\n                    chains.forEach(function (c) {\r\n                        var range = getChainBezierRange(curve, c, layer, addToLayer);\r\n                        if (range) {\r\n                            var b = getScratch(curve.seed);\r\n                            var piece = b.split(range.startT, range.endT);\r\n                            addToLayer(BezierToSeed(piece), layer);\r\n                        }\r\n                        else {\r\n                            c.links.forEach(function (link) { return addToLayer(link.walkedPath.pathContext, layer, true); });\r\n                        }\r\n                    });\r\n                    loose.forEach(function (wp) {\r\n                        if (wp.pathContext.type === MakerJs.pathType.Line) {\r\n                            //bezier is linear\r\n                            return addToLayer(wp.pathContext, layer, true);\r\n                        }\r\n                        var range = getActualBezierRange(curve, wp.pathContext, MakerJs.point.fromPathEnds(wp.pathContext), wp.offset);\r\n                        if (range) {\r\n                            var b = getScratch(curve.seed);\r\n                            var piece = b.split(range.startT, range.endT);\r\n                            addToLayer(BezierToSeed(piece), layer);\r\n                        }\r\n                        else {\r\n                            addToLayer(wp.pathContext, layer, true);\r\n                        }\r\n                    });\r\n                }, options);\r\n                if (options.byLayers) {\r\n                    return seedsByLayer;\r\n                }\r\n                else {\r\n                    return seedsByLayer[''];\r\n                }\r\n            };\r\n            BezierCurve.computeLength = function (seed) {\r\n                var b = seedToBezier(seed);\r\n                return b.length();\r\n            };\r\n            BezierCurve.computePoint = function (seed, t) {\r\n                var s = getScratch(seed);\r\n                var computedPoint = s.compute(t);\r\n                return getIPoint(computedPoint);\r\n            };\r\n            BezierCurve.typeName = 'BezierCurve';\r\n            return BezierCurve;\r\n        }());\r\n        models.BezierCurve = BezierCurve;\r\n        BezierCurve.metaParameters = [\r\n            {\r\n                title: \"points\", type: \"select\", value: [\r\n                    [[100, 0], [-80, -60], [100, 220], [100, 60]],\r\n                    [[0, 0], [100, 0], [100, 100]],\r\n                    [[0, 0], [20, 0], [80, 100], [100, 100]]\r\n                ]\r\n            }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        /**\r\n         * @private\r\n         * Our maximum circular arc span for accurate representation by a cubic curve.\r\n         */\r\n        var maxBezierArcspan = 45;\r\n        /**\r\n         * @private\r\n         */\r\n        function controlYForCircularCubic(arcSpanInRadians) {\r\n            //from http://pomax.github.io/bezierinfo/#circles_cubic\r\n            return 4 * (Math.tan(arcSpanInRadians / 4) / 3);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function controlPointsForCircularCubic(arc) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            //compute y for radius of 1\r\n            var y = controlYForCircularCubic(MakerJs.angle.toRadians(arcSpan));\r\n            //multiply by radius\r\n            var c1 = [arc.radius, arc.radius * y];\r\n            //get second control point by mirroring, then rotating\r\n            var c2 = MakerJs.point.rotate(MakerJs.point.mirror(c1, false, true), arcSpan, [0, 0]);\r\n            //rotate again to start angle, then offset by arc's origin\r\n            return [c1, c2].map(function (p) { return MakerJs.point.add(arc.origin, MakerJs.point.rotate(p, arc.startAngle, [0, 0])); });\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function bezierSeedFromArc(arc) {\r\n            var span = MakerJs.angle.ofArcSpan(arc);\r\n            if (span <= 90) {\r\n                var endPoints = MakerJs.point.fromPathEnds(arc);\r\n                var controls = controlPointsForCircularCubic(arc);\r\n                return {\r\n                    type: MakerJs.pathType.BezierSeed,\r\n                    origin: endPoints[0],\r\n                    controls: controls,\r\n                    end: endPoints[1]\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n        var Ellipse = /** @class */ (function () {\r\n            function Ellipse() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _this = this;\r\n                this.models = {};\r\n                var n = 360 / maxBezierArcspan;\r\n                var accuracy;\r\n                var isPointArgs0 = MakerJs.isPoint(args[0]);\r\n                var realArgs = function (numArgs) {\r\n                    switch (numArgs) {\r\n                        case 2:\r\n                            if (isPointArgs0) {\r\n                                //origin, radius\r\n                                _this.origin = args[0];\r\n                            }\r\n                            break;\r\n                        case 3:\r\n                            //origin, rx, ry\r\n                            _this.origin = args[0];\r\n                            break;\r\n                        case 4:\r\n                            //cx, cy, rx, ry\r\n                            _this.origin = [args[0], args[1]];\r\n                            break;\r\n                    }\r\n                    //construct a bezier approximation for an arc with radius of 1.\r\n                    var a = 360 / n;\r\n                    var arc = new MakerJs.paths.Arc([0, 0], 1, 0, a);\r\n                    //clone and rotate to complete a circle\r\n                    for (var i = 0; i < n; i++) {\r\n                        var seed = bezierSeedFromArc(arc);\r\n                        switch (numArgs) {\r\n                            case 1:\r\n                                //radius\r\n                                seed = MakerJs.path.scale(seed, args[0]);\r\n                                break;\r\n                            case 2:\r\n                                if (isPointArgs0) {\r\n                                    //origin, radius\r\n                                    seed = MakerJs.path.scale(seed, args[1]);\r\n                                }\r\n                                else {\r\n                                    //rx, ry\r\n                                    seed = MakerJs.path.distort(seed, args[0], args[1]);\r\n                                }\r\n                                break;\r\n                            case 3:\r\n                                //origin, rx, ry\r\n                                seed = MakerJs.path.distort(seed, args[1], args[2]);\r\n                                break;\r\n                            case 4:\r\n                                //cx, cy, rx, ry\r\n                                seed = MakerJs.path.distort(seed, args[2], args[3]);\r\n                                break;\r\n                        }\r\n                        _this.models['Curve_' + (1 + i)] = new models.BezierCurve(seed, accuracy);\r\n                        arc.startAngle += a;\r\n                        arc.endAngle += a;\r\n                    }\r\n                };\r\n                switch (args.length) {\r\n                    case 2:\r\n                        realArgs(2);\r\n                        break;\r\n                    case 3:\r\n                        if (isPointArgs0) {\r\n                            realArgs(3);\r\n                        }\r\n                        else {\r\n                            accuracy = args[2];\r\n                            realArgs(2);\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        if (isPointArgs0) {\r\n                            accuracy = args[3];\r\n                            realArgs(3);\r\n                        }\r\n                        else {\r\n                            realArgs(4);\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        accuracy = args[4];\r\n                        realArgs(4);\r\n                        break;\r\n                }\r\n            }\r\n            return Ellipse;\r\n        }());\r\n        models.Ellipse = Ellipse;\r\n        Ellipse.metaParameters = [\r\n            { title: \"radiusX\", type: \"range\", min: 1, max: 50, value: 50 },\r\n            { title: \"radiusY\", type: \"range\", min: 1, max: 50, value: 25 }\r\n        ];\r\n        var EllipticArc = /** @class */ (function () {\r\n            function EllipticArc() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.models = {};\r\n                var arc;\r\n                var accuracy;\r\n                var distortX;\r\n                var distortY;\r\n                if (MakerJs.isPathArc(args[0])) {\r\n                    arc = args[0];\r\n                    distortX = args[1];\r\n                    distortY = args[2];\r\n                    accuracy = args[3];\r\n                }\r\n                else {\r\n                    arc = new MakerJs.paths.Arc([0, 0], 1, args[0], args[1]);\r\n                    distortX = args[2];\r\n                    distortY = args[3];\r\n                    accuracy = args[4];\r\n                }\r\n                var span = MakerJs.angle.ofArcSpan(arc);\r\n                //split into equal chunks, no larger than max chunk size\r\n                var count = Math.ceil(span / maxBezierArcspan);\r\n                var subSpan = span / count;\r\n                var subArc = MakerJs.path.clone(arc);\r\n                for (var i = 0; i < count; i++) {\r\n                    subArc.startAngle = arc.startAngle + (i * subSpan);\r\n                    subArc.endAngle = subArc.startAngle + subSpan;\r\n                    var seed = bezierSeedFromArc(subArc);\r\n                    seed = MakerJs.path.distort(seed, distortX, distortY);\r\n                    this.models['Curve_' + (1 + i)] = new models.BezierCurve(seed, accuracy);\r\n                }\r\n            }\r\n            return EllipticArc;\r\n        }());\r\n        models.EllipticArc = EllipticArc;\r\n        EllipticArc.metaParameters = [\r\n            { title: \"startAngle\", type: \"range\", min: 0, max: 90, value: 0 },\r\n            { title: \"endAngle\", type: \"range\", min: 90, max: 360, value: 180 },\r\n            { title: \"radiusX\", type: \"range\", min: 1, max: 50, value: 50 },\r\n            { title: \"radiusY\", type: \"range\", min: 1, max: 50, value: 25 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getPoints(arg) {\r\n            var coords;\r\n            if (Array.isArray(arg)) {\r\n                if (MakerJs.isPoint(arg[0])) {\r\n                    return arg;\r\n                }\r\n                coords = arg;\r\n            }\r\n            else {\r\n                coords = MakerJs.importer.parseNumericList(arg);\r\n            }\r\n            var points = [];\r\n            for (var i = 0; i < coords.length; i += 2) {\r\n                points.push([coords[i], coords[i + 1]]);\r\n            }\r\n            return points;\r\n        }\r\n        var ConnectTheDots = /** @class */ (function () {\r\n            function ConnectTheDots() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _this = this;\r\n                this.paths = {};\r\n                var isClosed;\r\n                var points;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        isClosed = true;\r\n                        points = getPoints(args[0]);\r\n                        break;\r\n                    case 2:\r\n                        isClosed = args[0];\r\n                        points = getPoints(args[1]);\r\n                        break;\r\n                }\r\n                var connect = function (a, b, skipZeroDistance) {\r\n                    if (skipZeroDistance === void 0) { skipZeroDistance = false; }\r\n                    if (skipZeroDistance && MakerJs.measure.pointDistance(points[a], points[b]) == 0)\r\n                        return;\r\n                    _this.paths[\"ShapeLine\" + i] = new MakerJs.paths.Line(points[a], points[b]);\r\n                };\r\n                for (var i = 1; i < points.length; i++) {\r\n                    connect(i - 1, i);\r\n                }\r\n                if (isClosed && points.length > 2) {\r\n                    connect(points.length - 1, 0, true);\r\n                }\r\n            }\r\n            return ConnectTheDots;\r\n        }());\r\n        models.ConnectTheDots = ConnectTheDots;\r\n        ConnectTheDots.metaParameters = [\r\n            { title: \"closed\", type: \"bool\", value: true },\r\n            {\r\n                title: \"points\", type: \"select\", value: [\r\n                    [[0, 0], [40, 40], [60, 20], [100, 100], [60, 60], [40, 80]],\r\n                    [[0, 0], [100, 0], [50, 87]],\r\n                    [-10, 0, 10, 0, 0, 20],\r\n                    '-10 0 10 0 0 20',\r\n                ]\r\n            }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Polygon = /** @class */ (function () {\r\n            function Polygon(numberOfSides, radius, firstCornerAngleInDegrees, circumscribed) {\r\n                this.paths = {};\r\n                this.paths = new models.ConnectTheDots(true, Polygon.getPoints(numberOfSides, radius, firstCornerAngleInDegrees, circumscribed)).paths;\r\n            }\r\n            Polygon.circumscribedRadius = function (radius, angleInRadians) {\r\n                return radius / Math.cos(angleInRadians / 2);\r\n            };\r\n            Polygon.getPoints = function (numberOfSides, radius, firstCornerAngleInDegrees, circumscribed) {\r\n                if (firstCornerAngleInDegrees === void 0) { firstCornerAngleInDegrees = 0; }\r\n                if (circumscribed === void 0) { circumscribed = false; }\r\n                var points = [];\r\n                var a1 = MakerJs.angle.toRadians(firstCornerAngleInDegrees);\r\n                var a = 2 * Math.PI / numberOfSides;\r\n                if (circumscribed) {\r\n                    radius = Polygon.circumscribedRadius(radius, a);\r\n                }\r\n                for (var i = 0; i < numberOfSides; i++) {\r\n                    points.push(MakerJs.point.fromPolar(a * i + a1, radius));\r\n                }\r\n                return points;\r\n            };\r\n            return Polygon;\r\n        }());\r\n        models.Polygon = Polygon;\r\n        Polygon.metaParameters = [\r\n            { title: \"number of sides\", type: \"range\", min: 3, max: 24, value: 6 },\r\n            { title: \"radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"offset angle\", type: \"range\", min: 0, max: 180, value: 0 },\r\n            { title: \"radius on flats (vs radius on vertexes)\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Holes = /** @class */ (function () {\r\n            /**\r\n             * Create an array of circles of the same radius from an array of center points.\r\n             *\r\n             * Example:\r\n             * ```\r\n             * //Create some holes from an array of points\r\n             * var makerjs = require('makerjs');\r\n             * var model = new makerjs.models.Holes(10, [[0, 0],[50, 0],[25, 40]]);\r\n             * var svg = makerjs.exporter.toSVG(model);\r\n             * document.write(svg);\r\n             * ```\r\n             *\r\n             * @param holeRadius Hole radius.\r\n             * @param points Array of points for origin of each hole.\r\n             * @param ids Optional array of corresponding path ids for the holes.\r\n             */\r\n            function Holes(holeRadius, points, ids) {\r\n                this.paths = {};\r\n                for (var i = 0; i < points.length; i++) {\r\n                    var id = ids ? ids[i] : i.toString();\r\n                    this.paths[id] = new MakerJs.paths.Circle(points[i], holeRadius);\r\n                }\r\n            }\r\n            return Holes;\r\n        }());\r\n        models.Holes = Holes;\r\n        Holes.metaParameters = [\r\n            { title: \"holeRadius\", type: \"range\", min: .1, max: 10, step: .1, value: 1 },\r\n            {\r\n                title: \"points\", type: \"select\", value: [\r\n                    [[0, 0], [10, 10], [20, 20], [30, 30], [40, 40], [50, 50], [60, 60], [70, 70], [80, 80]],\r\n                    [[0, 0], [0, 25], [0, 50], [0, 75], [0, 100], [25, 50], [50, 50], [75, 50], [100, 100], [100, 75], [100, 50], [100, 25], [100, 0]]\r\n                ]\r\n            }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var BoltCircle = /** @class */ (function () {\r\n            function BoltCircle(boltRadius, holeRadius, boltCount, firstBoltAngleInDegrees) {\r\n                if (firstBoltAngleInDegrees === void 0) { firstBoltAngleInDegrees = 0; }\r\n                this.paths = {};\r\n                var points = models.Polygon.getPoints(boltCount, boltRadius, firstBoltAngleInDegrees);\r\n                var ids = points.map(function (p, i) { return \"bolt \" + i; });\r\n                this.paths = new models.Holes(holeRadius, points, ids).paths;\r\n            }\r\n            return BoltCircle;\r\n        }());\r\n        models.BoltCircle = BoltCircle;\r\n        BoltCircle.metaParameters = [\r\n            { title: \"bolt circle radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"hole radius\", type: \"range\", min: 1, max: 50, value: 5 },\r\n            { title: \"bolt count\", type: \"range\", min: 3, max: 24, value: 12 },\r\n            { title: \"offset angle\", type: \"range\", min: 0, max: 180, value: 0 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var BoltRectangle = /** @class */ (function () {\r\n            function BoltRectangle(width, height, holeRadius) {\r\n                this.paths = {};\r\n                var points = [[0, 0], [width, 0], [width, height], [0, height]];\r\n                var ids = [\"BottomLeft_bolt\", \"BottomRight_bolt\", \"TopRight_bolt\", \"TopLeft_bolt\"];\r\n                this.paths = new models.Holes(holeRadius, points, ids).paths;\r\n            }\r\n            return BoltRectangle;\r\n        }());\r\n        models.BoltRectangle = BoltRectangle;\r\n        BoltRectangle.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"hole radius\", type: \"range\", min: 1, max: 50, value: 5 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Dogbone = /** @class */ (function () {\r\n            /**\r\n             * Create a dogbone from width, height, corner radius, style, and bottomless flag.\r\n             *\r\n             * Example:\r\n             * ```\r\n             * var d = new makerjs.models.Dogbone(50, 100, 5);\r\n             * ```\r\n             *\r\n             * @param width Width of the rectangle.\r\n             * @param height Height of the rectangle.\r\n             * @param radius Corner radius.\r\n             * @param style Optional corner style: 0 (default) for dogbone, 1 for vertical, -1 for horizontal.\r\n             * @param bottomless Optional flag to omit the bottom line and bottom corners (default false).\r\n             */\r\n            function Dogbone(width, height, radius, style, bottomless) {\r\n                if (style === void 0) { style = 0; }\r\n                if (bottomless === void 0) { bottomless = false; }\r\n                this.paths = {};\r\n                var maxSide = Math.min(height, width) / 2;\r\n                var maxRadius;\r\n                switch (style) {\r\n                    case -1: //horizontal\r\n                    case 1: //vertical\r\n                        maxRadius = maxSide / 2;\r\n                        break;\r\n                    case 0: //equal\r\n                    default:\r\n                        maxRadius = maxSide * Math.SQRT2 / 2;\r\n                        break;\r\n                }\r\n                radius = Math.min(radius, maxRadius);\r\n                var ax;\r\n                var ay;\r\n                var lx;\r\n                var ly;\r\n                var apexes;\r\n                switch (style) {\r\n                    case -1:\r\n                        ax = 0;\r\n                        ay = radius;\r\n                        lx = 0;\r\n                        ly = radius * 2;\r\n                        apexes = [180, 0, 0, 180];\r\n                        break;\r\n                    case 1:\r\n                        ax = radius;\r\n                        ay = 0;\r\n                        lx = radius * 2;\r\n                        ly = 0;\r\n                        apexes = [270, 270, 90, 90];\r\n                        break;\r\n                    case 0:\r\n                    default:\r\n                        ax = ay = radius / Math.SQRT2;\r\n                        lx = ly = ax * 2;\r\n                        apexes = [225, 315, 45, 135];\r\n                        break;\r\n                }\r\n                if (bottomless) {\r\n                    this.paths['Left'] = new MakerJs.paths.Line([0, 0], [0, height - ly]);\r\n                    this.paths['Right'] = new MakerJs.paths.Line([width, 0], [width, height - ly]);\r\n                }\r\n                else {\r\n                    this.paths['Left'] = new MakerJs.paths.Line([0, ly], [0, height - ly]);\r\n                    this.paths['Right'] = new MakerJs.paths.Line([width, ly], [width, height - ly]);\r\n                    this.paths['Bottom'] = new MakerJs.paths.Line([lx, 0], [width - lx, 0]);\r\n                    this.paths[\"BottomLeft\"] = new MakerJs.paths.Arc([ax, ay], radius, apexes[0] - 90, apexes[0] + 90);\r\n                    this.paths[\"BottomRight\"] = new MakerJs.paths.Arc([width - ax, ay], radius, apexes[1] - 90, apexes[1] + 90);\r\n                }\r\n                this.paths[\"TopRight\"] = new MakerJs.paths.Arc([width - ax, height - ay], radius, apexes[2] - 90, apexes[2] + 90);\r\n                this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([ax, height - ay], radius, apexes[3] - 90, apexes[3] + 90);\r\n                this.paths['Top'] = new MakerJs.paths.Line([lx, height], [width - lx, height]);\r\n            }\r\n            return Dogbone;\r\n        }());\r\n        models.Dogbone = Dogbone;\r\n        Dogbone.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 5 },\r\n            { title: \"style\", type: \"select\", value: [0, 1, -1] },\r\n            { title: \"bottomless\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Dome = /** @class */ (function () {\r\n            function Dome(width, height, radius, bottomless) {\r\n                this.paths = {};\r\n                var w2 = width / 2;\r\n                if (radius < 0)\r\n                    radius = 0;\r\n                if (radius === void 0)\r\n                    radius = w2;\r\n                radius = Math.min(radius, w2);\r\n                radius = Math.min(radius, height);\r\n                var wt = Math.max(w2 - radius, 0);\r\n                var hr = Math.max(height - radius, 0);\r\n                if (!bottomless) {\r\n                    this.paths[\"Bottom\"] = new MakerJs.paths.Line([-w2, 0], [w2, 0]);\r\n                }\r\n                if (hr) {\r\n                    this.paths[\"Left\"] = new MakerJs.paths.Line([-w2, 0], [-w2, hr]);\r\n                    this.paths[\"Right\"] = new MakerJs.paths.Line([w2, 0], [w2, hr]);\r\n                }\r\n                if (radius > 0) {\r\n                    this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([-wt, hr], radius, 90, 180);\r\n                    this.paths[\"TopRight\"] = new MakerJs.paths.Arc([wt, hr], radius, 0, 90);\r\n                }\r\n                if (wt) {\r\n                    this.paths[\"Top\"] = new MakerJs.paths.Line([-wt, height], [wt, height]);\r\n                }\r\n            }\r\n            return Dome;\r\n        }());\r\n        models.Dome = Dome;\r\n        Dome.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 25 },\r\n            { title: \"bottomless\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var RoundRectangle = /** @class */ (function () {\r\n            function RoundRectangle() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.paths = {};\r\n                var width;\r\n                var height;\r\n                var radius = 0;\r\n                switch (args.length) {\r\n                    case 3:\r\n                        width = args[0];\r\n                        height = args[1];\r\n                        radius = args[2];\r\n                        break;\r\n                    case 2:\r\n                        radius = args[1];\r\n                    //fall through to 1\r\n                    case 1:\r\n                        var m = MakerJs.measure.modelExtents(args[0]);\r\n                        this.origin = MakerJs.point.subtract(m.low, [radius, radius]);\r\n                        width = m.high[0] - m.low[0] + 2 * radius;\r\n                        height = m.high[1] - m.low[1] + 2 * radius;\r\n                        break;\r\n                }\r\n                var maxRadius = Math.min(height, width) / 2;\r\n                radius = Math.min(radius, maxRadius);\r\n                var wr = width - radius;\r\n                var hr = height - radius;\r\n                if (radius > 0) {\r\n                    this.paths[\"BottomLeft\"] = new MakerJs.paths.Arc([radius, radius], radius, 180, 270);\r\n                    this.paths[\"BottomRight\"] = new MakerJs.paths.Arc([wr, radius], radius, 270, 0);\r\n                    this.paths[\"TopRight\"] = new MakerJs.paths.Arc([wr, hr], radius, 0, 90);\r\n                    this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([radius, hr], radius, 90, 180);\r\n                }\r\n                if (wr - radius > 0) {\r\n                    this.paths[\"Bottom\"] = new MakerJs.paths.Line([radius, 0], [wr, 0]);\r\n                    this.paths[\"Top\"] = new MakerJs.paths.Line([wr, height], [radius, height]);\r\n                }\r\n                if (hr - radius > 0) {\r\n                    this.paths[\"Right\"] = new MakerJs.paths.Line([width, radius], [width, hr]);\r\n                    this.paths[\"Left\"] = new MakerJs.paths.Line([0, hr], [0, radius]);\r\n                }\r\n            }\r\n            return RoundRectangle;\r\n        }());\r\n        models.RoundRectangle = RoundRectangle;\r\n        RoundRectangle.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 11 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Oval = /** @class */ (function () {\r\n            function Oval(width, height) {\r\n                this.paths = {};\r\n                this.paths = new models.RoundRectangle(width, height, Math.min(height / 2, width / 2)).paths;\r\n            }\r\n            return Oval;\r\n        }());\r\n        models.Oval = Oval;\r\n        Oval.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var OvalArc = /** @class */ (function () {\r\n            function OvalArc(startAngle, endAngle, sweepRadius, slotRadius, selfIntersect, isolateCaps) {\r\n                if (selfIntersect === void 0) { selfIntersect = false; }\r\n                if (isolateCaps === void 0) { isolateCaps = false; }\r\n                var _this = this;\r\n                this.paths = {};\r\n                var capRoot;\r\n                if (isolateCaps) {\r\n                    capRoot = { models: {} };\r\n                    this.models = { 'Caps': capRoot };\r\n                }\r\n                if (slotRadius <= 0 || sweepRadius <= 0)\r\n                    return;\r\n                startAngle = MakerJs.angle.noRevolutions(startAngle);\r\n                endAngle = MakerJs.angle.noRevolutions(endAngle);\r\n                if (MakerJs.round(startAngle - endAngle) == 0)\r\n                    return;\r\n                if (endAngle < startAngle)\r\n                    endAngle += 360;\r\n                var addCap = function (id, tiltAngle, offsetStartAngle, offsetEndAngle) {\r\n                    var capModel;\r\n                    if (isolateCaps) {\r\n                        capModel = { paths: {} };\r\n                        capRoot.models[id] = capModel;\r\n                    }\r\n                    else {\r\n                        capModel = _this;\r\n                    }\r\n                    return capModel.paths[id] = new MakerJs.paths.Arc(MakerJs.point.fromPolar(MakerJs.angle.toRadians(tiltAngle), sweepRadius), slotRadius, tiltAngle + offsetStartAngle, tiltAngle + offsetEndAngle);\r\n                };\r\n                var addSweep = function (id, offsetRadius) {\r\n                    return _this.paths[id] = new MakerJs.paths.Arc([0, 0], sweepRadius + offsetRadius, startAngle, endAngle);\r\n                };\r\n                addSweep(\"Outer\", slotRadius);\r\n                var hasInner = (sweepRadius - slotRadius) > 0;\r\n                if (hasInner) {\r\n                    addSweep(\"Inner\", -slotRadius);\r\n                }\r\n                var caps = [];\r\n                caps.push(addCap(\"StartCap\", startAngle, 180, 0));\r\n                caps.push(addCap(\"EndCap\", endAngle, 0, 180));\r\n                //the distance between the cap origins\r\n                var d = MakerJs.measure.pointDistance(caps[0].origin, caps[1].origin);\r\n                if ((d / 2) < slotRadius) {\r\n                    //the caps intersect\r\n                    var int = MakerJs.path.intersection(caps[0], caps[1]);\r\n                    if (int) {\r\n                        if (!hasInner || !selfIntersect) {\r\n                            caps[0].startAngle = int.path1Angles[0];\r\n                            caps[1].endAngle = int.path2Angles[0];\r\n                        }\r\n                        if (!selfIntersect && hasInner && int.intersectionPoints.length == 2) {\r\n                            addCap(\"StartCap2\", startAngle, 180, 0).endAngle = int.path1Angles[1];\r\n                            addCap(\"EndCap2\", endAngle, 0, 180).startAngle = int.path2Angles[1] + 360;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return OvalArc;\r\n        }());\r\n        models.OvalArc = OvalArc;\r\n        OvalArc.metaParameters = [\r\n            { title: \"start angle\", type: \"range\", min: -360, max: 360, step: 1, value: 180 },\r\n            { title: \"end angle\", type: \"range\", min: -360, max: 360, step: 1, value: 0 },\r\n            { title: \"sweep\", type: \"range\", min: 0, max: 100, step: 1, value: 50 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 100, step: 1, value: 15 },\r\n            { title: \"self intersect\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Rectangle = /** @class */ (function () {\r\n            function Rectangle() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.paths = {};\r\n                var width;\r\n                var height;\r\n                if (args.length === 2 && !MakerJs.isObject(args[0])) {\r\n                    width = args[0];\r\n                    height = args[1];\r\n                }\r\n                else {\r\n                    var margin = 0;\r\n                    var m;\r\n                    if (MakerJs.isModel(args[0])) {\r\n                        m = MakerJs.measure.modelExtents(args[0]);\r\n                        if (args.length === 2) {\r\n                            margin = args[1];\r\n                        }\r\n                    }\r\n                    else {\r\n                        //use measurement\r\n                        m = args[0];\r\n                    }\r\n                    this.origin = MakerJs.point.subtract(m.low, [margin, margin]);\r\n                    width = m.high[0] - m.low[0] + 2 * margin;\r\n                    height = m.high[1] - m.low[1] + 2 * margin;\r\n                }\r\n                this.paths = new models.ConnectTheDots(true, [[0, 0], [width, 0], [width, height], [0, height]]).paths;\r\n            }\r\n            return Rectangle;\r\n        }());\r\n        models.Rectangle = Rectangle;\r\n        Rectangle.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Ring = /** @class */ (function () {\r\n            function Ring(outerRadius, innerRadius) {\r\n                this.paths = {};\r\n                var radii = {\r\n                    \"Ring_outer\": outerRadius,\r\n                    \"Ring_inner\": innerRadius\r\n                };\r\n                for (var id in radii) {\r\n                    var r = radii[id];\r\n                    if (r === undefined || r <= 0)\r\n                        continue;\r\n                    this.paths[id] = new MakerJs.paths.Circle(MakerJs.point.zero(), r);\r\n                }\r\n            }\r\n            return Ring;\r\n        }());\r\n        models.Ring = Ring;\r\n        Ring.metaParameters = [\r\n            { title: \"outer radius\", type: \"range\", min: 0, max: 100, step: 1, value: 50 },\r\n            { title: \"inner radius\", type: \"range\", min: 0, max: 100, step: 1, value: 20 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Belt = /** @class */ (function () {\r\n            function Belt(leftRadius, distance, rightRadius) {\r\n                this.paths = {};\r\n                var left = new MakerJs.paths.Arc([0, 0], leftRadius, 0, 360);\r\n                var right = new MakerJs.paths.Arc([distance, 0], rightRadius, 0, 360);\r\n                var angles = MakerJs.solvers.circleTangentAngles(left, right);\r\n                if (!angles) {\r\n                    this.paths[\"Belt\"] = new MakerJs.paths.Circle(Math.max(leftRadius, rightRadius));\r\n                }\r\n                else {\r\n                    angles = angles.sort(function (a, b) { return a - b; });\r\n                    left.startAngle = angles[0];\r\n                    left.endAngle = angles[1];\r\n                    right.startAngle = angles[1];\r\n                    right.endAngle = angles[0];\r\n                    this.paths[\"Left\"] = left;\r\n                    this.paths[\"Right\"] = right;\r\n                    this.paths[\"Top\"] = new MakerJs.paths.Line(MakerJs.point.fromAngleOnCircle(angles[0], left), MakerJs.point.fromAngleOnCircle(angles[0], right));\r\n                    this.paths[\"Bottom\"] = new MakerJs.paths.Line(MakerJs.point.fromAngleOnCircle(angles[1], left), MakerJs.point.fromAngleOnCircle(angles[1], right));\r\n                }\r\n            }\r\n            return Belt;\r\n        }());\r\n        models.Belt = Belt;\r\n        Belt.metaParameters = [\r\n            { title: \"left radius\", type: \"range\", min: 0, max: 100, value: 30 },\r\n            { title: \"distance between centers\", type: \"range\", min: 0, max: 100, value: 50 },\r\n            { title: \"right radius\", type: \"range\", min: 0, max: 100, value: 15 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var SCurve = /** @class */ (function () {\r\n            function SCurve(width, height) {\r\n                this.paths = {};\r\n                function findRadius(x, y) {\r\n                    return x + (y * y - x * x) / (2 * x);\r\n                }\r\n                var h2 = height / 2;\r\n                var w2 = width / 2;\r\n                var radius;\r\n                var startAngle;\r\n                var endAngle;\r\n                var arcOrigin;\r\n                if (width > height) {\r\n                    radius = findRadius(h2, w2);\r\n                    startAngle = 270;\r\n                    endAngle = 360 - MakerJs.angle.toDegrees(Math.acos(w2 / radius));\r\n                    arcOrigin = [0, radius];\r\n                }\r\n                else {\r\n                    radius = findRadius(w2, h2);\r\n                    startAngle = 180 - MakerJs.angle.toDegrees(Math.asin(h2 / radius));\r\n                    endAngle = 180;\r\n                    arcOrigin = [radius, 0];\r\n                }\r\n                var curve = new MakerJs.paths.Arc(arcOrigin, radius, startAngle, endAngle);\r\n                this.paths['curve_start'] = curve;\r\n                this.paths['curve_end'] = MakerJs.path.moveRelative(MakerJs.path.mirror(curve, true, true), [width, height]);\r\n            }\r\n            return SCurve;\r\n        }());\r\n        models.SCurve = SCurve;\r\n        SCurve.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Slot = /** @class */ (function () {\r\n            function Slot(origin, endPoint, radius, isolateCaps) {\r\n                if (isolateCaps === void 0) { isolateCaps = false; }\r\n                var _this = this;\r\n                this.paths = {};\r\n                var capRoot;\r\n                if (isolateCaps) {\r\n                    capRoot = { models: {} };\r\n                    this.models = { 'Caps': capRoot };\r\n                }\r\n                var addCap = function (id, capPath) {\r\n                    var capModel;\r\n                    if (isolateCaps) {\r\n                        capModel = { paths: {} };\r\n                        capRoot.models[id] = capModel;\r\n                    }\r\n                    else {\r\n                        capModel = _this;\r\n                    }\r\n                    capModel.paths[id] = capPath;\r\n                };\r\n                var a = MakerJs.angle.ofPointInDegrees(origin, endPoint);\r\n                var len = MakerJs.measure.pointDistance(origin, endPoint);\r\n                this.paths['Top'] = new MakerJs.paths.Line([0, radius], [len, radius]);\r\n                this.paths['Bottom'] = new MakerJs.paths.Line([0, -radius], [len, -radius]);\r\n                addCap('StartCap', new MakerJs.paths.Arc([0, 0], radius, 90, 270));\r\n                addCap('EndCap', new MakerJs.paths.Arc([len, 0], radius, 270, 90));\r\n                MakerJs.model.rotate(this, a, [0, 0]);\r\n                this.origin = origin;\r\n            }\r\n            return Slot;\r\n        }());\r\n        models.Slot = Slot;\r\n        Slot.metaParameters = [\r\n            {\r\n                title: \"origin\", type: \"select\", value: [\r\n                    [0, 0],\r\n                    [10, 0],\r\n                    [10, 10]\r\n                ]\r\n            },\r\n            {\r\n                title: \"end\", type: \"select\", value: [\r\n                    [80, 0],\r\n                    [0, 30],\r\n                    [10, 30]\r\n                ]\r\n            },\r\n            { title: \"radius\", type: \"range\", min: 1, max: 50, value: 10 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Square = /** @class */ (function () {\r\n            function Square(side) {\r\n                this.paths = {};\r\n                this.paths = new models.Rectangle(side, side).paths;\r\n            }\r\n            return Square;\r\n        }());\r\n        models.Square = Square;\r\n        Square.metaParameters = [\r\n            { title: \"side\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Star = /** @class */ (function () {\r\n            function Star(numberOfPoints, outerRadius, innerRadius, skipPoints) {\r\n                if (skipPoints === void 0) { skipPoints = 2; }\r\n                this.paths = {};\r\n                if (!innerRadius) {\r\n                    innerRadius = outerRadius * Star.InnerRadiusRatio(numberOfPoints, skipPoints);\r\n                }\r\n                var outerPoints = models.Polygon.getPoints(numberOfPoints, outerRadius);\r\n                var innerPoints = models.Polygon.getPoints(numberOfPoints, innerRadius, 180 / numberOfPoints);\r\n                var allPoints = [];\r\n                for (var i = 0; i < numberOfPoints; i++) {\r\n                    allPoints.push(outerPoints[i]);\r\n                    allPoints.push(innerPoints[i]);\r\n                }\r\n                var model = new models.ConnectTheDots(true, allPoints);\r\n                this.paths = model.paths;\r\n                delete model.paths;\r\n            }\r\n            Star.InnerRadiusRatio = function (numberOfPoints, skipPoints) {\r\n                //formula from http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\r\n                //Cos(Pi()*m/n) / Cos(Pi()*(m-1)/n)\r\n                if (numberOfPoints > 0 && skipPoints > 1 && skipPoints < numberOfPoints / 2) {\r\n                    return Math.cos(Math.PI * skipPoints / numberOfPoints) / Math.cos(Math.PI * (skipPoints - 1) / numberOfPoints);\r\n                }\r\n                return 0;\r\n            };\r\n            return Star;\r\n        }());\r\n        models.Star = Star;\r\n        Star.metaParameters = [\r\n            { title: \"number of sides\", type: \"range\", min: 3, max: 24, value: 8 },\r\n            { title: \"outer radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"inner radius\", type: \"range\", min: 0, max: 100, value: 15 },\r\n            { title: \"skip points (when inner radius is zero)\", type: \"range\", min: 0, max: 12, value: 2 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Text = /** @class */ (function () {\r\n            /**\r\n             * Renders text in a given font to a model.\r\n             * @param font OpenType.Font object.\r\n             * @param text String of text to render.\r\n             * @param fontSize Font size.\r\n             * @param combine Flag (default false) to perform a combineUnion upon each character with characters to the left and right.\r\n             * @param centerCharacterOrigin Flag (default false) to move the x origin of each character to the center. Useful for rotating text characters.\r\n             * @param bezierAccuracy Optional accuracy of Bezier curves.\r\n             * @param opentypeOptions Optional opentype.RenderOptions object.\r\n             * @returns Model of the text.\r\n             */\r\n            function Text(font, text, fontSize, combine, centerCharacterOrigin, bezierAccuracy, opentypeOptions) {\r\n                if (combine === void 0) { combine = false; }\r\n                if (centerCharacterOrigin === void 0) { centerCharacterOrigin = false; }\r\n                var _this = this;\r\n                this.models = {};\r\n                var charIndex = 0;\r\n                var prevDeleted;\r\n                var prevChar;\r\n                var cb = function (glyph, x, y, _fontSize, options) {\r\n                    var charModel = Text.glyphToModel(glyph, _fontSize, bezierAccuracy);\r\n                    charModel.origin = [x, 0];\r\n                    if (centerCharacterOrigin && (charModel.paths || charModel.models)) {\r\n                        var m = MakerJs.measure.modelExtents(charModel);\r\n                        if (m) {\r\n                            var w = m.high[0] - m.low[0];\r\n                            MakerJs.model.originate(charModel, [m.low[0] + w / 2, 0]);\r\n                        }\r\n                    }\r\n                    if (combine && charIndex > 0) {\r\n                        var combineOptions = {};\r\n                        var prev;\r\n                        if (prevDeleted) {\r\n                            //form a temporary complete geometry of the previous character using the previously deleted segments\r\n                            prev = {\r\n                                models: {\r\n                                    deleted: prevDeleted,\r\n                                    char: prevChar\r\n                                }\r\n                            };\r\n                        }\r\n                        else {\r\n                            prev = prevChar;\r\n                        }\r\n                        MakerJs.model.combine(prev, charModel, false, true, false, true, combineOptions);\r\n                        //save the deleted segments from this character for the next iteration\r\n                        prevDeleted = combineOptions.out_deleted[1];\r\n                    }\r\n                    _this.models[charIndex] = charModel;\r\n                    charIndex++;\r\n                    prevChar = charModel;\r\n                };\r\n                font.forEachGlyph(text, 0, 0, fontSize, opentypeOptions, cb);\r\n            }\r\n            /**\r\n             * Convert an opentype glyph to a model.\r\n             * @param glyph Opentype.Glyph object.\r\n             * @param fontSize Font size.\r\n             * @param bezierAccuracy Optional accuracy of Bezier curves.\r\n             * @returns Model of the glyph.\r\n             */\r\n            Text.glyphToModel = function (glyph, fontSize, bezierAccuracy) {\r\n                var charModel = {};\r\n                var firstPoint;\r\n                var currPoint;\r\n                var pathCount = 0;\r\n                function addPath(p) {\r\n                    if (!charModel.paths) {\r\n                        charModel.paths = {};\r\n                    }\r\n                    charModel.paths['p_' + ++pathCount] = p;\r\n                }\r\n                function addModel(m) {\r\n                    if (!charModel.models) {\r\n                        charModel.models = {};\r\n                    }\r\n                    charModel.models['p_' + ++pathCount] = m;\r\n                }\r\n                var p = glyph.getPath(0, 0, fontSize);\r\n                p.commands.map(function (command, i) {\r\n                    var points = [[command.x, command.y], [command.x1, command.y1], [command.x2, command.y2]].map(function (p) {\r\n                        if (p[0] !== void 0) {\r\n                            return MakerJs.point.mirror(p, false, true);\r\n                        }\r\n                    });\r\n                    switch (command.type) {\r\n                        case 'M':\r\n                            firstPoint = points[0];\r\n                            break;\r\n                        case 'Z':\r\n                            points[0] = firstPoint;\r\n                        //fall through to line\r\n                        case 'L':\r\n                            if (!MakerJs.measure.isPointEqual(currPoint, points[0])) {\r\n                                addPath(new MakerJs.paths.Line(currPoint, points[0]));\r\n                            }\r\n                            break;\r\n                        case 'C':\r\n                            addModel(new models.BezierCurve(currPoint, points[1], points[2], points[0], bezierAccuracy));\r\n                            break;\r\n                        case 'Q':\r\n                            addModel(new models.BezierCurve(currPoint, points[1], points[0], bezierAccuracy));\r\n                            break;\r\n                    }\r\n                    currPoint = points[0];\r\n                });\r\n                return charModel;\r\n            };\r\n            return Text;\r\n        }());\r\n        models.Text = Text;\r\n        Text.metaParameters = [\r\n            { title: \"font\", type: \"font\", value: '*' },\r\n            { title: \"text\", type: \"text\", value: 'Hello' },\r\n            { title: \"font size\", type: \"range\", min: 10, max: 200, value: 72 },\r\n            { title: \"combine\", type: \"bool\", value: false },\r\n            { title: \"center character origin\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nMakerJs.version = \"0.17.6\";\n﻿var Bezier = require('bezier-js');\r\n"],"names":["module","exports","abs","Math","min","max","cos","sin","acos","sqrt","pi","PI","ZERO","x","y","z","utils","require","PolyBezier","Bezier","coords","args","forEach","slice","call","arguments","coordlen","length","newargs","point","d","push","higher","len","Error","_3d","this","points","idx","step","order","dims","dimlen","curve","a","align","p1","p2","i","_linear","_t1","_t2","update","svgToBeziers","getABC","n","S","B","E","t","u","projectionratio","um","C","s","abcratio","A","SVGtoBeziers","quadraticFromPoints","p3","abc","cubicFromPoints","d1","dist","d2","selen","lx","ly","bx1","by1","bx2","by2","e1","e2","v1","v2","nc1","nc2","getUtils","prototype","valueOf","toString","pointsToString","toSVG","relative","p","last","join","setRatios","ratios","_lut","verify","print","coordDigest","_print","map","c","pos","newprint","dpoints","derive","computedirection","angle","clockwise","derivative","bind","getLUT","steps","compute","on","error","lut","hits","project","ft","LUT","l","closest","mdist","mpos","t2","get","computeWithRatios","raise","pim","np","k","b","mt","ret","curvature","inflections","normal","__normal3","__normal2","q","r1","r2","q1","q2","m","R","hull","pt","_p","lerp","split","t1","left","right","result","span","extrema","mfn","roots","dim","v","droots","concat","filter","sort","numberSort","indexOf","values","bbox","getminmax","overlaps","lbbox","tbbox","bboxoverlap","offset","nv","reduce","scale","simple","a1","a2","n1","n2","segment","pass1","pass2","distanceFn","o","lli4","copy","ov","rc","outline","d3","d4","reduced","fcurves","bcurves","alen","tlen","graduated","linearDistanceFunction","e","slen","f1","f2","reverse","fs","fe","bs","be","ls","makeline","le","segments","outlineshapes","curveIntersectionThreshold","curves","shapes","shape","makeshape","startcap","virtual","endcap","intersects","lineIntersects","curveintersects","selfintersects","line","mx","my","MX","MY","self","between","results","c1","c2","pairs","r","intersections","pair","pairiteration","arcs","errorThreshold","_iterate","_error","pc","np1","ref","circles","safety","t_s","t_e","np2","np3","arc","prev_arc","done","curr_good","prev_good","t_m","prev_e","getccenter","interval","start","end","instruction","op","lop","instructions","replace","instructionLength","sx","sy","cx","cy","cx2","cy2","normalized","substring","toLowerCase","trim","parseFloat","addCurve","expandbox","normalise","M","makeBezier","term","cvalues","apply","terms","matcher","RegExp","ARGS","splice","test","atan2","pow","crt","tau","quart","nMax","Number","MAX_SAFE_INTEGER","nMin","MIN_SAFE_INTEGER","Tvalues","Cvalues","arcfn","derivativeFn","mt2","dCpts","JSON","parse","stringify","f3","f4","dpt","list","j","approximately","precision","sum","ds","de","ts","te","pointToString","obj","dx1","dy1","dx2","dy2","round","dx","dy","bottom","top","lli8","x1","y1","x2","y2","x3","y3","x4","y4","p4","lli","findbbox","sections","mid","size","shapeintersections","s1","bbox1","s2","bbox2","forward","back","l1","l2","iss","bpl","fpl","tx","ty","m1","m2","pa","pb","u1","discriminant","mp3","phi","sd","kOnly","num","dnm","adk","dk","dd","qdsum","pk","nk","v3","trm","sq","b1","b2","_bbox","c1b","c2b","threshold","cc1","cc2","_","dx1p","dy1p","dx2p","dy2p","mx1","my1","mx2","my2","mx1n","my1n","mx2n","my2n","clone","parent","circular","depth","allParents","allChildren","useBuffer","Buffer","Infinity","_clone","child","proto","__isArray","__isRegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","Object","getPrototypeOf","create","index","attrs","getOwnPropertyDescriptor","set","__objToStr","re","flags","global","ignoreCase","multiline","clonePrototype","ConvexHullGrahamScan","anchorPoint","constructor","Point","_findPolarAngle","addPoint","_sortPoints","h","_checkPoints","getHull","every","unshift","shift","some","define","sortKD","ids","nodeSize","floor","select","inc","log","exp","swapItem","swap","arr","tmp","sqDist","ax","ay","bx","by","kdbush","getX","getY","ArrayType","KDBush","defaultGetX","defaultGetY","Array","range","minX","minY","maxX","maxY","stack","axis","pop","nextAxis","within","qx","qy","MakerJs","tryEval","name","value","eval","detectEnvironment","environmentTypes","WebWorker","BrowserUI","NodeJs","Unknown","char","substr","splitDecimal","toFixed","match","accuracy","String","ceil","isNaN","NaN","createRouteKey","route","converted","newElement","element","travel","modelContext","props","isArray","origin","add","version","environment","unitType","Centimeter","Foot","Inch","Meter","Millimeter","cloneObject","objectToClone","extendObject","target","other","key","isFunction","isNumber","isObject","isPoint","item","isPath","type","isPathLine","pathType","Line","isPathCircle","Circle","radius","isPathArc","Arc","startAngle","endAngle","isPathArcInBezierCurve","bezierData","startT","endT","isModel","paths","models","isChain","links","pathLength","BezierSeed","Cascade","_module","$initial","methodName","_shadow","$result","_this","_apply","fn","carriedArguments","undefined","$reset","$","context","model","path","copyFractionalPart","src","dest","fractionalPart","setFractionalPart","noRevolutions","angleInDegrees","revolutions","toDegrees","angleInRadians","ofArcSpan","ofArcEnd","ofLineInDegrees","ofPointInRadians","pointToFindAngle","subtract","toRadians","ofArcMiddle","ratio","ofPointInDegrees","mirror","mirrorX","mirrorY","linkLineMap","first","reversed","fromEnd","angleToRotate","fromArc","rotate","ofChainLinkJoint","linkA","linkB","linkLines","link","chainLink","walkedPath","pathContext","getLinkLine","newPoint","pointToClone","zero","average","avg","referencePoint","pointOptions","smallest","distance","measure","pointDistance","zero_cos","zero_sin","fromPolar","fromAngleOnCircle","circle","pathEndsMap","verticalIntersectionPoint","verticalLine","nonVerticalSlope","slope","yIntercept","midCircle","midAngle","fromPathEnds","pathOffset","fromSlopeIntersection","lineA","lineB","options","pointOfIntersection","slopeA","lineSlope","slopeB","isSlopeParallel","isSlopeEqual","out_AreOverlapped","isLineOverlapping","excludeTangents","hasSlope","middleMap","ration","seed","BezierCurve","computePoint","middle","midPoint","pointToMirror","rounded","pointContext","pointToRotate","rotationOrigin","pointAngleInRadians","pointToScale","scaleValue","distort","pointToDistort","scaleX","scaleY","copyLayer","pathA","pathB","layer","addTo","childPath","parentModel","pathId","overwrite","addPath","copyPropsMap","srcCircle","destCircle","srcArc","destArc","srcLine","destLine","srcSeed","destSeed","controls","pathToClone","copyProps","srcPath","destPath","mirrorMap","xor","mirrored","pathToMirror","newPath","moveMap","move","pathToMove","delta","moveRelativeMap","moveRelative","moveTemporary","pathsToMove","deltas","task","pathToOffset","rotateMap","pathToRotate","scaleMap","pathToScale","distortMap","EllipticArc","ellipse","Ellipse","pathToDistort","distorted","converge","useOriginA","useOriginB","lines","useOrigin","setP","setPoint","alterMap","toPoints","numberOfPoints","base","alterLength","pathToAlter","numberOfKeyPointsMap","maxPointDistance","minPoints","toKeyPoints","maxArcFacet","curveKeyPoints","findChains","chains","loose","chain","numberOfKeyPoints","center","pathToCenter","pathExtents","high","low","pathToZero","path_1","breakPathFunctionMap","pointOfBreak","angleAtBreakPoint","isAngleEqual","angleAtBreakPointBetween","tries","isBetween","getAngleStrictlyBetweenArcAngles","savedEndAngle","isBetweenPoints","savedEndPoint","breakAtPoint","pathToBreak","_i","getSpan","pointA","pointB","largeArc","smallestRadius","origins","intersection","spans","intersectionPoints","angles","isBetweenArcAngles","perpendiculars","midpoint","Chord","arcPoints","Parallel","toLine","nearPoint","angleOfLine","getNewOrigin","offsetAngle","nearness","newOrigins","newOrigin","overWrite","id","getSimilarPathId","addModel","childModel","childModelId","getSimilarModelId","getSimilarId","newId","modelId","modelToScale","scaleOrigin","typeName","caption","anchor","addDistortedPath","bezierAccuracy","distortedPath","walk","walkRecursive","routeKey","newOffset","onPath","walkedModel","childId","beforeChildWalk","afterChildWalk","addCaption","text","leftAnchorPoint","rightAnchorPoint","modelToClone","countChildModels","count","getAllCaptionsOffset","captions","tryAddCaption","wm","originate","modelToOriginate","innerOriginate","modelToCenter","centerX","centerY","modelExtents","modelToMirror","newModel","units","pathMirrored","childModelToMirror","childModelMirrored","modelToMove","prefixPathIds","modelToPrefix","prefix","walkedPaths","modelToRotate","offsetOrigin","modelToDistort","bezierPartsByLayer","getBezierSeeds","byLayers","_loop_1","layer_1","distortedChild","convertUnits","modeltoConvert","destUnitType","isValidUnit","conversionScale","walkPaths","callback","modelToZero","zeroX","zeroY","getNonZeroSegments","pathToSegment","breakPoint","segment1","segment2","getPointsOnPath","popOptions","endpointsOnPath","isPointOnPath","breakAllPathsAtIntersections","modelToBreak","modelToIntersect","checkIsInside","modelToBreakAtlas","modelToIntersectAtlas","farPoint","crossedPaths","overlappedSegments","walkModelToBreakOptions","outerWalkedPath","absolutePath","overlapped","uniqueForeignIntersectionPoints","thisPath","broken","walkModelToIntersectOptions","innerWalkedPath","isMeasurementOverlapping","pathMap","crossedPath","foreignWalkedPath","foreignPath","isPathEqual","duplicate","path1Offset","path2Offset","foreignIntersection","foreignPathEndPoints","pointsToCheck","subSegments","newSegment","breakAlongForeignPath","innerWalkedModel","innerModelMeasurement","modelMap","pointInsideOptions","measureAtlas","isInside","isPointInsideModel","out_intersectionPoints","addOrDeleteSegments","includeInside","includeOutside","keepDuplicates","atlas","trackDeleted","addSegment","pathIdBase","newRouteKey","addedPath","measurement","modelsMeasured","savedMeasurement","combine","modelA","modelB","includeAInsideB","includeAOutsideB","includeBInsideA","includeBOutsideA","opts","trimDeadEnds","pointMatchingDistance","out_deleted","measureA","Atlas","measureB","measureModels","measureBoth","increase","pathsA","pathsB","which","deletedPath","reason","crossedPathsA","crossedPathsB","compareAll","checkForEqualOverlaps","shouldKeep","removeDeadEnds","wp","isPathInsideModel","breakPathsAtIntersections","combineIntersection","combineSubtraction","combineUnion","Collector","comparer","collections","addItemToCollection","found","findCollection","collection","items","action","removeCollection","removeItemFromCollection","getCollectionsOfMultiple","cb","_kdbush","PointGraph","reset","insertedCount","graph","merged","insertValue","insertValueIdAtPoint","valueId","el","pointId","pgx","existed","valueIds","mergePoints","withinDistance","kEls","kdId","_loop_2","this_1","mergeIndexElements","mergeNearestSinglePoints","singles","mergeIds","byDistance","keep","remove","forEachPoint","getIdOfPoint","px","getElementAtPoint","checkForOverlaps","refPaths","isOverlapping","overlapUnion","currIndex","root","arcRef","simplify","modelToSimplify","compareCircles","circleA","circleB","scalarMatchingDistance","similarArcs","similarCircles","similarLines","circleRef","lineRef","walkOptions","arcRefs","isArcOverlapping","arcA","arcB","aEndsInB","bEndsInA","ordered","circleRefs","box","expansion","isolateCaps","OvalArc","Ring","Slot","expand","pathToExpand","straighten","bevel","close","arcSpan","joints","jointAngleInRadians","circumscribedRadius","Polygon","ends","ConnectTheDots","expandPaths","modelToExpand","combineOptions","expansions","caps","lastFarPoint","expandedPathModel","roundCaps","straightCaps","straightened","getEndlessChains","endlessChains","endless","modelToOutline","inside","expanded","closed","toNewModel","getClosedGeometries","childCount","table","addConversion","srcUnitType","row","addBaseConversion","tryUnit","angleA","angleB","pathAreEqualMap","isPointEqual","isPointOnSlope","isPointOnCircle","withinPointDistance","pathAOffset","pathBOffset","getResult","isPointDistinct","pointToCheck","pointArray","onPathMap","cachedLineSlope","slopes","atan","averageYs","baseMeasure","addMeasure","augmentBaseMeasure","getExtreme","basePoint","augment","isArcSpanOverlapping","checkAngles","checkAngle","valueInQuestion","limitA","limitB","exclusive","angleInQuestion","pointInQuestion","oneDimension","origin_value","end_value","isArcConcaveTowardsPoint","towardsPoint","midPointToNearPoint","isBezierSeedLinear","graham_scan","serializePoint","isPointArrayClockwise","out_result","convexHull","pointsInOrder","endPoint","hullPoints","keyPoints","getExtremePoint","isChainClockwise","chainContext","checkPoints","checkPoint","pathExtentsMap","pathToMeasure","addOffset","extremeAngle","xyAngle","extremePoint","pathLengthMap","modelToMeasure","increaseParentModel","childRoute","childMeasurement","measureToclone","parentRoute","parentRouteKey","measureToAugment","width","height","computeLength","modelPathLength","total","yAtX","getAngledBounds","rotateModel","rotatePaths","rotation","hexSolution","bounds","tip","tipX","altRight","altLeft","altitudeViaSide","radiusViaSide","solvers","equilateralSide","peakRadii","peakNum","radiusViaPeak","altitudeViaPeak","equilateralAltitude","peakX","leftGap","peakGap","minHalfGap","boundingHexagon","originalMeasure","scratch","notes","boundRotations","bound","side","isCircular","perimeters","loopIndex","solution","boundCopy","getFarPoint","lineToFarPoint","measureFarPoint","intersectOptions","farInt","pointsToAdd","added","addUniquePoints","exporter","toJson","itemToExport","indentation","tryGetModelUnits","colors","black","red","yellow","lime","aqua","blue","fuchsia","white","gray","maroon","orange","olive","green","teal","navy","purple","silver","importer","parseNumericList","matches","exec","toDXF","fontSize","layerIds","doc","entities","header","tables","modelToExport","exporterOptions","colorLayerOptions","layerOptions","color","defaultLayer","parentLayer","layerId","appendVertex","bulge","polyline","polylineEntity","vertices","tan","vertex","endPoints","lastLink","startPoint","textHeight","halign","valign","chainsOnLayers","usePOLYLINE","chainOnLayer","entityArray","entity","dxfUnit","lineTypes","description","patternLength","layerTable","layers","layerColor","layerOut","layersOut","dxf","append","section","sectionFn","lineTypesOut","lineTypeOut","lineType","lineTypeTableName","lineTypeTable","lineTypeId","layerTableName","outputDocument","equilateral","sideLength","altitude","solveTriangleSSS","lengthA","lengthB","lengthC","solveTriangleASA","oppositeAngleInDegrees","lengthOfSideBetweenAngles","otherAngleInDegrees","angleOppositeSide","circleTangentAngles","inner","tangentAngles","connect","diff","int","path1Angles","connectAngle","moveTemp","pathsToOffset","swapOffsets","offsets","swapAngles","temp","path2Angles","pointsFromAnglesOnCircle","anglesInDegrees","getAnglesWithinArc","anglesWithinArc","lineToCircle","clonedLine","lineAngleNormal","lineAngle","unRotate","resultAngle","unrotated","lineY","lineYabs","anglesOfIntersection","intersectionBetweenEndpoints","angleOfX","intersectRadians","asin","intersectDegrees","intersectX","circleToCircle","circle1","circle2","c2Angle","bothAngles","oneAngle","c1IntersectionAngle","c2IntersectionAngle","arc1","arc2","arc1Angles","arc2Angles","i1","i2","arcAngles","circleAngles","arcAngle","findCorrespondingAngleIndex","line1","line2","intersectionPoint","path1","path2","propertyNamesMap","getPointProperties","pathToInspect","pointProperty","propertyName","propertyNames","getMatchingPointProperties","pathAProperties","pathBProperties","makeMatch","pointProperties","isStart","oppositePoint","check","iA","iB","populateShardPointsFromReferenceCircle","filletRadius","properties","referenceCircle","circleIntersection","shardPoint","guidePathMap","getGuidePath","guideRadius","guideArcShard","pathToShard","shardStart","cloneAndBreakPath","filletResultMap","getFilletResult","filletCenter","testFilletResult","getDogboneResult","filletAngle","clipPath","originalValue","guideLine","guideLineAngle","dogbone","commonProperty","totalLength","lengths","getLineRatio","midRatioPoint","bisectionAngle","filletArc","fillet","guidePaths","otherPathShardPoint","guidePath","filletSpan","chainFillet","traditional","chainToFillet","filletSpec","kit","construct","ctor","F","getParameterValues","parameters","metaParams","metaParameters","linkEndpoint","beginning","beziers","pointGraphsByLayer","chainsByLayer","ignored","pointGraph","shallow","unifyBeziers","checkIsBezier","rootModel","getBezierModels","swapBezierPathsWithSeeds","containChainsOptions","containedChains","_loop_3","layer_2","chainFound","chainNotFound","followLink","currLink","firstLink","next","nextPoint","nextEl","nextLink","linkedPaths","valueIndex","followLinks","checkEndless","contain","alternateDirection","allChains","chainsAsModels","parents","firstPath","otherChain","contains","alternate","shouldBeClockwise","isClockwise","getContainment","tempKey","tempLayerKey","bezierSeeds","newPaths","findSingleChain","singleChain","cycle","amount","removeDuplicateEnds","startAt","detachFromOldModel","distanceOrDistances","maxPoints","distanceArray","di","offsetPathPoints","DeadEndFinder","pointMap","removed","ordinals","load","pathRef","findDeadEnds","_loop_4","this_2","removePath","current","otherPointId","getOtherPointId","otherElement","removeValue","appendQueue","otherOrdinal","deadEndFinder","XmlTag","innerText","escapeString","escape","code","getOpeningTag","selfClose","attrName","attrValue","getInnerText","innerTextEscaped","getClosingTag","closingTags","wrap","content","condition","facetSizeToResolution","arcOrCircle","facetSize","chainToJscadScript","head","tail","exit","reverseTail","beginMap","circleOptions","resolution","arcOptions","startangle","endangle","appendMap","large","makePhasedCallback","originalCb","phaseStart","phaseSpan","status","progress","toJscadCAG","jscadCAG","jsCadCagOptions","convertChainsTo2D","fromPoints","augend","addend","union","minuend","subtrahend","convertToT","subtraction","adds","complete","unionize","statusCallback","addChains","cs","cag","subtracts","subtractChains","chainsResult","closedCount","resultMap","flatAdds","toJscadCSG","convert2Dto3D","extrude","csg","translate","to2D","to3D","union3D","result2D","csgs","toJscadScript","_chainToJscadScript","scriptUnion","scriptSubtraction","nl","indent","functionName","toJscadSTL","CAG","stlSerializer","serialize","binary","toPDF","fontName","stroke","exportUnits","scaledModel","single","pathData","pathToSVGPathData","chainToSVGPathData","fixedPath","font","textCenter","widthOfString","heightOfString","textOffset","chainLinkToPathDataMap","svgCoords","correctArc","offsetPoint","firstPoint","startSvgPathData","svgArcData","svgBezierData","svgPathDataMap","pathToExport","exportOffset","clockwiseCircle","getPathDataByLayer","pathDataByLayer","doChains","svgCircleData","halfCircle","sign","final","increasing","toSVGPathData","fillRule","findChainsOptions","pathDataArrayByLayer","pathDataStringByLayer","forcePush","elements","cssStyle","elOpts","val","strokeWidth","fill","addSvgAttrs","className","createElement","tagname","scalingStroke","tag","fixPath","pathToFix","annotate","strokeLineCap","useSvgPathOnly","viewBox","itemToExportIsModel","unitSystem","useSvgUnit","svgUnit","scaleConversion","svgAttrs","unit","svgUnitType","svgTag","groupAttrs","svgGroup","layerId1","drawText","textPoint","drawPath","flow","addFlowMarks","arrowEnd","beginModel","modelGroup","endModel","circleInPaths","pointToFix","pointMirroredY","fixPoint","layerId2","layerGroup","captionTags","captionGroup","fromSVGPathData","pathCount","getPoint","cmd","from","data","absolute","lineTo","prevCommand","commandMatches","rx","ry","decreasing","elliptic","xAxis","scaleUp","control1","control2","prevControl2","prev","command","control","prevControl","currPoint","regexpCommands","dataString","currCmd","toUpperCase","layout","getChildPlacement","baseline","measureParent","parentTop","cpa","xMap","childMeasure","xRatio","cp","firstX","lastX","moveAndRotate","cloneTo","dimension","itemToClone","margin","measureFn","moveFn","cloneToColumn","cloneToRow","getMargins","cloneToAlternatingRows","xCount","yCount","spacingFn","spacing","xMargin","childrenOnPath","chosenPath","onPathLength","childrenOnChain","onChain","rotated","chainLength","relatives","absolutes","ab","endLink","miterAngles","cloneToRadial","rotateFn","cloneToGrid","margins","cloneToBrick","yMargin","cloneToHoneycomb","hex","hasLib","ensureBezierLib","getScratch","bezierJsPoints","BezierToSeed","getIPoint","parentRange","seedToBezier","TPoint","getError","arcReversed","tSpan","bp","ap","getLargestArc","lastGoodArc","upper","lower","getArcs","bc","getActualBezierRange","endpoints","tPoints","endpointDistancetoStart","isArrayArg0","getExtrema","extremaSpan","seedsByLayer","addToLayer","pathToAdd","endLinks","actualBezierRanges","getChainBezierRange","piece","title","controlPointsForCircularCubic","arcSpanInRadians","bezierSeedFromArc","isPointArgs0","realArgs","numArgs","distortX","distortY","subSpan","subArc","getPoints","arg","isClosed","skipZeroDistance","numberOfSides","firstCornerAngleInDegrees","circumscribed","Holes","holeRadius","BoltCircle","boltRadius","boltCount","firstBoltAngleInDegrees","BoltRectangle","Dogbone","style","bottomless","maxRadius","apexes","maxSide","SQRT2","Dome","w2","wt","hr","RoundRectangle","wr","Oval","sweepRadius","slotRadius","selfIntersect","capRoot","addCap","tiltAngle","offsetStartAngle","offsetEndAngle","capModel","addSweep","offsetRadius","hasInner","Rectangle","outerRadius","innerRadius","radii","Belt","leftRadius","rightRadius","SCurve","findRadius","arcOrigin","h2","capPath","Square","Star","skipPoints","InnerRadiusRatio","outerPoints","innerPoints","allPoints","Text","centerCharacterOrigin","opentypeOptions","prevDeleted","prevChar","charIndex","forEachGlyph","glyph","_fontSize","charModel","glyphToModel","w","deleted","getPath","commands"],"sourceRoot":""}